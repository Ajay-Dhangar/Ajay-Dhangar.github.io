"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[31520],{66950:a=>{a.exports=JSON.parse('{"docusaurus-plugin-content-docs":{"default":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/code-harbor-hub/docs","tagsPath":"/code-harbor-hub/docs/tags","editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs","editUrlLocalized":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/i18n/en/docusaurus-plugin-content-docs/current","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/code-harbor-hub/code-harbor-hub/sidebars.js","contentPath":"/home/runner/work/code-harbor-hub/code-harbor-hub/docs","contentPathLocalized":"/home/runner/work/code-harbor-hub/code-harbor-hub/i18n/en/docusaurus-plugin-content-docs/current","docs":[{"id":"dsa/dsa","title":"Data Structures and Algorithms","description":"","source":"@site/docs/dsa/dsa.md","sourceDirName":"dsa","slug":"/dsa/","permalink":"/code-harbor-hub/docs/dsa/","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/dsa/dsa.md","tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710062316,"formattedLastUpdatedAt":"Mar 10, 2024","frontMatter":{"id":"dsa","title":"Data Structures and Algorithms","sidebar_label":"DSA"},"sidebar":"tutorialSidebar","previous":{"title":"Switch Statement","permalink":"/code-harbor-hub/docs/javascript/switch-in-javascript"}},{"id":"features","title":"Features of  CodeHarborHub Documentation","description":"Diagrams","source":"@site/docs/features.md","sourceDirName":".","slug":"/features","permalink":"/code-harbor-hub/docs/features","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/features.md","tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709485088,"formattedLastUpdatedAt":"Mar 3, 2024","sidebarPosition":3,"frontMatter":{"id":"features","sidebar_position":3,"title":"Features of  CodeHarborHub Documentation","sidebar_label":"Features"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/code-harbor-hub/docs/intro"},"next":{"title":"JavaScript","permalink":"/code-harbor-hub/docs/category/javascript"}},{"id":"index","title":"Documentation for Learning and Teaching CodeHarborHub","description":"Welcome to the CodeHarborHub documentation! Now that you\'re here, you\'re probably wondering what CodeHarborHub is and what you can do with it. This documentation is intended to help you get started with CodeHarborHub and to provide you with a comprehensive guide to the features and functionality of the platform.","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/code-harbor-hub/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/index.md","tags":[],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708513327,"formattedLastUpdatedAt":"Feb 21, 2024","sidebarPosition":1,"frontMatter":{"title":"Documentation for Learning and Teaching CodeHarborHub","sidebar_label":"Documentation","sidebar_position":1,"slug":"/"},"sidebar":"tutorialSidebar","next":{"title":"Introduction","permalink":"/code-harbor-hub/docs/intro"}},{"id":"intro","title":"Introduction to CodeHarborHub Documentation","description":"Welcome to the CodeHarborHub documentation! This documentation is intended to help you get started with CodeHarborHub and to provide you with a comprehensive guide to the features and functionality of the platform.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/code-harbor-hub/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/intro.md","tags":[],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708513327,"formattedLastUpdatedAt":"Feb 21, 2024","sidebarPosition":2,"frontMatter":{"title":"Introduction to CodeHarborHub Documentation","sidebar_label":"Introduction","sidebar_position":2,"id":"intro"},"sidebar":"tutorialSidebar","previous":{"title":"Documentation","permalink":"/code-harbor-hub/docs/"},"next":{"title":"Features","permalink":"/code-harbor-hub/docs/features"}},{"id":"javascript/all-about-numbers","title":"All About Numbers in JavaScript","description":"In the JavaScript programming language, numbers are used to represent numerical values. In this section, you will learn how to create and manipulate numbers in JavaScript. You will also learn about the different methods that can be used to manipulate numbers. We are going to cover the following topics in this section:","source":"@site/docs/javascript/numbers.md","sourceDirName":"javascript","slug":"/javascript/all-about-numbers","permalink":"/code-harbor-hub/docs/javascript/all-about-numbers","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/numbers.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Numbers","permalink":"/code-harbor-hub/docs/tags/numbers"},{"label":"Number Properties","permalink":"/code-harbor-hub/docs/tags/number-properties"},{"label":"Number Methods","permalink":"/code-harbor-hub/docs/tags/number-methods"},{"label":"toString","permalink":"/code-harbor-hub/docs/tags/to-string"},{"label":"toFixed","permalink":"/code-harbor-hub/docs/tags/to-fixed"},{"label":"toPrecision","permalink":"/code-harbor-hub/docs/tags/to-precision"},{"label":"valueOf","permalink":"/code-harbor-hub/docs/tags/value-of"},{"label":"parseInt","permalink":"/code-harbor-hub/docs/tags/parse-int"},{"label":"parseFloat","permalink":"/code-harbor-hub/docs/tags/parse-float"},{"label":"isNaN","permalink":"/code-harbor-hub/docs/tags/is-na-n"},{"label":"isFinite","permalink":"/code-harbor-hub/docs/tags/is-finite"},{"label":"Number","permalink":"/code-harbor-hub/docs/tags/number"},{"label":"MAX_VALUE","permalink":"/code-harbor-hub/docs/tags/max-value"},{"label":"MIN_VALUE","permalink":"/code-harbor-hub/docs/tags/min-value"},{"label":"POSITIVE_INFINITY","permalink":"/code-harbor-hub/docs/tags/positive-infinity"},{"label":"NEGATIVE_INFINITY","permalink":"/code-harbor-hub/docs/tags/negative-infinity"},{"label":"EPSILON","permalink":"/code-harbor-hub/docs/tags/epsilon"},{"label":"MIN_SAFE_INTEGER","permalink":"/code-harbor-hub/docs/tags/min-safe-integer"},{"label":"MAX_SAFE_INTEGER","permalink":"/code-harbor-hub/docs/tags/max-safe-integer"},{"label":"Number Object","permalink":"/code-harbor-hub/docs/tags/number-object"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709995643,"formattedLastUpdatedAt":"Mar 9, 2024","sidebarPosition":14,"frontMatter":{"id":"all-about-numbers","title":"All About Numbers in JavaScript","sidebar_label":"Numbers","sidebar_position":14,"tags":["JavaScript","Numbers","Number Properties","Number Methods","toString","toFixed","toPrecision","valueOf","parseInt","parseFloat","isNaN","isFinite","Number","MAX_VALUE","MIN_VALUE","POSITIVE_INFINITY","NEGATIVE_INFINITY","EPSILON","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","Number Object"],"description":"In the JavaScript programming language, numbers are used to represent numerical values. In this section, you will learn how to create and manipulate numbers in JavaScript. You will also learn about the different methods that can be used to manipulate numbers. We are going to cover the following topics in this section:"},"sidebar":"tutorialSidebar","previous":{"title":"Strings in JavaScript","permalink":"/code-harbor-hub/docs/javascript/all-about-strings"},"next":{"title":"Arrays","permalink":"/code-harbor-hub/docs/javascript/arrays-in-javascript"}},{"id":"javascript/all-about-strings","title":"All Basic About Strings in JavaScript","description":"In the JavaScript programming language, strings are text that is displayed on the screen. They are used to store and manipulate text. In this section, you will learn how to create and manipulate strings in JavaScript. You will also learn about the different methods that can be used to manipulate strings. We are going to cover the following topics in this section:","source":"@site/docs/javascript/strings.md","sourceDirName":"javascript","slug":"/javascript/all-about-strings","permalink":"/code-harbor-hub/docs/javascript/all-about-strings","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/strings.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Strings","permalink":"/code-harbor-hub/docs/tags/strings"},{"label":"String Methods","permalink":"/code-harbor-hub/docs/tags/string-methods"},{"label":"Template Literals","permalink":"/code-harbor-hub/docs/tags/template-literals"},{"label":"Escape Characters","permalink":"/code-harbor-hub/docs/tags/escape-characters"},{"label":"String Length","permalink":"/code-harbor-hub/docs/tags/string-length"},{"label":"toUpperCase","permalink":"/code-harbor-hub/docs/tags/to-upper-case"},{"label":"toLowerCase","permalink":"/code-harbor-hub/docs/tags/to-lower-case"},{"label":"charAt","permalink":"/code-harbor-hub/docs/tags/char-at"},{"label":"indexOf","permalink":"/code-harbor-hub/docs/tags/index-of"},{"label":"lastIndexOf","permalink":"/code-harbor-hub/docs/tags/last-index-of"},{"label":"includes","permalink":"/code-harbor-hub/docs/tags/includes"},{"label":"startsWith","permalink":"/code-harbor-hub/docs/tags/starts-with"},{"label":"endsWith","permalink":"/code-harbor-hub/docs/tags/ends-with"},{"label":"slice","permalink":"/code-harbor-hub/docs/tags/slice"},{"label":"substring","permalink":"/code-harbor-hub/docs/tags/substring"},{"label":"substr","permalink":"/code-harbor-hub/docs/tags/substr"},{"label":"replace","permalink":"/code-harbor-hub/docs/tags/replace"},{"label":"split","permalink":"/code-harbor-hub/docs/tags/split"},{"label":"trim","permalink":"/code-harbor-hub/docs/tags/trim"},{"label":"concat","permalink":"/code-harbor-hub/docs/tags/concat"},{"label":"repeat","permalink":"/code-harbor-hub/docs/tags/repeat"},{"label":"padStart","permalink":"/code-harbor-hub/docs/tags/pad-start"},{"label":"padEnd","permalink":"/code-harbor-hub/docs/tags/pad-end"},{"label":"match","permalink":"/code-harbor-hub/docs/tags/match"},{"label":"search","permalink":"/code-harbor-hub/docs/tags/search"},{"label":"localeCompare","permalink":"/code-harbor-hub/docs/tags/locale-compare"},{"label":"charCodeAt","permalink":"/code-harbor-hub/docs/tags/char-code-at"},{"label":"fromCharCode","permalink":"/code-harbor-hub/docs/tags/from-char-code"},{"label":"fromCodePoint","permalink":"/code-harbor-hub/docs/tags/from-code-point"},{"label":"codePointAt","permalink":"/code-harbor-hub/docs/tags/code-point-at"},{"label":"normalize","permalink":"/code-harbor-hub/docs/tags/normalize"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709995643,"formattedLastUpdatedAt":"Mar 9, 2024","sidebarPosition":13,"frontMatter":{"id":"all-about-strings","title":"All Basic About Strings in JavaScript","sidebar_label":"Strings in JavaScript","sidebar_position":13,"tags":["JavaScript","Strings","String Methods","Template Literals","Escape Characters","String Length","toUpperCase","toLowerCase","charAt","indexOf","lastIndexOf","includes","startsWith","endsWith","slice","substring","substr","replace","split","trim","concat","repeat","padStart","padEnd","match","search","localeCompare","charCodeAt","fromCharCode","fromCodePoint","codePointAt","normalize"],"description":"In the JavaScript programming language, strings are text that is displayed on the screen. They are used to store and manipulate text. In this section, you will learn how to create and manipulate strings in JavaScript. You will also learn about the different methods that can be used to manipulate strings. We are going to cover the following topics in this section:"},"sidebar":"tutorialSidebar","previous":{"title":"Events","permalink":"/code-harbor-hub/docs/javascript/events-in-javascript"},"next":{"title":"Numbers","permalink":"/code-harbor-hub/docs/javascript/all-about-numbers"}},{"id":"javascript/arrays-in-javascript","title":"Arrays in JavaScript for Beginners","description":"In the JavaScript programming language, arrays are used to store multiple values in a single variable. In this section, you will learn how to create and manipulate arrays in JavaScript. You will also learn about the different methods that can be used to manipulate arrays. We are going to cover the following topics in this section:","source":"@site/docs/javascript/arrays.md","sourceDirName":"javascript","slug":"/javascript/arrays-in-javascript","permalink":"/code-harbor-hub/docs/javascript/arrays-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/arrays.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Arrays","permalink":"/code-harbor-hub/docs/tags/arrays"},{"label":"Array Methods","permalink":"/code-harbor-hub/docs/tags/array-methods"},{"label":"Array Destructuring","permalink":"/code-harbor-hub/docs/tags/array-destructuring"},{"label":"Array Properties","permalink":"/code-harbor-hub/docs/tags/array-properties"},{"label":"Array Iterators","permalink":"/code-harbor-hub/docs/tags/array-iterators"},{"label":"Array Object","permalink":"/code-harbor-hub/docs/tags/array-object"},{"label":"Array Length","permalink":"/code-harbor-hub/docs/tags/array-length"},{"label":"Access Array Elements","permalink":"/code-harbor-hub/docs/tags/access-array-elements"},{"label":"Change Array Elements","permalink":"/code-harbor-hub/docs/tags/change-array-elements"},{"label":"Add Array Elements","permalink":"/code-harbor-hub/docs/tags/add-array-elements"},{"label":"Remove Array Elements","permalink":"/code-harbor-hub/docs/tags/remove-array-elements"},{"label":"Loop Through Array","permalink":"/code-harbor-hub/docs/tags/loop-through-array"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709995643,"formattedLastUpdatedAt":"Mar 9, 2024","sidebarPosition":15,"frontMatter":{"id":"arrays-in-javascript","title":"Arrays in JavaScript for Beginners","sidebar_label":"Arrays","sidebar_position":15,"tags":["JavaScript","Arrays","Array Methods","Array Destructuring","Array Properties","Array Methods","Array Iterators","Array Object","Array Destructuring","Array Length","Access Array Elements","Change Array Elements","Add Array Elements","Remove Array Elements","Loop Through Array","Array Methods","Array Destructuring"],"description":"In the JavaScript programming language, arrays are used to store multiple values in a single variable. In this section, you will learn how to create and manipulate arrays in JavaScript. You will also learn about the different methods that can be used to manipulate arrays. We are going to cover the following topics in this section:"},"sidebar":"tutorialSidebar","previous":{"title":"Numbers","permalink":"/code-harbor-hub/docs/javascript/all-about-numbers"},"next":{"title":"Objects","permalink":"/code-harbor-hub/docs/javascript/objects-in-javascript"}},{"id":"javascript/basic-javascript","title":"Basic JavaScript Concepts","description":"Basic concepts of JavaScript. Learn about displaying output in JavaScript, JavaScript display possibilities, and more.","source":"@site/docs/javascript/basic-js.md","sourceDirName":"javascript","slug":"/javascript/basic-javascript","permalink":"/code-harbor-hub/docs/javascript/basic-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/basic-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Introduction of js","permalink":"/code-harbor-hub/docs/tags/introduction-of-js"},{"label":"Introduction of JavaScript","permalink":"/code-harbor-hub/docs/tags/introduction-of-java-script"},{"label":"Basic JavaScript Concepts","permalink":"/code-harbor-hub/docs/tags/basic-java-script-concepts"},{"label":"basic js concepts","permalink":"/code-harbor-hub/docs/tags/basic-js-concepts"},{"label":"basic js","permalink":"/code-harbor-hub/docs/tags/basic-js"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708705481,"formattedLastUpdatedAt":"Feb 23, 2024","sidebarPosition":3,"frontMatter":{"id":"basic-javascript","title":"Basic JavaScript Concepts","sidebar_label":"Basic JavaScript","sidebar_position":3,"tags":["JavaScript","Introduction of js","Introduction of JavaScript","Basic JavaScript Concepts","basic js concepts","basic js"],"description":"Basic concepts of JavaScript. Learn about displaying output in JavaScript, JavaScript display possibilities, and more."},"sidebar":"tutorialSidebar","previous":{"title":"Where to JavaScript","permalink":"/code-harbor-hub/docs/javascript/where-to-js"},"next":{"title":"Statement in JavaScript","permalink":"/code-harbor-hub/docs/javascript/satatement-in-js"}},{"id":"javascript/comments-in-javascript","title":"Comments in JavaScript","description":"Write comments in JavaScript to explain the code and make it more readable. Learn about single-line comments and multi-line comments in JavaScript.","source":"@site/docs/javascript/comments-js.md","sourceDirName":"javascript","slug":"/javascript/comments-in-javascript","permalink":"/code-harbor-hub/docs/javascript/comments-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/comments-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Comments in JavaScript","permalink":"/code-harbor-hub/docs/tags/comments-in-java-script"},{"label":"comments in js","permalink":"/code-harbor-hub/docs/tags/comments-in-js"},{"label":"JavaScript comments","permalink":"/code-harbor-hub/docs/tags/java-script-comments"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708705481,"formattedLastUpdatedAt":"Feb 23, 2024","sidebarPosition":6,"frontMatter":{"id":"comments-in-javascript","title":"Comments in JavaScript","sidebar_label":"Comments in JavaScript","sidebar_position":6,"tags":["JavaScript","Comments in JavaScript","comments in js","JavaScript comments"],"description":"Write comments in JavaScript to explain the code and make it more readable. Learn about single-line comments and multi-line comments in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Syntax of JavaScript","permalink":"/code-harbor-hub/docs/javascript/syntax-of-js"},"next":{"title":"Variables in JavaScript","permalink":"/code-harbor-hub/docs/javascript/variables-in-javascript"}},{"id":"javascript/const-in-javascript","title":"Const Keyword in JavaScript","description":"What is the const keyword in JavaScript and how to use it.","source":"@site/docs/javascript/const-js.md","sourceDirName":"javascript","slug":"/javascript/const-in-javascript","permalink":"/code-harbor-hub/docs/javascript/const-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/const-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"const","permalink":"/code-harbor-hub/docs/tags/const"},{"label":"ES6","permalink":"/code-harbor-hub/docs/tags/es-6"},{"label":"Variables","permalink":"/code-harbor-hub/docs/tags/variables"},{"label":"Block Scope","permalink":"/code-harbor-hub/docs/tags/block-scope"},{"label":"Hoisting","permalink":"/code-harbor-hub/docs/tags/hoisting"},{"label":"Redeclaration","permalink":"/code-harbor-hub/docs/tags/redeclaration"},{"label":"Best Practices","permalink":"/code-harbor-hub/docs/tags/best-practices"},{"label":"Comparison","permalink":"/code-harbor-hub/docs/tags/comparison"},{"label":"let","permalink":"/code-harbor-hub/docs/tags/let"},{"label":"var","permalink":"/code-harbor-hub/docs/tags/var"},{"label":"Constants","permalink":"/code-harbor-hub/docs/tags/constants"},{"label":"ECMAScript 6","permalink":"/code-harbor-hub/docs/tags/ecma-script-6"},{"label":"ES2015","permalink":"/code-harbor-hub/docs/tags/es-2015"},{"label":"Syntax","permalink":"/code-harbor-hub/docs/tags/syntax"},{"label":"Example","permalink":"/code-harbor-hub/docs/tags/example"},{"label":"Reassignment","permalink":"/code-harbor-hub/docs/tags/reassignment"},{"label":"Comparison with let","permalink":"/code-harbor-hub/docs/tags/comparison-with-let"},{"label":"Comparison with var","permalink":"/code-harbor-hub/docs/tags/comparison-with-var"},{"label":"Summary","permalink":"/code-harbor-hub/docs/tags/summary"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708763135,"formattedLastUpdatedAt":"Feb 24, 2024","sidebarPosition":9,"frontMatter":{"id":"const-in-javascript","title":"Const Keyword in JavaScript","sidebar_label":"Const Keyword","sidebar_position":9,"tags":["JavaScript","const","ES6","Variables","Block Scope","Hoisting","Redeclaration","Best Practices","Comparison","let","var","Constants","ECMAScript 6","ES6","ES2015","Syntax","Example","Block Scope","Reassignment","Best Practices","Comparison with let","Comparison with var","Hoisting","Summary"],"description":"What is the const keyword in JavaScript and how to use it."},"sidebar":"tutorialSidebar","previous":{"title":"Let Keyword","permalink":"/code-harbor-hub/docs/javascript/let-in-javascript"},"next":{"title":"Operators in JavaScript","permalink":"/code-harbor-hub/docs/category/operators-in-javascript"}},{"id":"javascript/datatypes/datatypes-in-javascript","title":"Data Types in JavaScript","description":"What is the data type in JavaScript? Learn about the primitive and non-primitive data types in JavaScript, including string, number, bigint, boolean, undefined, symbol, null, object, array, and function.","source":"@site/docs/javascript/datatypes/datatypes-js.md","sourceDirName":"javascript/datatypes","slug":"/javascript/datatypes/datatypes-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/datatypes-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/datatypes-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"Non-Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/non-primitive-data-types"},{"label":"String","permalink":"/code-harbor-hub/docs/tags/string"},{"label":"Number","permalink":"/code-harbor-hub/docs/tags/number"},{"label":"BigInt","permalink":"/code-harbor-hub/docs/tags/big-int"},{"label":"Boolean","permalink":"/code-harbor-hub/docs/tags/boolean"},{"label":"Undefined","permalink":"/code-harbor-hub/docs/tags/undefined"},{"label":"Symbol","permalink":"/code-harbor-hub/docs/tags/symbol"},{"label":"Null","permalink":"/code-harbor-hub/docs/tags/null"},{"label":"Object","permalink":"/code-harbor-hub/docs/tags/object"},{"label":"Array","permalink":"/code-harbor-hub/docs/tags/array"},{"label":"Function","permalink":"/code-harbor-hub/docs/tags/function"},{"label":"Type Conversion","permalink":"/code-harbor-hub/docs/tags/type-conversion"},{"label":"Implicit Type Conversion","permalink":"/code-harbor-hub/docs/tags/implicit-type-conversion"},{"label":"Explicit Type Conversion","permalink":"/code-harbor-hub/docs/tags/explicit-type-conversion"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708860657,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":1,"frontMatter":{"id":"datatypes-in-javascript","title":"Data Types in JavaScript","sidebar_label":"Data Types","sidebar_position":1,"tags":["JavaScript","Data Types","Primitive Data Types","Non-Primitive Data Types","String","Number","BigInt","Boolean","Undefined","Symbol","Null","Object","Array","Function","Type Conversion","Implicit Type Conversion","Explicit Type Conversion"],"description":"What is the data type in JavaScript? Learn about the primitive and non-primitive data types in JavaScript, including string, number, bigint, boolean, undefined, symbol, null, object, array, and function."},"sidebar":"tutorialSidebar","previous":{"title":"Data Types in JavaScript","permalink":"/code-harbor-hub/docs/category/data-types-in-javascript"},"next":{"title":"Primitive Data Types","permalink":"/code-harbor-hub/docs/category/primitive-data-types"}},{"id":"javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","title":"Array Data Types in JavaScript","description":"What is the array data type in JavaScript? Learn about the array data type and how to create, access, modify, add, and delete array elements in JavaScript.","source":"@site/docs/javascript/datatypes/non-primitive-data-types/array-js.mdx","sourceDirName":"javascript/datatypes/non-primitive-data-types","slug":"/javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/non-primitive-data-types/array-js.mdx","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Non-Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/non-primitive-data-types"},{"label":"Array","permalink":"/code-harbor-hub/docs/tags/array"},{"label":"Array in JavaScript","permalink":"/code-harbor-hub/docs/tags/array-in-java-script"},{"label":"Array data type","permalink":"/code-harbor-hub/docs/tags/array-data-type"},{"label":"Creating arrays in JavaScript","permalink":"/code-harbor-hub/docs/tags/creating-arrays-in-java-script"},{"label":"Accessing array elements","permalink":"/code-harbor-hub/docs/tags/accessing-array-elements"},{"label":"Modifying array elements","permalink":"/code-harbor-hub/docs/tags/modifying-array-elements"},{"label":"Adding array elements","permalink":"/code-harbor-hub/docs/tags/adding-array-elements"},{"label":"Deleting array elements","permalink":"/code-harbor-hub/docs/tags/deleting-array-elements"},{"label":"Array methods","permalink":"/code-harbor-hub/docs/tags/array-methods"},{"label":"Array properties","permalink":"/code-harbor-hub/docs/tags/array-properties"},{"label":"Array styles","permalink":"/code-harbor-hub/docs/tags/array-styles"},{"label":"Typed arrays","permalink":"/code-harbor-hub/docs/tags/typed-arrays"},{"label":"Array-like objects","permalink":"/code-harbor-hub/docs/tags/array-like-objects"},{"label":"Array buffers","permalink":"/code-harbor-hub/docs/tags/array-buffers"},{"label":"Array buffer views","permalink":"/code-harbor-hub/docs/tags/array-buffer-views"},{"label":"Array destructuring","permalink":"/code-harbor-hub/docs/tags/array-destructuring"},{"label":"Array spread operator","permalink":"/code-harbor-hub/docs/tags/array-spread-operator"},{"label":"Arrays Style","permalink":"/code-harbor-hub/docs/tags/arrays-style"},{"label":"Dense Array","permalink":"/code-harbor-hub/docs/tags/dense-array"},{"label":"Sparse Array","permalink":"/code-harbor-hub/docs/tags/sparse-array"},{"label":"Int8Array","permalink":"/code-harbor-hub/docs/tags/int-8-array"},{"label":"Uint8Array","permalink":"/code-harbor-hub/docs/tags/uint-8-array"},{"label":"Uint8ClampedArray","permalink":"/code-harbor-hub/docs/tags/uint-8-clamped-array"},{"label":"Int16Array","permalink":"/code-harbor-hub/docs/tags/int-16-array"},{"label":"Uint16Array","permalink":"/code-harbor-hub/docs/tags/uint-16-array"},{"label":"Int32Array","permalink":"/code-harbor-hub/docs/tags/int-32-array"},{"label":"Uint32Array","permalink":"/code-harbor-hub/docs/tags/uint-32-array"},{"label":"Float32Array","permalink":"/code-harbor-hub/docs/tags/float-32-array"},{"label":"Float64Array","permalink":"/code-harbor-hub/docs/tags/float-64-array"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709142715,"formattedLastUpdatedAt":"Feb 28, 2024","sidebarPosition":2,"frontMatter":{"id":"array-datatypes-in-javascript","title":"Array Data Types in JavaScript","sidebar_label":"Array","sidebar_position":2,"tags":["JavaScript","Data Types","Non-Primitive Data Types","Array","Array in JavaScript","Array data type","Creating arrays in JavaScript","Accessing array elements","Modifying array elements","Adding array elements","Deleting array elements","Array methods","Array properties","Array styles","Typed arrays","Array-like objects","Array buffers","Array buffer views","Array destructuring","Array spread operator","Arrays Style","Dense Array","Sparse Array","Typed Arrays","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array"],"description":"What is the array data type in JavaScript? Learn about the array data type and how to create, access, modify, add, and delete array elements in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Object","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript"},"next":{"title":"Function","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript"}},{"id":"javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","title":"Date Datatypes in JavaScript","description":"What is a Date in JavaScript and how to use it to work with dates and times.","source":"@site/docs/javascript/datatypes/non-primitive-data-types/date-js.md","sourceDirName":"javascript/datatypes/non-primitive-data-types","slug":"/javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/non-primitive-data-types/date-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Date","permalink":"/code-harbor-hub/docs/tags/date"},{"label":"Date Datatypes in JavaScript","permalink":"/code-harbor-hub/docs/tags/date-datatypes-in-java-script"},{"label":"Date in JavaScript","permalink":"/code-harbor-hub/docs/tags/date-in-java-script"},{"label":"JavaScript Date","permalink":"/code-harbor-hub/docs/tags/java-script-date"},{"label":"JavaScript Date Datatypes","permalink":"/code-harbor-hub/docs/tags/java-script-date-datatypes"},{"label":"JavaScript Date Object","permalink":"/code-harbor-hub/docs/tags/java-script-date-object"},{"label":"JavaScript Date Methods","permalink":"/code-harbor-hub/docs/tags/java-script-date-methods"},{"label":"JavaScript Date Examples","permalink":"/code-harbor-hub/docs/tags/java-script-date-examples"},{"label":"JavaScript Date Tutorial","permalink":"/code-harbor-hub/docs/tags/java-script-date-tutorial"},{"label":"JavaScript Date and Time","permalink":"/code-harbor-hub/docs/tags/java-script-date-and-time"},{"label":"JavaScript Date Format","permalink":"/code-harbor-hub/docs/tags/java-script-date-format"},{"label":"JavaScript Date Operations","permalink":"/code-harbor-hub/docs/tags/java-script-date-operations"},{"label":"JavaScript Date Functions","permalink":"/code-harbor-hub/docs/tags/java-script-date-functions"},{"label":"JavaScript Date Properties","permalink":"/code-harbor-hub/docs/tags/java-script-date-properties"},{"label":"JavaScript Date Setters","permalink":"/code-harbor-hub/docs/tags/java-script-date-setters"},{"label":"JavaScript Date Getters","permalink":"/code-harbor-hub/docs/tags/java-script-date-getters"},{"label":"JavaScript Date Working with Dates and Times","permalink":"/code-harbor-hub/docs/tags/java-script-date-working-with-dates-and-times"},{"label":"JavaScript Date Difference","permalink":"/code-harbor-hub/docs/tags/java-script-date-difference"},{"label":"JavaScript Date Add Days","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-days"},{"label":"JavaScript Date Add Months","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-months"},{"label":"JavaScript Date Add Years","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-years"},{"label":"JavaScript Date Add Hours","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-hours"},{"label":"JavaScript Date Add Minutes","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-minutes"},{"label":"JavaScript Date Add Seconds","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-seconds"},{"label":"JavaScript Date Add Milliseconds","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-milliseconds"},{"label":"JavaScript Date Add Time","permalink":"/code-harbor-hub/docs/tags/java-script-date-add-time"},{"label":"JavaScript Date Format Examples","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-examples"},{"label":"JavaScript Date Format Tutorial","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-tutorial"},{"label":"JavaScript Date Format Options","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-options"},{"label":"JavaScript Date Format Locale","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-locale"},{"label":"JavaScript Date Format Timezone","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-timezone"},{"label":"JavaScript Date Format Date","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-date"},{"label":"JavaScript Date Format Time","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-time"},{"label":"JavaScript Date Format Day","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-day"},{"label":"JavaScript Date Format Month","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-month"},{"label":"JavaScript Date Format Year","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-year"},{"label":"JavaScript Date Format Weekday","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-weekday"},{"label":"JavaScript Date Format Week","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-week"},{"label":"JavaScript Date Format Hour","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-hour"},{"label":"JavaScript Date Format Minute","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-minute"},{"label":"JavaScript Date Format Second","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-second"},{"label":"JavaScript Date Format Millisecond","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-millisecond"},{"label":"JavaScript Date Format UTC","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-utc"},{"label":"JavaScript Date Format Local","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-local"},{"label":"JavaScript Date Format ISO","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-iso"},{"label":"JavaScript Date Format Short","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-short"},{"label":"JavaScript Date Format Medium","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-medium"},{"label":"JavaScript Date Format Long","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-long"},{"label":"JavaScript Date Format Full","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-full"},{"label":"JavaScript Date Format Custom","permalink":"/code-harbor-hub/docs/tags/java-script-date-format-custom"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709307819,"formattedLastUpdatedAt":"Mar 1, 2024","sidebarPosition":4,"frontMatter":{"id":"date-datatypes-in-javascript","title":"Date Datatypes in JavaScript","sidebar_label":"Date","sidebar_position":4,"tags":["JavaScript","Date","Date Datatypes in JavaScript","Date in JavaScript","JavaScript Date","JavaScript Date Datatypes","JavaScript Date Object","JavaScript Date Methods","JavaScript Date Examples","JavaScript Date Tutorial","JavaScript Date and Time","JavaScript Date Format","JavaScript Date Operations","JavaScript Date Functions","JavaScript Date Properties","JavaScript Date Setters","JavaScript Date Getters","JavaScript Date Working with Dates and Times","JavaScript Date Difference","JavaScript Date Add Days","JavaScript Date Add Months","JavaScript Date Add Years","JavaScript Date Add Hours","JavaScript Date Add Minutes","JavaScript Date Add Seconds","JavaScript Date Add Milliseconds","JavaScript Date Add Time","JavaScript Date Format","JavaScript Date Format Examples","JavaScript Date Format Tutorial","JavaScript Date Format Options","JavaScript Date Format Locale","JavaScript Date Format Timezone","JavaScript Date Format Date","JavaScript Date Format Time","JavaScript Date Format Day","JavaScript Date Format Month","JavaScript Date Format Year","JavaScript Date Format Weekday","JavaScript Date Format Week","JavaScript Date Format Hour","JavaScript Date Format Minute","JavaScript Date Format Second","JavaScript Date Format Millisecond","JavaScript Date Format UTC","JavaScript Date Format Local","JavaScript Date Format ISO","JavaScript Date Format Short","JavaScript Date Format Medium","JavaScript Date Format Long","JavaScript Date Format Full","JavaScript Date Format Custom"],"description":"What is a Date in JavaScript and how to use it to work with dates and times."},"sidebar":"tutorialSidebar","previous":{"title":"Function","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript"},"next":{"title":"Events","permalink":"/code-harbor-hub/docs/javascript/events-in-javascript"}},{"id":"javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","title":"Function Datatypes in JavaScript","description":"What is a function in JavaScript? How to define a function in JavaScript? What are the different ways to define a function in JavaScript? What are the different types of function in JavaScript? Learn all about functions in JavaScript in this guide.","source":"@site/docs/javascript/datatypes/non-primitive-data-types/function-js.mdx","sourceDirName":"javascript/datatypes/non-primitive-data-types","slug":"/javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/non-primitive-data-types/function-js.mdx","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Function","permalink":"/code-harbor-hub/docs/tags/function"},{"label":"Datatypes","permalink":"/code-harbor-hub/docs/tags/datatypes"},{"label":"JavaScript Tutorial","permalink":"/code-harbor-hub/docs/tags/java-script-tutorial"},{"label":"JavaScript Function","permalink":"/code-harbor-hub/docs/tags/java-script-function"},{"label":"JavaScript Function Datatypes","permalink":"/code-harbor-hub/docs/tags/java-script-function-datatypes"},{"label":"Types of Function","permalink":"/code-harbor-hub/docs/tags/types-of-function"},{"label":"JavaScript Function Types","permalink":"/code-harbor-hub/docs/tags/java-script-function-types"},{"label":"JavaScript Function Expression","permalink":"/code-harbor-hub/docs/tags/java-script-function-expression"},{"label":"JavaScript Arrow Function","permalink":"/code-harbor-hub/docs/tags/java-script-arrow-function"},{"label":"JavaScript IIFE","permalink":"/code-harbor-hub/docs/tags/java-script-iife"},{"label":"JavaScript Generator Function","permalink":"/code-harbor-hub/docs/tags/java-script-generator-function"},{"label":"JavaScript Function Parameters","permalink":"/code-harbor-hub/docs/tags/java-script-function-parameters"},{"label":"JavaScript Function Return Value","permalink":"/code-harbor-hub/docs/tags/java-script-function-return-value"},{"label":"JavaScript Function Definition","permalink":"/code-harbor-hub/docs/tags/java-script-function-definition"},{"label":"JavaScript Function Syntax","permalink":"/code-harbor-hub/docs/tags/java-script-function-syntax"},{"label":"JavaScript Function Example","permalink":"/code-harbor-hub/docs/tags/java-script-function-example"},{"label":"JavaScript Function Tutorial","permalink":"/code-harbor-hub/docs/tags/java-script-function-tutorial"},{"label":"JavaScript Function Basics","permalink":"/code-harbor-hub/docs/tags/java-script-function-basics"},{"label":"JavaScript Function Introduction","permalink":"/code-harbor-hub/docs/tags/java-script-function-introduction"},{"label":"JavaScript Function Guide","permalink":"/code-harbor-hub/docs/tags/java-script-function-guide"},{"label":"JavaScript Function Fundamentals","permalink":"/code-harbor-hub/docs/tags/java-script-function-fundamentals"},{"label":"JavaScript Function Overview","permalink":"/code-harbor-hub/docs/tags/java-script-function-overview"},{"label":"JavaScript Function Concepts","permalink":"/code-harbor-hub/docs/tags/java-script-function-concepts"},{"label":"JavaScript Function Explained","permalink":"/code-harbor-hub/docs/tags/java-script-function-explained"},{"label":"JavaScript Function Quick Start","permalink":"/code-harbor-hub/docs/tags/java-script-function-quick-start"},{"label":"JavaScript Function Learning","permalink":"/code-harbor-hub/docs/tags/java-script-function-learning"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709230981,"formattedLastUpdatedAt":"Feb 29, 2024","sidebarPosition":3,"frontMatter":{"id":"function-datatypes-in-javascript","title":"Function Datatypes in JavaScript","sidebar_label":"Function","sidebar_position":3,"tags":["JavaScript","Function","Datatypes","JavaScript Tutorial","JavaScript Function","JavaScript Function Datatypes","JavaScript Function","Types of Function","JavaScript Function Types","JavaScript Function Expression","JavaScript Arrow Function","JavaScript IIFE","JavaScript Generator Function","JavaScript Function Parameters","JavaScript Function Return Value","JavaScript Function Definition","JavaScript Function Syntax","JavaScript Function Example","JavaScript Function Tutorial","JavaScript Function Basics","JavaScript Function Introduction","JavaScript Function Guide","JavaScript Function Fundamentals","JavaScript Function Overview","JavaScript Function Concepts","JavaScript Function Explained","JavaScript Function Quick Start","JavaScript Function Learning","JavaScript"],"description":"What is a function in JavaScript? How to define a function in JavaScript? What are the different ways to define a function in JavaScript? What are the different types of function in JavaScript? Learn all about functions in JavaScript in this guide."},"sidebar":"tutorialSidebar","previous":{"title":"Array","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript"},"next":{"title":"Date","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript"}},{"id":"javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","title":"Object Data Types in JavaScript","description":"What is the object data type in JavaScript? Learn about the object data type and how to create, access, modify, add, and delete object properties in JavaScript.","source":"@site/docs/javascript/datatypes/non-primitive-data-types/object-js.mdx","sourceDirName":"javascript/datatypes/non-primitive-data-types","slug":"/javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/non-primitive-data-types/object-js.mdx","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Non-Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/non-primitive-data-types"},{"label":"Object","permalink":"/code-harbor-hub/docs/tags/object"},{"label":"Object in JavaScript","permalink":"/code-harbor-hub/docs/tags/object-in-java-script"},{"label":"Object data type","permalink":"/code-harbor-hub/docs/tags/object-data-type"},{"label":"Object methods","permalink":"/code-harbor-hub/docs/tags/object-methods"},{"label":"Object properties","permalink":"/code-harbor-hub/docs/tags/object-properties"},{"label":"Object constructor","permalink":"/code-harbor-hub/docs/tags/object-constructor"},{"label":"Creating objects in JavaScript","permalink":"/code-harbor-hub/docs/tags/creating-objects-in-java-script"},{"label":"Accessing object properties","permalink":"/code-harbor-hub/docs/tags/accessing-object-properties"},{"label":"Modifying object properties","permalink":"/code-harbor-hub/docs/tags/modifying-object-properties"},{"label":"Adding object properties","permalink":"/code-harbor-hub/docs/tags/adding-object-properties"},{"label":"Deleting object properties","permalink":"/code-harbor-hub/docs/tags/deleting-object-properties"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709142715,"formattedLastUpdatedAt":"Feb 28, 2024","sidebarPosition":1,"frontMatter":{"id":"object-datatypes-in-javascript","title":"Object Data Types in JavaScript","sidebar_label":"Object","sidebar_position":1,"tags":["JavaScript","Data Types","Non-Primitive Data Types","Object","Object in JavaScript","Object data type","Object methods","Object properties","Object constructor","Creating objects in JavaScript","Accessing object properties","Modifying object properties","Adding object properties","Deleting object properties"],"description":"What is the object data type in JavaScript? Learn about the object data type and how to create, access, modify, add, and delete object properties in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Non Primitive Data Types","permalink":"/code-harbor-hub/docs/category/non-primitive-data-types"},"next":{"title":"Array","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript"}},{"id":"javascript/datatypes/primitive-data-types/bigint-in-javascript","title":"BigInt Data Types in JavaScript","description":"What is the BigInt data type in JavaScript? Learn about the BigInt data type and how to create BigInt in JavaScript.","source":"@site/docs/javascript/datatypes/primitive-data-types/big-int-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/bigint-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/bigint-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/primitive-data-types/big-int-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"BigInt","permalink":"/code-harbor-hub/docs/tags/big-int"},{"label":"BigInt in JavaScript","permalink":"/code-harbor-hub/docs/tags/big-int-in-java-script"},{"label":"BigInt data type","permalink":"/code-harbor-hub/docs/tags/big-int-data-type"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709121109,"formattedLastUpdatedAt":"Feb 28, 2024","sidebarPosition":6,"frontMatter":{"id":"bigint-in-javascript","title":"BigInt Data Types in JavaScript","sidebar_label":"BigInt","sidebar_position":6,"tags":["JavaScript","Data Types","Primitive Data Types","BigInt","BigInt in JavaScript","BigInt data type"],"description":"What is the BigInt data type in JavaScript? Learn about the BigInt data type and how to create BigInt in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Null","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/null-in-javascript"},"next":{"title":"Symbol","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/symbol-in-javascript"}},{"id":"javascript/datatypes/primitive-data-types/boolean-in-javascript","title":"Boolean Data Types in JavaScript","description":"What is the boolean data type in JavaScript? Learn about the boolean data type in JavaScript, including how to create a boolean, boolean values, and boolean methods.","source":"@site/docs/javascript/datatypes/primitive-data-types/boolean-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/boolean-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/boolean-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/primitive-data-types/boolean-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"Boolean","permalink":"/code-harbor-hub/docs/tags/boolean"},{"label":"Boolean Data Type","permalink":"/code-harbor-hub/docs/tags/boolean-data-type"},{"label":"Boolean Values","permalink":"/code-harbor-hub/docs/tags/boolean-values"},{"label":"Boolean Methods","permalink":"/code-harbor-hub/docs/tags/boolean-methods"},{"label":"Truthy and Falsy","permalink":"/code-harbor-hub/docs/tags/truthy-and-falsy"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709047234,"formattedLastUpdatedAt":"Feb 27, 2024","sidebarPosition":3,"frontMatter":{"id":"boolean-in-javascript","title":"Boolean Data Types in JavaScript","sidebar_label":"Boolean","sidebar_position":3,"tags":["JavaScript","Data Types","Primitive Data Types","Boolean","Boolean Data Type","Boolean Values","Boolean Methods","Truthy and Falsy"],"description":"What is the boolean data type in JavaScript? Learn about the boolean data type in JavaScript, including how to create a boolean, boolean values, and boolean methods."},"sidebar":"tutorialSidebar","previous":{"title":"String","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/string-datatypes-in-javascript"},"next":{"title":"Undefined","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/undefined-in-javascript"}},{"id":"javascript/datatypes/primitive-data-types/null-in-javascript","title":"Null Data Types in JavaScript","description":"What is the null data type in JavaScript? Learn about the null data type and how to create null in JavaScript.","source":"@site/docs/javascript/datatypes/primitive-data-types/null-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/null-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/null-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/primitive-data-types/null-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"Null","permalink":"/code-harbor-hub/docs/tags/null"},{"label":"null data type","permalink":"/code-harbor-hub/docs/tags/null-data-type"},{"label":"null in JavaScript","permalink":"/code-harbor-hub/docs/tags/null-in-java-script"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709121109,"formattedLastUpdatedAt":"Feb 28, 2024","sidebarPosition":5,"frontMatter":{"id":"null-in-javascript","title":"Null Data Types in JavaScript","sidebar_label":"Null","sidebar_position":5,"tags":["JavaScript","Data Types","Primitive Data Types","Null","null data type","null in JavaScript"],"description":"What is the null data type in JavaScript? Learn about the null data type and how to create null in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Undefined","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/undefined-in-javascript"},"next":{"title":"BigInt","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/bigint-in-javascript"}},{"id":"javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","title":"Number Data Types in JavaScript","description":"What is the number data type in JavaScript? Learn about the number data type in JavaScript, including integers, floating-point numbers, NaN, Infinity, and BigInt.","source":"@site/docs/javascript/datatypes/primitive-data-types/number-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/primitive-data-types/number-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"Number","permalink":"/code-harbor-hub/docs/tags/number"},{"label":"Integer","permalink":"/code-harbor-hub/docs/tags/integer"},{"label":"Floating-Point Number","permalink":"/code-harbor-hub/docs/tags/floating-point-number"},{"label":"NaN","permalink":"/code-harbor-hub/docs/tags/na-n"},{"label":"Infinity","permalink":"/code-harbor-hub/docs/tags/infinity"},{"label":"BigInt","permalink":"/code-harbor-hub/docs/tags/big-int"},{"label":"Number.MAX_VALUE","permalink":"/code-harbor-hub/docs/tags/number-max-value"},{"label":"Number.MIN_VALUE","permalink":"/code-harbor-hub/docs/tags/number-min-value"},{"label":"Number.EPSILON","permalink":"/code-harbor-hub/docs/tags/number-epsilon"},{"label":"Number.POSITIVE_INFINITY","permalink":"/code-harbor-hub/docs/tags/number-positive-infinity"},{"label":"Number.NEGATIVE_INFINITY","permalink":"/code-harbor-hub/docs/tags/number-negative-infinity"},{"label":"Number.NaN","permalink":"/code-harbor-hub/docs/tags/number-na-n"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709003935,"formattedLastUpdatedAt":"Feb 27, 2024","sidebarPosition":1,"frontMatter":{"id":"number-datatypes-in-javascript","title":"Number Data Types in JavaScript","sidebar_label":"Number","sidebar_position":1,"tags":["JavaScript","Data Types","Primitive Data Types","Number","Integer","Floating-Point Number","NaN","Infinity","BigInt","Number.MAX_VALUE","Number.MIN_VALUE","Number.EPSILON","Number.POSITIVE_INFINITY","Number.NEGATIVE_INFINITY","Number.NaN"],"description":"What is the number data type in JavaScript? Learn about the number data type in JavaScript, including integers, floating-point numbers, NaN, Infinity, and BigInt."},"sidebar":"tutorialSidebar","previous":{"title":"Primitive Data Types","permalink":"/code-harbor-hub/docs/category/primitive-data-types"},"next":{"title":"String","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/string-datatypes-in-javascript"}},{"id":"javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","title":"String Data Types in JavaScript","description":"What is the string data type in JavaScript? Learn about the string data type in JavaScript, including how to create a string, escape characters, string length, string methods, and template literals.","source":"@site/docs/javascript/datatypes/primitive-data-types/strings-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/primitive-data-types/strings-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"String","permalink":"/code-harbor-hub/docs/tags/string"},{"label":"String Data Type","permalink":"/code-harbor-hub/docs/tags/string-data-type"},{"label":"String Length","permalink":"/code-harbor-hub/docs/tags/string-length"},{"label":"String Methods","permalink":"/code-harbor-hub/docs/tags/string-methods"},{"label":"Template Literals","permalink":"/code-harbor-hub/docs/tags/template-literals"},{"label":"Escape Characters","permalink":"/code-harbor-hub/docs/tags/escape-characters"},{"label":"String Concatenation","permalink":"/code-harbor-hub/docs/tags/string-concatenation"},{"label":"String Interpolation","permalink":"/code-harbor-hub/docs/tags/string-interpolation"}],"version":"current","lastUpdatedBy":"Ajay Dhangar","lastUpdatedAt":1709091167,"formattedLastUpdatedAt":"Feb 28, 2024","sidebarPosition":2,"frontMatter":{"id":"string-datatypes-in-javascript","title":"String Data Types in JavaScript","sidebar_label":"String","sidebar_position":2,"tags":["JavaScript","Data Types","Primitive Data Types","String","String Data Type","String Length","String Methods","Template Literals","Escape Characters","String Concatenation","String Interpolation"],"description":"What is the string data type in JavaScript? Learn about the string data type in JavaScript, including how to create a string, escape characters, string length, string methods, and template literals."},"sidebar":"tutorialSidebar","previous":{"title":"Number","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/number-datatypes-in-javascript"},"next":{"title":"Boolean","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/boolean-in-javascript"}},{"id":"javascript/datatypes/primitive-data-types/symbol-in-javascript","title":"Symbol Data Types in JavaScript","description":"What is the symbol data type in JavaScript? Learn about the symbol data type and how to create symbols in JavaScript.","source":"@site/docs/javascript/datatypes/primitive-data-types/symbol-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/symbol-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/symbol-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/primitive-data-types/symbol-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"Symbol","permalink":"/code-harbor-hub/docs/tags/symbol"},{"label":"Symbol in JavaScript","permalink":"/code-harbor-hub/docs/tags/symbol-in-java-script"},{"label":"Symbol data type","permalink":"/code-harbor-hub/docs/tags/symbol-data-type"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709121109,"formattedLastUpdatedAt":"Feb 28, 2024","sidebarPosition":7,"frontMatter":{"id":"symbol-in-javascript","title":"Symbol Data Types in JavaScript","sidebar_label":"Symbol","sidebar_position":7,"tags":["JavaScript","Data Types","Primitive Data Types","Symbol","Symbol in JavaScript","Symbol data type"],"description":"What is the symbol data type in JavaScript? Learn about the symbol data type and how to create symbols in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"BigInt","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/bigint-in-javascript"},"next":{"title":"Non Primitive Data Types","permalink":"/code-harbor-hub/docs/category/non-primitive-data-types"}},{"id":"javascript/datatypes/primitive-data-types/undefined-in-javascript","title":"Undefined Data Types in JavaScript","description":"What is the undefined data type in JavaScript? Learn about the undefined data type and how to create undefined in JavaScript.","source":"@site/docs/javascript/datatypes/primitive-data-types/undefined-js.md","sourceDirName":"javascript/datatypes/primitive-data-types","slug":"/javascript/datatypes/primitive-data-types/undefined-in-javascript","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/undefined-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/datatypes/primitive-data-types/undefined-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Primitive Data Types","permalink":"/code-harbor-hub/docs/tags/primitive-data-types"},{"label":"Undefined","permalink":"/code-harbor-hub/docs/tags/undefined"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709047234,"formattedLastUpdatedAt":"Feb 27, 2024","sidebarPosition":4,"frontMatter":{"id":"undefined-in-javascript","title":"Undefined Data Types in JavaScript","sidebar_label":"Undefined","sidebar_position":4,"tags":["JavaScript","Data Types","Primitive Data Types","Undefined"],"description":"What is the undefined data type in JavaScript? Learn about the undefined data type and how to create undefined in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Boolean","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/boolean-in-javascript"},"next":{"title":"Null","permalink":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/null-in-javascript"}},{"id":"javascript/events-in-javascript","title":"Events in JavaScript","description":"What is the event in JavaScript? How to handle events in JavaScript? Learn about different types of events, event listeners, event objects, event propagation, and how to prevent default behavior and stop event propagation.","source":"@site/docs/javascript/events-js.md","sourceDirName":"javascript","slug":"/javascript/events-in-javascript","permalink":"/code-harbor-hub/docs/javascript/events-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/events-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Events","permalink":"/code-harbor-hub/docs/tags/events"},{"label":"DOM","permalink":"/code-harbor-hub/docs/tags/dom"},{"label":"EventListener","permalink":"/code-harbor-hub/docs/tags/event-listener"},{"label":"EventObject","permalink":"/code-harbor-hub/docs/tags/event-object"},{"label":"EventPropagation","permalink":"/code-harbor-hub/docs/tags/event-propagation"},{"label":"PreventDefault","permalink":"/code-harbor-hub/docs/tags/prevent-default"},{"label":"StopPropagation","permalink":"/code-harbor-hub/docs/tags/stop-propagation"},{"label":"EventTypes","permalink":"/code-harbor-hub/docs/tags/event-types"},{"label":"ClickEvent","permalink":"/code-harbor-hub/docs/tags/click-event"},{"label":"MouseoverEvent","permalink":"/code-harbor-hub/docs/tags/mouseover-event"},{"label":"MouseoutEvent","permalink":"/code-harbor-hub/docs/tags/mouseout-event"},{"label":"ChangeEvent","permalink":"/code-harbor-hub/docs/tags/change-event"},{"label":"SubmitEvent","permalink":"/code-harbor-hub/docs/tags/submit-event"},{"label":"EventCapturePhase","permalink":"/code-harbor-hub/docs/tags/event-capture-phase"},{"label":"EventBubblingPhase","permalink":"/code-harbor-hub/docs/tags/event-bubbling-phase"},{"label":"EventTarget","permalink":"/code-harbor-hub/docs/tags/event-target"},{"label":"CallbackFunction","permalink":"/code-harbor-hub/docs/tags/callback-function"},{"label":"EventProperties","permalink":"/code-harbor-hub/docs/tags/event-properties"},{"label":"UIEvents","permalink":"/code-harbor-hub/docs/tags/ui-events"},{"label":"MouseEvents","permalink":"/code-harbor-hub/docs/tags/mouse-events"},{"label":"KeyboardEvents","permalink":"/code-harbor-hub/docs/tags/keyboard-events"},{"label":"FormEvents","permalink":"/code-harbor-hub/docs/tags/form-events"},{"label":"FocusEvents","permalink":"/code-harbor-hub/docs/tags/focus-events"},{"label":"InputEvents","permalink":"/code-harbor-hub/docs/tags/input-events"},{"label":"WheelEvents","permalink":"/code-harbor-hub/docs/tags/wheel-events"},{"label":"TouchEvents","permalink":"/code-harbor-hub/docs/tags/touch-events"},{"label":"CustomEvents","permalink":"/code-harbor-hub/docs/tags/custom-events"},{"label":"AddEventListener","permalink":"/code-harbor-hub/docs/tags/add-event-listener"},{"label":"Options","permalink":"/code-harbor-hub/docs/tags/options"},{"label":"Capture","permalink":"/code-harbor-hub/docs/tags/capture"},{"label":"Once","permalink":"/code-harbor-hub/docs/tags/once"},{"label":"Passive","permalink":"/code-harbor-hub/docs/tags/passive"},{"label":"HandleEvent","permalink":"/code-harbor-hub/docs/tags/handle-event"},{"label":"EventBubbling","permalink":"/code-harbor-hub/docs/tags/event-bubbling"},{"label":"EventCapture","permalink":"/code-harbor-hub/docs/tags/event-capture"},{"label":"EventPhase","permalink":"/code-harbor-hub/docs/tags/event-phase"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709314711,"formattedLastUpdatedAt":"Mar 1, 2024","sidebarPosition":12,"frontMatter":{"id":"events-in-javascript","title":"Events in JavaScript","sidebar_label":"Events","sidebar_position":12,"tags":["JavaScript","Events","DOM","EventListener","EventObject","EventPropagation","PreventDefault","StopPropagation","EventTypes","ClickEvent","MouseoverEvent","MouseoutEvent","ChangeEvent","SubmitEvent","EventCapturePhase","EventBubblingPhase","EventTarget","EventListener","CallbackFunction","EventObject","EventProperties","UIEvents","MouseEvents","KeyboardEvents","FormEvents","FocusEvents","InputEvents","WheelEvents","TouchEvents","CustomEvents","AddEventListener","Options","Capture","Once","Passive","HandleEvent","EventPropagation","EventBubbling","EventCapture","EventPhase","EventTypes","EventListener","EventObject","EventProperties"],"description":"What is the event in JavaScript? How to handle events in JavaScript? Learn about different types of events, event listeners, event objects, event propagation, and how to prevent default behavior and stop event propagation."},"sidebar":"tutorialSidebar","previous":{"title":"Date","permalink":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript"},"next":{"title":"Strings in JavaScript","permalink":"/code-harbor-hub/docs/javascript/all-about-strings"}},{"id":"javascript/if-else-in-javascript","title":"If...Else in JavaScript","description":"In this tutorial, we will learn about the if...else statement in JavaScript. We will learn how to use the if...else statement to make decisions in JavaScript.","source":"@site/docs/javascript/if-else.md","sourceDirName":"javascript","slug":"/javascript/if-else-in-javascript","permalink":"/code-harbor-hub/docs/javascript/if-else-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/if-else.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Conditional","permalink":"/code-harbor-hub/docs/tags/conditional"},{"label":"Statement","permalink":"/code-harbor-hub/docs/tags/statement"},{"label":"If","permalink":"/code-harbor-hub/docs/tags/if"},{"label":"Else","permalink":"/code-harbor-hub/docs/tags/else"},{"label":"Ternary","permalink":"/code-harbor-hub/docs/tags/ternary"},{"label":"Operator","permalink":"/code-harbor-hub/docs/tags/operator"},{"label":"Nested","permalink":"/code-harbor-hub/docs/tags/nested"},{"label":"Switch","permalink":"/code-harbor-hub/docs/tags/switch"},{"label":"Nullish","permalink":"/code-harbor-hub/docs/tags/nullish"},{"label":"Coalescing","permalink":"/code-harbor-hub/docs/tags/coalescing"},{"label":"Decision","permalink":"/code-harbor-hub/docs/tags/decision"},{"label":"Making","permalink":"/code-harbor-hub/docs/tags/making"},{"label":"Control","permalink":"/code-harbor-hub/docs/tags/control"},{"label":"Flow","permalink":"/code-harbor-hub/docs/tags/flow"},{"label":"Statements","permalink":"/code-harbor-hub/docs/tags/statements"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710237590,"formattedLastUpdatedAt":"Mar 12, 2024","sidebarPosition":19,"frontMatter":{"id":"if-else-in-javascript","title":"If...Else in JavaScript","sidebar_label":"If...Else","sidebar_position":19,"tags":["JavaScript","Conditional","Statement","If","Else","Ternary","Operator","Nested","Switch","Nullish","Coalescing","Operator","Decision","Making","Control","Flow","Conditional","Statements"],"description":"In this tutorial, we will learn about the if...else statement in JavaScript. We will learn how to use the if...else statement to make decisions in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Random","permalink":"/code-harbor-hub/docs/javascript/random-in-javascript"},"next":{"title":"Switch Statement","permalink":"/code-harbor-hub/docs/javascript/switch-in-javascript"}},{"id":"javascript/intro-js","title":"Introduction to JavaScript","description":"What is JavaScript? Why JavaScript? How to use JavaScript? Learn about JavaScript in this tutorial.","source":"@site/docs/javascript/intro-js.md","sourceDirName":"javascript","slug":"/javascript/intro-js","permalink":"/code-harbor-hub/docs/javascript/intro-js","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/intro-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Introduction of js","permalink":"/code-harbor-hub/docs/tags/introduction-of-js"},{"label":"Introduction of JavaScript","permalink":"/code-harbor-hub/docs/tags/introduction-of-java-script"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1709314711,"formattedLastUpdatedAt":"Mar 1, 2024","sidebarPosition":1,"frontMatter":{"id":"intro-js","title":"Introduction to JavaScript","sidebar_label":"Introduction to JavaScript","sidebar_position":1,"tags":["JavaScript","Introduction of js","Introduction of JavaScript"],"description":"What is JavaScript? Why JavaScript? How to use JavaScript? Learn about JavaScript in this tutorial."},"sidebar":"tutorialSidebar","previous":{"title":"JavaScript","permalink":"/code-harbor-hub/docs/category/javascript"},"next":{"title":"Where to JavaScript","permalink":"/code-harbor-hub/docs/javascript/where-to-js"}},{"id":"javascript/let-in-javascript","title":"Let Keyword in JavaScript","description":"What is the let keyword in JavaScript and how to use it.","source":"@site/docs/javascript/let-js.md","sourceDirName":"javascript","slug":"/javascript/let-in-javascript","permalink":"/code-harbor-hub/docs/javascript/let-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/let-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"let","permalink":"/code-harbor-hub/docs/tags/let"},{"label":"ES6","permalink":"/code-harbor-hub/docs/tags/es-6"},{"label":"Variables","permalink":"/code-harbor-hub/docs/tags/variables"},{"label":"Block Scope","permalink":"/code-harbor-hub/docs/tags/block-scope"},{"label":"Hoisting","permalink":"/code-harbor-hub/docs/tags/hoisting"},{"label":"Redeclaration","permalink":"/code-harbor-hub/docs/tags/redeclaration"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708763135,"formattedLastUpdatedAt":"Feb 24, 2024","sidebarPosition":8,"frontMatter":{"id":"let-in-javascript","title":"Let Keyword in JavaScript","sidebar_label":"Let Keyword","sidebar_position":8,"tags":["JavaScript","let","ES6","Variables","Block Scope","Hoisting","Redeclaration"],"description":"What is the let keyword in JavaScript and how to use it."},"sidebar":"tutorialSidebar","previous":{"title":"Variables in JavaScript","permalink":"/code-harbor-hub/docs/javascript/variables-in-javascript"},"next":{"title":"Const Keyword","permalink":"/code-harbor-hub/docs/javascript/const-in-javascript"}},{"id":"javascript/math-in-javascript","title":"Math in JavaScript","description":"In this tutorial, we will learn about the Math object in JavaScript. We will learn about the properties and methods of the Math object.","source":"@site/docs/javascript/math.md","sourceDirName":"javascript","slug":"/javascript/math-in-javascript","permalink":"/code-harbor-hub/docs/javascript/math-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/math.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Math","permalink":"/code-harbor-hub/docs/tags/math"},{"label":"Object","permalink":"/code-harbor-hub/docs/tags/object"},{"label":"Properties","permalink":"/code-harbor-hub/docs/tags/properties"},{"label":"Methods","permalink":"/code-harbor-hub/docs/tags/methods"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710237590,"formattedLastUpdatedAt":"Mar 12, 2024","sidebarPosition":17,"frontMatter":{"id":"math-in-javascript","title":"Math in JavaScript","sidebar_label":"Math","sidebar_position":17,"tags":["JavaScript","Math","Object","Properties","Methods"],"description":"In this tutorial, we will learn about the Math object in JavaScript. We will learn about the properties and methods of the Math object."},"sidebar":"tutorialSidebar","previous":{"title":"Objects","permalink":"/code-harbor-hub/docs/javascript/objects-in-javascript"},"next":{"title":"Random","permalink":"/code-harbor-hub/docs/javascript/random-in-javascript"}},{"id":"javascript/objects-in-javascript","title":"Objects in JavaScript","description":"In this tutorial, we will learn about objects in JavaScript. We will learn how to create objects, access object properties, and methods. We will also learn about object destructuring, object methods, and object prototypes.","source":"@site/docs/javascript/objects.md","sourceDirName":"javascript","slug":"/javascript/objects-in-javascript","permalink":"/code-harbor-hub/docs/javascript/objects-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/objects.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Objects","permalink":"/code-harbor-hub/docs/tags/objects"},{"label":"Object Literals","permalink":"/code-harbor-hub/docs/tags/object-literals"},{"label":"Constructor Function","permalink":"/code-harbor-hub/docs/tags/constructor-function"},{"label":"Dot Notation","permalink":"/code-harbor-hub/docs/tags/dot-notation"},{"label":"Bracket Notation","permalink":"/code-harbor-hub/docs/tags/bracket-notation"},{"label":"Object Destructuring","permalink":"/code-harbor-hub/docs/tags/object-destructuring"},{"label":"Object Methods","permalink":"/code-harbor-hub/docs/tags/object-methods"},{"label":"Object Prototypes","permalink":"/code-harbor-hub/docs/tags/object-prototypes"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710237590,"formattedLastUpdatedAt":"Mar 12, 2024","sidebarPosition":16,"frontMatter":{"id":"objects-in-javascript","title":"Objects in JavaScript","sidebar_label":"Objects","sidebar_position":16,"tags":["JavaScript","Objects","Object Literals","Constructor Function","Dot Notation","Bracket Notation","Object Destructuring","Object Methods","Object Prototypes"],"description":"In this tutorial, we will learn about objects in JavaScript. We will learn how to create objects, access object properties, and methods. We will also learn about object destructuring, object methods, and object prototypes."},"sidebar":"tutorialSidebar","previous":{"title":"Arrays","permalink":"/code-harbor-hub/docs/javascript/arrays-in-javascript"},"next":{"title":"Math","permalink":"/code-harbor-hub/docs/javascript/math-in-javascript"}},{"id":"javascript/operators/arithmetic-operator-in-javascript","title":"Arithmetic Operator in JavaScript","description":"What is the arithmetic operator in JavaScript? Learn about the types of arithmetic operators in JavaScript, including the addition, subtraction, multiplication, division, and modulus operators.","source":"@site/docs/javascript/operators/arithmetic-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/arithmetic-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/arithmetic-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/arithmetic-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Arithmetic Operators","permalink":"/code-harbor-hub/docs/tags/arithmetic-operators"},{"label":"Arithmetic Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/arithmetic-operator-in-java-script"},{"label":"Addition Operator","permalink":"/code-harbor-hub/docs/tags/addition-operator"},{"label":"Subtraction Operator","permalink":"/code-harbor-hub/docs/tags/subtraction-operator"},{"label":"Multiplication Operator","permalink":"/code-harbor-hub/docs/tags/multiplication-operator"},{"label":"Division Operator","permalink":"/code-harbor-hub/docs/tags/division-operator"},{"label":"Modulus Operator","permalink":"/code-harbor-hub/docs/tags/modulus-operator"},{"label":"Increment Operator","permalink":"/code-harbor-hub/docs/tags/increment-operator"},{"label":"Decrement Operator","permalink":"/code-harbor-hub/docs/tags/decrement-operator"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708835637,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":2,"frontMatter":{"id":"arithmetic-operator-in-javascript","title":"Arithmetic Operator in JavaScript","sidebar_label":"Arithmetic Operator","sidebar_position":2,"tags":["JavaScript","Operators","Arithmetic Operators","Arithmetic Operator in JavaScript","Addition Operator","Subtraction Operator","Multiplication Operator","Division Operator","Modulus Operator","Increment Operator","Decrement Operator"],"description":"What is the arithmetic operator in JavaScript? Learn about the types of arithmetic operators in JavaScript, including the addition, subtraction, multiplication, division, and modulus operators."},"sidebar":"tutorialSidebar","previous":{"title":"Operators","permalink":"/code-harbor-hub/docs/javascript/operators/operators-in-javascript"},"next":{"title":"Assignment Operator","permalink":"/code-harbor-hub/docs/javascript/operators/assignment-operator-in-javascript"}},{"id":"javascript/operators/assignment-operator-in-javascript","title":"Assignment Operator in JavaScript","description":"What is the assignment operator in JavaScript? Learn about the assignment operator in JavaScript and its various types, including the simple assignment operator, compound assignment operators, destructuring assignment, and assignment operator with chaining.","source":"@site/docs/javascript/operators/assignment-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/assignment-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/assignment-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/assignment-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Assignment Operator","permalink":"/code-harbor-hub/docs/tags/assignment-operator"},{"label":"Assignment Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/assignment-operator-in-java-script"},{"label":"Simple Assignment Operator","permalink":"/code-harbor-hub/docs/tags/simple-assignment-operator"},{"label":"Compound Assignment Operators","permalink":"/code-harbor-hub/docs/tags/compound-assignment-operators"},{"label":"Destructuring Assignment","permalink":"/code-harbor-hub/docs/tags/destructuring-assignment"},{"label":"Assignment Operator with Chaining","permalink":"/code-harbor-hub/docs/tags/assignment-operator-with-chaining"},{"label":"Shift Assignment Operators","permalink":"/code-harbor-hub/docs/tags/shift-assignment-operators"},{"label":"Logical Assignment Operators","permalink":"/code-harbor-hub/docs/tags/logical-assignment-operators"},{"label":"String Assignment Operators","permalink":"/code-harbor-hub/docs/tags/string-assignment-operators"},{"label":"Bitwise Assignment Operators","permalink":"/code-harbor-hub/docs/tags/bitwise-assignment-operators"},{"label":"Exponentiation Assignment Operator","permalink":"/code-harbor-hub/docs/tags/exponentiation-assignment-operator"},{"label":"Assignment Operator Example","permalink":"/code-harbor-hub/docs/tags/assignment-operator-example"},{"label":"Assignment Operator Syntax","permalink":"/code-harbor-hub/docs/tags/assignment-operator-syntax"},{"label":"Assignment Operator Types","permalink":"/code-harbor-hub/docs/tags/assignment-operator-types"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708835637,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":3,"frontMatter":{"id":"assignment-operator-in-javascript","title":"Assignment Operator in JavaScript","sidebar_label":"Assignment Operator","sidebar_position":3,"tags":["JavaScript","Operators","Assignment Operator","Assignment Operator in JavaScript","Simple Assignment Operator","Compound Assignment Operators","Destructuring Assignment","Assignment Operator with Chaining","Shift Assignment Operators","Logical Assignment Operators","String Assignment Operators","Bitwise Assignment Operators","Exponentiation Assignment Operator","Assignment Operator Example","Assignment Operator Syntax","Assignment Operator Types"],"description":"What is the assignment operator in JavaScript? Learn about the assignment operator in JavaScript and its various types, including the simple assignment operator, compound assignment operators, destructuring assignment, and assignment operator with chaining."},"sidebar":"tutorialSidebar","previous":{"title":"Arithmetic Operator","permalink":"/code-harbor-hub/docs/javascript/operators/arithmetic-operator-in-javascript"},"next":{"title":"Comparison Operator","permalink":"/code-harbor-hub/docs/javascript/operators/comparison-operator-in-javascript"}},{"id":"javascript/operators/bitwise-operator-in-javascript","title":"Bitwise Operator in JavaScript","description":"What is the bitwise operator in JavaScript? Learn about the types of bitwise operators in JavaScript, including the bitwise AND, OR, XOR, NOT, left shift, and right shift operators.","source":"@site/docs/javascript/operators/bitwise-operators-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/bitwise-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/bitwise-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/bitwise-operators-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Bitwise Operators","permalink":"/code-harbor-hub/docs/tags/bitwise-operators"},{"label":"Bitwise Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/bitwise-operator-in-java-script"},{"label":"Bitwise AND Operator","permalink":"/code-harbor-hub/docs/tags/bitwise-and-operator"},{"label":"Bitwise OR Operator","permalink":"/code-harbor-hub/docs/tags/bitwise-or-operator"},{"label":"Bitwise XOR Operator","permalink":"/code-harbor-hub/docs/tags/bitwise-xor-operator"},{"label":"Bitwise NOT Operator","permalink":"/code-harbor-hub/docs/tags/bitwise-not-operator"},{"label":"Left Shift Operator","permalink":"/code-harbor-hub/docs/tags/left-shift-operator"},{"label":"Right Shift Operator","permalink":"/code-harbor-hub/docs/tags/right-shift-operator"},{"label":"Bitwise Operations","permalink":"/code-harbor-hub/docs/tags/bitwise-operations"},{"label":"Bitwise Operators in JavaScript","permalink":"/code-harbor-hub/docs/tags/bitwise-operators-in-java-script"},{"label":"Bitwise AND","permalink":"/code-harbor-hub/docs/tags/bitwise-and"},{"label":"Bitwise OR","permalink":"/code-harbor-hub/docs/tags/bitwise-or"},{"label":"Bitwise XOR","permalink":"/code-harbor-hub/docs/tags/bitwise-xor"},{"label":"Bitwise NOT","permalink":"/code-harbor-hub/docs/tags/bitwise-not"},{"label":"Left Shift","permalink":"/code-harbor-hub/docs/tags/left-shift"},{"label":"Right Shift","permalink":"/code-harbor-hub/docs/tags/right-shift"},{"label":"Bitwise AND Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/bitwise-and-operator-in-java-script"},{"label":"Bitwise OR Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/bitwise-or-operator-in-java-script"},{"label":"Bitwise XOR Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/bitwise-xor-operator-in-java-script"},{"label":"Bitwise NOT Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/bitwise-not-operator-in-java-script"},{"label":"Left Shift Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/left-shift-operator-in-java-script"},{"label":"Right Shift Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/right-shift-operator-in-java-script"},{"label":"Bitwise Operations in JavaScript","permalink":"/code-harbor-hub/docs/tags/bitwise-operations-in-java-script"},{"label":"Bit","permalink":"/code-harbor-hub/docs/tags/bit"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710062316,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":7,"frontMatter":{"id":"bitwise-operator-in-javascript","title":"Bitwise Operator in JavaScript","sidebar_label":"Bitwise Operator","sidebar_position":7,"tags":["JavaScript","Operators","Bitwise Operators","Bitwise Operator in JavaScript","Bitwise AND Operator","Bitwise OR Operator","Bitwise XOR Operator","Bitwise NOT Operator","Left Shift Operator","Right Shift Operator","Bitwise Operations","Bitwise Operators in JavaScript","Bitwise AND","Bitwise OR","Bitwise XOR","Bitwise NOT","Left Shift","Right Shift","Bitwise AND Operator in JavaScript","Bitwise OR Operator in JavaScript","Bitwise XOR Operator in JavaScript","Bitwise NOT Operator in JavaScript","Left Shift Operator in JavaScript","Right Shift Operator in JavaScript","Bitwise Operations in JavaScript","Bitwise Operators in JavaScript","Bitwise AND Operator","Bitwise OR Operator","Bitwise XOR Operator","Bitwise NOT Operator","Left Shift Operator","Right Shift Operator","Bitwise AND Operator in JavaScript","Bitwise OR Operator in JavaScript","Bitwise XOR Operator in JavaScript","Bitwise NOT Operator in JavaScript","Left Shift Operator in JavaScript","Right Shift Operator in JavaScript","Bitwise Operations in JavaScript","Bitwise Operators in JavaScript","Bitwise AND Operator","Bitwise OR Operator","Bitwise XOR Operator","Bitwise NOT Operator","Left Shift Operator","Right Shift Operator","Bitwise AND Operator in JavaScript","Bitwise OR Operator in JavaScript","Bitwise XOR Operator in JavaScript","Bitwise NOT Operator in JavaScript","Left Shift Operator in JavaScript","Right Shift Operator in JavaScript","Bitwise Operations in JavaScript","Bitwise Operators in JavaScript","Bitwise AND Operator","Bitwise OR Operator","Bitwise XOR Operator","Bitwise NOT Operator","Left Shift Operator","Right Shift Operator","Bitwise AND Operator in JavaScript","Bitwise OR Operator in JavaScript","Bitwise XOR Operator in JavaScript","Bitwise NOT Operator in JavaScript","Left Shift Operator in JavaScript","Right Shift Operator in JavaScript","Bitwise Operations in JavaScript","Bitwise Operators in JavaScript","Bitwise AND Operator","Bitwise OR Operator","Bitwise XOR Operator","Bitwise NOT Operator","Left Shift Operator","Right Shift Operator","Bitwise AND Operator in JavaScript","Bitwise OR Operator in JavaScript","Bitwise XOR Operator in JavaScript","Bitwise NOT Operator in JavaScript","Left Shift Operator in JavaScript","Right Shift Operator in JavaScript","Bitwise Operations in JavaScript","Bitwise Operators in JavaScript","Bitwise AND Operator","Bitwise OR Operator","Bitwise XOR Operator","Bitwise NOT Operator","Left Shift Operator","Right Shift Operator","Bitwise AND Operator in JavaScript","Bitwise OR Operator in JavaScript","Bitwise XOR Operator in JavaScript","Bitwise NOT Operator in JavaScript","Left Shift Operator in JavaScript","Right Shift Operator in JavaScript","Bitwise Operations in JavaScript","Bitwise Operators in JavaScript","Bitwise AND Operator","Bitwise OR Operator","Bitwise XOR Operator","Bit"],"description":"What is the bitwise operator in JavaScript? Learn about the types of bitwise operators in JavaScript, including the bitwise AND, OR, XOR, NOT, left shift, and right shift operators."},"sidebar":"tutorialSidebar","previous":{"title":"Logical Operator","permalink":"/code-harbor-hub/docs/javascript/operators/logical-operator-in-javascript"},"next":{"title":"Ternary Operator","permalink":"/code-harbor-hub/docs/javascript/operators/ternary-operator-in-javascript"}},{"id":"javascript/operators/comparison-operator-in-javascript","title":"Comparison Operator in JavaScript","description":"What is the comparison operator in JavaScript? Learn about the types of comparison operators in JavaScript, including the equal to, not equal to, strict equal to, strict not equal to, greater than, less than, greater than or equal to, and less than or equal to operators.","source":"@site/docs/javascript/operators/comparison-operators-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/comparison-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/comparison-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/comparison-operators-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Comparison Operators","permalink":"/code-harbor-hub/docs/tags/comparison-operators"},{"label":"Comparison Operator in JavaScript","permalink":"/code-harbor-hub/docs/tags/comparison-operator-in-java-script"},{"label":"Equal To Operator","permalink":"/code-harbor-hub/docs/tags/equal-to-operator"},{"label":"Not Equal To Operator","permalink":"/code-harbor-hub/docs/tags/not-equal-to-operator"},{"label":"Strict Equal To Operator","permalink":"/code-harbor-hub/docs/tags/strict-equal-to-operator"},{"label":"Strict Not Equal To Operator","permalink":"/code-harbor-hub/docs/tags/strict-not-equal-to-operator"},{"label":"Greater Than Operator","permalink":"/code-harbor-hub/docs/tags/greater-than-operator"},{"label":"Less Than Operator","permalink":"/code-harbor-hub/docs/tags/less-than-operator"},{"label":"Greater Than or Equal To Operator","permalink":"/code-harbor-hub/docs/tags/greater-than-or-equal-to-operator"},{"label":"Less Than or Equal To Operator","permalink":"/code-harbor-hub/docs/tags/less-than-or-equal-to-operator"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708855615,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":4,"frontMatter":{"id":"comparison-operator-in-javascript","title":"Comparison Operator in JavaScript","sidebar_label":"Comparison Operator","sidebar_position":4,"tags":["JavaScript","Operators","Comparison Operators","Comparison Operator in JavaScript","Equal To Operator","Not Equal To Operator","Strict Equal To Operator","Strict Not Equal To Operator","Greater Than Operator","Less Than Operator","Greater Than or Equal To Operator","Less Than or Equal To Operator"],"description":"What is the comparison operator in JavaScript? Learn about the types of comparison operators in JavaScript, including the equal to, not equal to, strict equal to, strict not equal to, greater than, less than, greater than or equal to, and less than or equal to operators."},"sidebar":"tutorialSidebar","previous":{"title":"Assignment Operator","permalink":"/code-harbor-hub/docs/javascript/operators/assignment-operator-in-javascript"},"next":{"title":"String Operator","permalink":"/code-harbor-hub/docs/javascript/operators/string-operator-in-javascript"}},{"id":"javascript/operators/logical-operator-in-javascript","title":"Logical Operator in JavaScript","description":"What is the logical operator in JavaScript? Learn about the types of logical operators in JavaScript, including logical AND, logical OR, and logical NOT, and the precedence of logical operators.","source":"@site/docs/javascript/operators/logical-operators-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/logical-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/logical-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/logical-operators-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Logical Operators","permalink":"/code-harbor-hub/docs/tags/logical-operators"},{"label":"Logical AND","permalink":"/code-harbor-hub/docs/tags/logical-and"},{"label":"Logical OR","permalink":"/code-harbor-hub/docs/tags/logical-or"},{"label":"Logical NOT","permalink":"/code-harbor-hub/docs/tags/logical-not"},{"label":"Precedence of Logical Operators","permalink":"/code-harbor-hub/docs/tags/precedence-of-logical-operators"},{"label":"Truthy","permalink":"/code-harbor-hub/docs/tags/truthy"},{"label":"Falsy","permalink":"/code-harbor-hub/docs/tags/falsy"},{"label":"Nullish Values","permalink":"/code-harbor-hub/docs/tags/nullish-values"},{"label":"Non-Boolean Values","permalink":"/code-harbor-hub/docs/tags/non-boolean-values"},{"label":"Multiple Operands","permalink":"/code-harbor-hub/docs/tags/multiple-operands"},{"label":"Side Effects","permalink":"/code-harbor-hub/docs/tags/side-effects"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708855615,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":6,"frontMatter":{"id":"logical-operator-in-javascript","title":"Logical Operator in JavaScript","sidebar_label":"Logical Operator","sidebar_position":6,"tags":["JavaScript","Operators","Logical Operators","Logical AND","Logical OR","Logical NOT","Precedence of Logical Operators","Truthy","Falsy","Nullish Values","Non-Boolean Values","Multiple Operands","Side Effects"],"description":"What is the logical operator in JavaScript? Learn about the types of logical operators in JavaScript, including logical AND, logical OR, and logical NOT, and the precedence of logical operators."},"sidebar":"tutorialSidebar","previous":{"title":"String Operator","permalink":"/code-harbor-hub/docs/javascript/operators/string-operator-in-javascript"},"next":{"title":"Bitwise Operator","permalink":"/code-harbor-hub/docs/javascript/operators/bitwise-operator-in-javascript"}},{"id":"javascript/operators/operators-in-javascript","title":"Operators in JavaScript","description":"What is the operators in JavaScript and how to use it.","source":"@site/docs/javascript/operators/operators-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/operators-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/operators-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/operators-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Arithmetic Operators","permalink":"/code-harbor-hub/docs/tags/arithmetic-operators"},{"label":"Assignment Operators","permalink":"/code-harbor-hub/docs/tags/assignment-operators"},{"label":"Comparison Operators","permalink":"/code-harbor-hub/docs/tags/comparison-operators"},{"label":"Logical Operators","permalink":"/code-harbor-hub/docs/tags/logical-operators"},{"label":"Bitwise Operators","permalink":"/code-harbor-hub/docs/tags/bitwise-operators"},{"label":"String Operators","permalink":"/code-harbor-hub/docs/tags/string-operators"},{"label":"Conditional Operator","permalink":"/code-harbor-hub/docs/tags/conditional-operator"},{"label":"Type Operators","permalink":"/code-harbor-hub/docs/tags/type-operators"},{"label":"Comma Operator","permalink":"/code-harbor-hub/docs/tags/comma-operator"},{"label":"Unary Operators","permalink":"/code-harbor-hub/docs/tags/unary-operators"},{"label":"Relational Operators","permalink":"/code-harbor-hub/docs/tags/relational-operators"},{"label":"Grouping Operators","permalink":"/code-harbor-hub/docs/tags/grouping-operators"},{"label":"Exponentiation Operator","permalink":"/code-harbor-hub/docs/tags/exponentiation-operator"},{"label":"Nullish Coalescing Operator","permalink":"/code-harbor-hub/docs/tags/nullish-coalescing-operator"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708763135,"formattedLastUpdatedAt":"Feb 24, 2024","sidebarPosition":1,"frontMatter":{"id":"operators-in-javascript","title":"Operators in JavaScript","sidebar_label":"Operators","sidebar_position":1,"tags":["JavaScript","Operators","Arithmetic Operators","Assignment Operators","Comparison Operators","Logical Operators","Bitwise Operators","String Operators","Conditional Operator","Type Operators","Comma Operator","Unary Operators","Relational Operators","Grouping Operators","Exponentiation Operator","Nullish Coalescing Operator"],"description":"What is the operators in JavaScript and how to use it."},"sidebar":"tutorialSidebar","previous":{"title":"Operators in JavaScript","permalink":"/code-harbor-hub/docs/category/operators-in-javascript"},"next":{"title":"Arithmetic Operator","permalink":"/code-harbor-hub/docs/javascript/operators/arithmetic-operator-in-javascript"}},{"id":"javascript/operators/string-operator-in-javascript","title":"String Operator in JavaScript","description":"What is the string operator in JavaScript? Learn about the types of string operators in JavaScript, including string concatenation operator, implicit type conversion, string concatenation with assignment, and string concatenation with template literals.","source":"@site/docs/javascript/operators/string-operators-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/string-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/string-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/string-operators-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"String Operators","permalink":"/code-harbor-hub/docs/tags/string-operators"},{"label":"String Concatenation","permalink":"/code-harbor-hub/docs/tags/string-concatenation"},{"label":"Implicit Type Conversion","permalink":"/code-harbor-hub/docs/tags/implicit-type-conversion"},{"label":"String Concatenation with Assignment","permalink":"/code-harbor-hub/docs/tags/string-concatenation-with-assignment"},{"label":"String Concatenation with Template Literals","permalink":"/code-harbor-hub/docs/tags/string-concatenation-with-template-literals"},{"label":"Template Literals","permalink":"/code-harbor-hub/docs/tags/template-literals"},{"label":"ECMAScript 6","permalink":"/code-harbor-hub/docs/tags/ecma-script-6"},{"label":"ES6","permalink":"/code-harbor-hub/docs/tags/es-6"},{"label":"String Concatenation Operator","permalink":"/code-harbor-hub/docs/tags/string-concatenation-operator"},{"label":"Assignment Operator","permalink":"/code-harbor-hub/docs/tags/assignment-operator"},{"label":"Concatenation","permalink":"/code-harbor-hub/docs/tags/concatenation"},{"label":"String","permalink":"/code-harbor-hub/docs/tags/string"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708855615,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":5,"frontMatter":{"id":"string-operator-in-javascript","title":"String Operator in JavaScript","sidebar_label":"String Operator","sidebar_position":5,"tags":["JavaScript","Operators","String Operators","String Concatenation","Implicit Type Conversion","String Concatenation with Assignment","String Concatenation with Template Literals","Template Literals","ECMAScript 6","ES6","String Concatenation Operator","Assignment Operator","Template Literals","Implicit Type Conversion","Concatenation","String"],"description":"What is the string operator in JavaScript? Learn about the types of string operators in JavaScript, including string concatenation operator, implicit type conversion, string concatenation with assignment, and string concatenation with template literals."},"sidebar":"tutorialSidebar","previous":{"title":"Comparison Operator","permalink":"/code-harbor-hub/docs/javascript/operators/comparison-operator-in-javascript"},"next":{"title":"Logical Operator","permalink":"/code-harbor-hub/docs/javascript/operators/logical-operator-in-javascript"}},{"id":"javascript/operators/ternary-operator-in-javascript","title":"Ternary Operator in JavaScript","description":"What is the ternary operator in JavaScript? Learn about the ternary operator, its syntax, and how to use it to write concise conditional expressions in JavaScript.","source":"@site/docs/javascript/operators/ternary-operators-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/ternary-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/ternary-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/ternary-operators-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Ternary Operator","permalink":"/code-harbor-hub/docs/tags/ternary-operator"},{"label":"Conditional Operator","permalink":"/code-harbor-hub/docs/tags/conditional-operator"},{"label":"Conditional Expression","permalink":"/code-harbor-hub/docs/tags/conditional-expression"},{"label":"Ternary Operator Syntax","permalink":"/code-harbor-hub/docs/tags/ternary-operator-syntax"},{"label":"Ternary Operator Example","permalink":"/code-harbor-hub/docs/tags/ternary-operator-example"},{"label":"ECMAScript 1","permalink":"/code-harbor-hub/docs/tags/ecma-script-1"},{"label":"ES1","permalink":"/code-harbor-hub/docs/tags/es-1"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708855615,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":8,"frontMatter":{"id":"ternary-operator-in-javascript","title":"Ternary Operator in JavaScript","sidebar_label":"Ternary Operator","sidebar_position":8,"tags":["JavaScript","Operators","Ternary Operator","Conditional Operator","Conditional Expression","Ternary Operator Syntax","Ternary Operator Example","ECMAScript 1","ES1"],"description":"What is the ternary operator in JavaScript? Learn about the ternary operator, its syntax, and how to use it to write concise conditional expressions in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Bitwise Operator","permalink":"/code-harbor-hub/docs/javascript/operators/bitwise-operator-in-javascript"},"next":{"title":"Type Operator","permalink":"/code-harbor-hub/docs/javascript/operators/type-operator-in-javascript"}},{"id":"javascript/operators/type-operator-in-javascript","title":"Type Operator in JavaScript","description":"What is the type operator in JavaScript? Learn about the type operator, its syntax, and how to use it to check the data type of a value or variable in JavaScript.","source":"@site/docs/javascript/operators/type-operators-js.md","sourceDirName":"javascript/operators","slug":"/javascript/operators/type-operator-in-javascript","permalink":"/code-harbor-hub/docs/javascript/operators/type-operator-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/operators/type-operators-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Operators","permalink":"/code-harbor-hub/docs/tags/operators"},{"label":"Type Operator","permalink":"/code-harbor-hub/docs/tags/type-operator"},{"label":"typeof","permalink":"/code-harbor-hub/docs/tags/typeof"},{"label":"Type Operator Syntax","permalink":"/code-harbor-hub/docs/tags/type-operator-syntax"},{"label":"Type Operator Example","permalink":"/code-harbor-hub/docs/tags/type-operator-example"},{"label":"ECMAScript 1","permalink":"/code-harbor-hub/docs/tags/ecma-script-1"},{"label":"ES1","permalink":"/code-harbor-hub/docs/tags/es-1"},{"label":"Data Type","permalink":"/code-harbor-hub/docs/tags/data-type"},{"label":"Type Checking","permalink":"/code-harbor-hub/docs/tags/type-checking"},{"label":"Conditional Statements","permalink":"/code-harbor-hub/docs/tags/conditional-statements"},{"label":"Unary Operator","permalink":"/code-harbor-hub/docs/tags/unary-operator"},{"label":"Data Types","permalink":"/code-harbor-hub/docs/tags/data-types"},{"label":"Number","permalink":"/code-harbor-hub/docs/tags/number"},{"label":"String","permalink":"/code-harbor-hub/docs/tags/string"},{"label":"Boolean","permalink":"/code-harbor-hub/docs/tags/boolean"},{"label":"Object","permalink":"/code-harbor-hub/docs/tags/object"},{"label":"Array","permalink":"/code-harbor-hub/docs/tags/array"},{"label":"Function","permalink":"/code-harbor-hub/docs/tags/function"},{"label":"Undefined","permalink":"/code-harbor-hub/docs/tags/undefined"},{"label":"Symbol","permalink":"/code-harbor-hub/docs/tags/symbol"},{"label":"BigInt","permalink":"/code-harbor-hub/docs/tags/big-int"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708855615,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":8,"frontMatter":{"id":"type-operator-in-javascript","title":"Type Operator in JavaScript","sidebar_label":"Type Operator","sidebar_position":8,"tags":["JavaScript","Operators","Type Operator","typeof","Type Operator Syntax","Type Operator Example","ECMAScript 1","ES1","Data Type","Type Checking","Conditional Statements","Unary Operator","Data Types","Number","String","Boolean","Object","Array","Function","Undefined","Symbol","BigInt"],"description":"What is the type operator in JavaScript? Learn about the type operator, its syntax, and how to use it to check the data type of a value or variable in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Ternary Operator","permalink":"/code-harbor-hub/docs/javascript/operators/ternary-operator-in-javascript"},"next":{"title":"Data Types in JavaScript","permalink":"/code-harbor-hub/docs/category/data-types-in-javascript"}},{"id":"javascript/random-in-javascript","title":"Random in JavaScript","description":"In this tutorial, we will learn about the Math.random() method in JavaScript. We will learn how to generate random numbers in JavaScript.","source":"@site/docs/javascript/random.md","sourceDirName":"javascript","slug":"/javascript/random-in-javascript","permalink":"/code-harbor-hub/docs/javascript/random-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/random.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Math","permalink":"/code-harbor-hub/docs/tags/math"},{"label":"Object","permalink":"/code-harbor-hub/docs/tags/object"},{"label":"Methods","permalink":"/code-harbor-hub/docs/tags/methods"},{"label":"Random","permalink":"/code-harbor-hub/docs/tags/random"},{"label":"Number","permalink":"/code-harbor-hub/docs/tags/number"},{"label":"Integer","permalink":"/code-harbor-hub/docs/tags/integer"},{"label":"Range","permalink":"/code-harbor-hub/docs/tags/range"},{"label":"Floating-point","permalink":"/code-harbor-hub/docs/tags/floating-point"},{"label":"Generate","permalink":"/code-harbor-hub/docs/tags/generate"},{"label":"Math.random()","permalink":"/code-harbor-hub/docs/tags/math-random"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710237590,"formattedLastUpdatedAt":"Mar 12, 2024","sidebarPosition":18,"frontMatter":{"id":"random-in-javascript","title":"Random in JavaScript","sidebar_label":"Random","sidebar_position":18,"tags":["JavaScript","Math","Object","Methods","Random","Number","Integer","Range","Floating-point","Generate","Math.random()"],"description":"In this tutorial, we will learn about the Math.random() method in JavaScript. We will learn how to generate random numbers in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Math","permalink":"/code-harbor-hub/docs/javascript/math-in-javascript"},"next":{"title":"If...Else","permalink":"/code-harbor-hub/docs/javascript/if-else-in-javascript"}},{"id":"javascript/satatement-in-js","title":"Statement in JavaScript","description":"Write statements in JavaScript to perform different actions. Learn about different types of statements in JavaScript such as declaration statement, assignment statement, conditional statement, loop statement, function statement, return statement, break statement, continue statement, try...catch statement, and throw statement.","source":"@site/docs/javascript/statement-js.md","sourceDirName":"javascript","slug":"/javascript/satatement-in-js","permalink":"/code-harbor-hub/docs/javascript/satatement-in-js","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/statement-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Statement in JavaScript","permalink":"/code-harbor-hub/docs/tags/statement-in-java-script"},{"label":"statement in js","permalink":"/code-harbor-hub/docs/tags/statement-in-js"},{"label":"JavaScript statement","permalink":"/code-harbor-hub/docs/tags/java-script-statement"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708705481,"formattedLastUpdatedAt":"Feb 23, 2024","sidebarPosition":4,"frontMatter":{"id":"satatement-in-js","title":"Statement in JavaScript","sidebar_label":"Statement in JavaScript","sidebar_position":4,"tags":["JavaScript","Statement in JavaScript","statement in js","statement in JavaScript","JavaScript statement"],"description":"Write statements in JavaScript to perform different actions. Learn about different types of statements in JavaScript such as declaration statement, assignment statement, conditional statement, loop statement, function statement, return statement, break statement, continue statement, try...catch statement, and throw statement."},"sidebar":"tutorialSidebar","previous":{"title":"Basic JavaScript","permalink":"/code-harbor-hub/docs/javascript/basic-javascript"},"next":{"title":"Syntax of JavaScript","permalink":"/code-harbor-hub/docs/javascript/syntax-of-js"}},{"id":"javascript/switch-in-javascript","title":"Switch Statement in JavaScript","description":"In this tutorial, we will learn about the switch statement in JavaScript. We will learn how to use the switch statement to make decisions in JavaScript.","source":"@site/docs/javascript/switch.md","sourceDirName":"javascript","slug":"/javascript/switch-in-javascript","permalink":"/code-harbor-hub/docs/javascript/switch-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/switch.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Conditional","permalink":"/code-harbor-hub/docs/tags/conditional"},{"label":"Statement","permalink":"/code-harbor-hub/docs/tags/statement"},{"label":"Switch","permalink":"/code-harbor-hub/docs/tags/switch"},{"label":"Case","permalink":"/code-harbor-hub/docs/tags/case"},{"label":"Break","permalink":"/code-harbor-hub/docs/tags/break"},{"label":"Default","permalink":"/code-harbor-hub/docs/tags/default"},{"label":"Decision","permalink":"/code-harbor-hub/docs/tags/decision"},{"label":"Making","permalink":"/code-harbor-hub/docs/tags/making"},{"label":"Control","permalink":"/code-harbor-hub/docs/tags/control"},{"label":"Flow","permalink":"/code-harbor-hub/docs/tags/flow"},{"label":"Statements","permalink":"/code-harbor-hub/docs/tags/statements"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710237590,"formattedLastUpdatedAt":"Mar 12, 2024","sidebarPosition":20,"frontMatter":{"id":"switch-in-javascript","title":"Switch Statement in JavaScript","sidebar_label":"Switch Statement","sidebar_position":20,"tags":["JavaScript","Conditional","Statement","Switch","Case","Break","Default","Decision","Making","Control","Flow","Conditional","Statements"],"description":"In this tutorial, we will learn about the switch statement in JavaScript. We will learn how to use the switch statement to make decisions in JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"If...Else","permalink":"/code-harbor-hub/docs/javascript/if-else-in-javascript"},"next":{"title":"DSA","permalink":"/code-harbor-hub/docs/dsa/"}},{"id":"javascript/syntax-of-js","title":"Syntax of JavaScript","description":"Write a JavaScript program using the syntax of JavaScript. Learn about the syntax of JavaScript, how to create a JavaScript file, how to create variables, how to use variables, how to create and use functions, JavaScript values, operators, literals, keywords, comments, statements, expressions, identifiers, naming conventions, case sensitivity, and the JavaScript character set.","source":"@site/docs/javascript/syntax-js-.md","sourceDirName":"javascript","slug":"/javascript/syntax-of-js","permalink":"/code-harbor-hub/docs/javascript/syntax-of-js","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/syntax-js-.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Syntax of JavaScript","permalink":"/code-harbor-hub/docs/tags/syntax-of-java-script"},{"label":"syntax of js","permalink":"/code-harbor-hub/docs/tags/syntax-of-js"},{"label":"JavaScript syntax","permalink":"/code-harbor-hub/docs/tags/java-script-syntax"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708705481,"formattedLastUpdatedAt":"Feb 23, 2024","sidebarPosition":5,"frontMatter":{"id":"syntax-of-js","title":"Syntax of JavaScript","sidebar_label":"Syntax of JavaScript","sidebar_position":5,"tags":["JavaScript","Syntax of JavaScript","syntax of js","syntax of JavaScript","JavaScript syntax"],"description":"Write a JavaScript program using the syntax of JavaScript. Learn about the syntax of JavaScript, how to create a JavaScript file, how to create variables, how to use variables, how to create and use functions, JavaScript values, operators, literals, keywords, comments, statements, expressions, identifiers, naming conventions, case sensitivity, and the JavaScript character set."},"sidebar":"tutorialSidebar","previous":{"title":"Statement in JavaScript","permalink":"/code-harbor-hub/docs/javascript/satatement-in-js"},"next":{"title":"Comments in JavaScript","permalink":"/code-harbor-hub/docs/javascript/comments-in-javascript"}},{"id":"javascript/variables-in-javascript","title":"Variables in JavaScript","description":"What are variables in JavaScript? How to declare and initialize variables in JavaScript? Learn about variable naming rules and best practices.","source":"@site/docs/javascript/variables-js.md","sourceDirName":"javascript","slug":"/javascript/variables-in-javascript","permalink":"/code-harbor-hub/docs/javascript/variables-in-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/variables-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Variables","permalink":"/code-harbor-hub/docs/tags/variables"},{"label":"variables in js","permalink":"/code-harbor-hub/docs/tags/variables-in-js"},{"label":"JavaScript variables","permalink":"/code-harbor-hub/docs/tags/java-script-variables"},{"label":"let","permalink":"/code-harbor-hub/docs/tags/let"},{"label":"const","permalink":"/code-harbor-hub/docs/tags/const"},{"label":"var","permalink":"/code-harbor-hub/docs/tags/var"},{"label":"variable naming rules","permalink":"/code-harbor-hub/docs/tags/variable-naming-rules"},{"label":"variable best practices","permalink":"/code-harbor-hub/docs/tags/variable-best-practices"},{"label":"variable declaration","permalink":"/code-harbor-hub/docs/tags/variable-declaration"},{"label":"variable initialization","permalink":"/code-harbor-hub/docs/tags/variable-initialization"},{"label":"variable scope","permalink":"/code-harbor-hub/docs/tags/variable-scope"},{"label":"variable hoisting","permalink":"/code-harbor-hub/docs/tags/variable-hoisting"},{"label":"variable re-declaration","permalink":"/code-harbor-hub/docs/tags/variable-re-declaration"},{"label":"variable re-assignment","permalink":"/code-harbor-hub/docs/tags/variable-re-assignment"},{"label":"variable mutable","permalink":"/code-harbor-hub/docs/tags/variable-mutable"},{"label":"variable naming conventions","permalink":"/code-harbor-hub/docs/tags/variable-naming-conventions"},{"label":"variable naming best practices","permalink":"/code-harbor-hub/docs/tags/variable-naming-best-practices"},{"label":"variable naming guidelines","permalink":"/code-harbor-hub/docs/tags/variable-naming-guidelines"},{"label":"variable naming standards","permalink":"/code-harbor-hub/docs/tags/variable-naming-standards"},{"label":"variable naming conventions in JavaScript","permalink":"/code-harbor-hub/docs/tags/variable-naming-conventions-in-java-script"},{"label":"variable naming best practices in JavaScript","permalink":"/code-harbor-hub/docs/tags/variable-naming-best-practices-in-java-script"},{"label":"variable naming rules in JavaScript","permalink":"/code-harbor-hub/docs/tags/variable-naming-rules-in-java-script"},{"label":"variable naming guidelines in JavaScript","permalink":"/code-harbor-hub/docs/tags/variable-naming-guidelines-in-java-script"},{"label":"variable naming standards in JavaScript","permalink":"/code-harbor-hub/docs/tags/variable-naming-standards-in-java-script"},{"label":"variable naming conventions in JS","permalink":"/code-harbor-hub/docs/tags/variable-naming-conventions-in-js"},{"label":"variable naming best practices in JS","permalink":"/code-harbor-hub/docs/tags/variable-naming-best-practices-in-js"},{"label":"variable naming rules in JS","permalink":"/code-harbor-hub/docs/tags/variable-naming-rules-in-js"},{"label":"variable naming guidelines in JS","permalink":"/code-harbor-hub/docs/tags/variable-naming-guidelines-in-js"},{"label":"variable naming standards in JS","permalink":"/code-harbor-hub/docs/tags/variable-naming-standards-in-js"},{"label":"variable","permalink":"/code-harbor-hub/docs/tags/variable"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708750897,"formattedLastUpdatedAt":"Feb 24, 2024","sidebarPosition":7,"frontMatter":{"id":"variables-in-javascript","title":"Variables in JavaScript","sidebar_label":"Variables in JavaScript","sidebar_position":7,"tags":["JavaScript","Variables","variables in js","JavaScript variables","let","const","var","variable naming rules","variable best practices","variable declaration","variable initialization","variable scope","variable hoisting","variable re-declaration","variable re-assignment","variable mutable","variable naming conventions","variable naming best practices","variable naming rules","variable naming guidelines","variable naming standards","variable naming conventions in JavaScript","variable naming best practices in JavaScript","variable naming rules in JavaScript","variable naming guidelines in JavaScript","variable naming standards in JavaScript","variable naming conventions in JS","variable naming best practices in JS","variable naming rules in JS","variable naming guidelines in JS","variable naming standards in JS","variable naming conventions in JavaScript","variable naming best practices in JavaScript","variable naming rules in JavaScript","variable naming guidelines in JavaScript","variable naming standards in JavaScript","variable naming conventions in JS","variable naming best practices in JS","variable naming rules in JS","variable naming guidelines in JS","variable naming standards in JS","variable naming conventions in JavaScript","variable naming best practices in JavaScript","variable naming rules in JavaScript","variable naming guidelines in JavaScript","variable naming standards in JavaScript","variable naming conventions in JS","variable naming best practices in JS","variable naming rules in JS","variable naming guidelines in JS","variable naming standards in JS","variable naming conventions in JavaScript","variable naming best practices in JavaScript","variable naming rules in JavaScript","variable naming guidelines in JavaScript","variable naming standards in JavaScript","variable naming conventions in JS","variable naming best practices in JS","variable naming rules in JS","variable naming guidelines in JS","variable naming standards in JS","variable naming conventions in JavaScript","variable naming best practices in JavaScript","variable naming rules in JavaScript","variable naming guidelines in JavaScript","variable naming standards in JavaScript","variable naming conventions in JS","variable naming best practices in JS","variable naming rules in JS","variable naming guidelines in JS","variable naming standards in JS","variable naming conventions in JavaScript","variable naming best practices in JavaScript","variable naming rules in JavaScript","variable naming guidelines in JavaScript","variable naming standards in JavaScript","variable naming conventions in JS","variable naming best practices in JS","variable naming rules in JS","variable naming guidelines in JS","variable naming standards in JS","variable naming conventions in JavaScript","variable naming best practices in JavaScript","variable naming rules in JavaScript","variable naming guidelines in JavaScript","variable naming standards in JavaScript","variable naming conventions in JS","variable naming best practices in JS","variable naming rules in JS","variable naming guidelines in JS","variable naming standards in JS","variable naming conventions in JavaScript","variable"],"description":"What are variables in JavaScript? How to declare and initialize variables in JavaScript? Learn about variable naming rules and best practices."},"sidebar":"tutorialSidebar","previous":{"title":"Comments in JavaScript","permalink":"/code-harbor-hub/docs/javascript/comments-in-javascript"},"next":{"title":"Let Keyword","permalink":"/code-harbor-hub/docs/javascript/let-in-javascript"}},{"id":"javascript/where-to-js","title":"Where to Write JavaScript","description":"Where to write JavaScript code? Learn about the different places where JavaScript code can be written such as inline JavaScript, internal JavaScript, and external JavaScript.","source":"@site/docs/javascript/where-to-js.md","sourceDirName":"javascript","slug":"/javascript/where-to-js","permalink":"/code-harbor-hub/docs/javascript/where-to-js","draft":false,"unlisted":false,"editUrl":"https://github.com/Ajay-Dhangar/code-harbor-hub/edit/main/docs/javascript/where-to-js.md","tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/docs/tags/java-script"},{"label":"Introduction of js","permalink":"/code-harbor-hub/docs/tags/introduction-of-js"},{"label":"Introduction of JavaScript","permalink":"/code-harbor-hub/docs/tags/introduction-of-java-script"},{"label":"Where to javascript","permalink":"/code-harbor-hub/docs/tags/where-to-javascript"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708705481,"formattedLastUpdatedAt":"Feb 23, 2024","sidebarPosition":2,"frontMatter":{"id":"where-to-js","title":"Where to Write JavaScript","sidebar_label":"Where to JavaScript","sidebar_position":2,"tags":["JavaScript","Introduction of js","Introduction of JavaScript","Where to javascript"],"description":"Where to write JavaScript code? Learn about the different places where JavaScript code can be written such as inline JavaScript, internal JavaScript, and external JavaScript."},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to JavaScript","permalink":"/code-harbor-hub/docs/javascript/intro-js"},"next":{"title":"Basic JavaScript","permalink":"/code-harbor-hub/docs/javascript/basic-javascript"}}],"drafts":[],"sidebars":{"tutorialSidebar":[{"type":"doc","id":"index","label":"Documentation"},{"type":"doc","id":"intro","label":"Introduction"},{"type":"doc","id":"features","label":"Features"},{"type":"category","label":"JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/intro-js","label":"Introduction to JavaScript"},{"type":"doc","id":"javascript/where-to-js","label":"Where to JavaScript"},{"type":"doc","id":"javascript/basic-javascript","label":"Basic JavaScript"},{"type":"doc","id":"javascript/satatement-in-js","label":"Statement in JavaScript"},{"type":"doc","id":"javascript/syntax-of-js","label":"Syntax of JavaScript"},{"type":"doc","id":"javascript/comments-in-javascript","label":"Comments in JavaScript"},{"type":"doc","id":"javascript/variables-in-javascript","label":"Variables in JavaScript"},{"type":"doc","id":"javascript/let-in-javascript","label":"Let Keyword"},{"type":"doc","id":"javascript/const-in-javascript","label":"Const Keyword"},{"type":"category","label":"Operators in JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/operators/operators-in-javascript","label":"Operators"},{"type":"doc","id":"javascript/operators/arithmetic-operator-in-javascript","label":"Arithmetic Operator"},{"type":"doc","id":"javascript/operators/assignment-operator-in-javascript","label":"Assignment Operator"},{"type":"doc","id":"javascript/operators/comparison-operator-in-javascript","label":"Comparison Operator"},{"type":"doc","id":"javascript/operators/string-operator-in-javascript","label":"String Operator"},{"type":"doc","id":"javascript/operators/logical-operator-in-javascript","label":"Logical Operator"},{"type":"doc","id":"javascript/operators/bitwise-operator-in-javascript","label":"Bitwise Operator"},{"type":"doc","id":"javascript/operators/ternary-operator-in-javascript","label":"Ternary Operator"},{"type":"doc","id":"javascript/operators/type-operator-in-javascript","label":"Type Operator"}],"link":{"type":"generated-index","description":"Learn the most popular programming language in the world.","slug":"/category/operators-in-javascript","permalink":"/code-harbor-hub/docs/category/operators-in-javascript"}},{"type":"category","label":"Data Types in JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/datatypes/datatypes-in-javascript","label":"Data Types"},{"type":"category","label":"Primitive Data Types","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","label":"Number"},{"type":"doc","id":"javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","label":"String"},{"type":"doc","id":"javascript/datatypes/primitive-data-types/boolean-in-javascript","label":"Boolean"},{"type":"doc","id":"javascript/datatypes/primitive-data-types/undefined-in-javascript","label":"Undefined"},{"type":"doc","id":"javascript/datatypes/primitive-data-types/null-in-javascript","label":"Null"},{"type":"doc","id":"javascript/datatypes/primitive-data-types/bigint-in-javascript","label":"BigInt"},{"type":"doc","id":"javascript/datatypes/primitive-data-types/symbol-in-javascript","label":"Symbol"}],"link":{"type":"generated-index","description":"In the JavaScript, Primitive Data Types are immutable and are passed by value. There are 7 primitive data types: string, number, bigint, boolean, undefined, null and symbol.","slug":"/category/primitive-data-types","permalink":"/code-harbor-hub/docs/category/primitive-data-types"}},{"type":"category","label":"Non Primitive Data Types","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","label":"Object"},{"type":"doc","id":"javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","label":"Array"},{"type":"doc","id":"javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","label":"Function"},{"type":"doc","id":"javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","label":"Date"}],"link":{"type":"generated-index","description":"In JavaScript Non Primitive Data Types (object data types) are used to store complex data types. These are the reference data types. They are called so because they don\'t store the value directly, they store the reference of the value. The reference is a pointer to a location in memory where the value is stored. Non-primitive data types are used to store complex objects. They are also called reference data types because they refer to the objects. Non-primitive data types are Object, Array, and Function.","slug":"/category/non-primitive-data-types","permalink":"/code-harbor-hub/docs/category/non-primitive-data-types"}}],"link":{"type":"generated-index","description":"Data types are the classification or categorization of data items. It represents the kind of value that tells what operations can be performed on a particular data. Since everything is an object in JavaScript, data types are divided into two categories: primitive data types and object data types. Primitive data types are the most basic data types available in JavaScript. They are the building blocks for data manipulation. Object data types are more complex data types and are used to store collections of data and more complex entities.","slug":"/category/data-types-in-javascript","permalink":"/code-harbor-hub/docs/category/data-types-in-javascript"}},{"type":"doc","id":"javascript/events-in-javascript","label":"Events"},{"type":"doc","id":"javascript/all-about-strings","label":"Strings in JavaScript"},{"type":"doc","id":"javascript/all-about-numbers","label":"Numbers"},{"type":"doc","id":"javascript/arrays-in-javascript","label":"Arrays"},{"type":"doc","id":"javascript/objects-in-javascript","label":"Objects"},{"type":"doc","id":"javascript/math-in-javascript","label":"Math"},{"type":"doc","id":"javascript/random-in-javascript","label":"Random"},{"type":"doc","id":"javascript/if-else-in-javascript","label":"If...Else"},{"type":"doc","id":"javascript/switch-in-javascript","label":"Switch Statement"}],"link":{"type":"generated-index","description":"JavaScript is a programming language that enables you to create dynamically updating content, control multimedia, animate images, and much more. In this tutorial, you\'ll learn the basics of JavaScript and how to use it to create interactive web experiences.","slug":"/category/javascript","permalink":"/code-harbor-hub/docs/category/javascript"}},{"type":"doc","label":"DSA","id":"dsa/dsa"}]}}]},"community":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/code-harbor-hub/community","tagsPath":"/code-harbor-hub/community/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/code-harbor-hub/code-harbor-hub/sidebarsCommunity.js","contentPath":"/home/runner/work/code-harbor-hub/code-harbor-hub/community","contentPathLocalized":"/home/runner/work/code-harbor-hub/code-harbor-hub/i18n/en/docusaurus-plugin-content-docs-community/current","docs":[{"id":"index","title":"Community","description":"Our community is a place for everyone to learn, share, and grow. We encourage you to join us and contribute to the community in any way you can. We are always looking for new members to join our community and help us grow. Whether you are a developer, designer, or just someone who is interested in learning more about our project, we would love to have you join us.","source":"@site/community/index.md","sourceDirName":".","slug":"/","permalink":"/code-harbor-hub/community/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708511977,"formattedLastUpdatedAt":"Feb 21, 2024","sidebarPosition":1,"frontMatter":{"title":"Community","sidebar_label":"Welcome to the Community","sidebar_position":1},"sidebar":"sidebarsCommunity"}],"drafts":[],"sidebars":{"sidebarsCommunity":[{"type":"doc","id":"index","label":"Welcome to the Community"}]}}]},"dsa":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/code-harbor-hub/dsa","tagsPath":"/code-harbor-hub/dsa/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/code-harbor-hub/code-harbor-hub/sidebarsDSA.js","contentPath":"/home/runner/work/code-harbor-hub/code-harbor-hub/dsa","contentPathLocalized":"/home/runner/work/code-harbor-hub/code-harbor-hub/i18n/en/docusaurus-plugin-content-docs-dsa/current","docs":[{"id":"arrays/arrays-in-dsa","title":"Arrays in Data Structures and Algorithms","description":"An array is a collection of items stored at contiguous memory locations. It is a data structure that stores a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.","source":"@site/dsa/arrays/arrays-dsa.md","sourceDirName":"arrays","slug":"/arrays/arrays-in-dsa","permalink":"/code-harbor-hub/dsa/arrays/arrays-in-dsa","draft":false,"unlisted":false,"tags":[{"label":"dsa","permalink":"/code-harbor-hub/dsa/tags/dsa"},{"label":"data-structures","permalink":"/code-harbor-hub/dsa/tags/data-structures"},{"label":"arrays","permalink":"/code-harbor-hub/dsa/tags/arrays"},{"label":"array","permalink":"/code-harbor-hub/dsa/tags/array"},{"label":"array-data-structure","permalink":"/code-harbor-hub/dsa/tags/array-data-structure"},{"label":"array-in-dsa","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa"},{"label":"array-in-data-structure","permalink":"/code-harbor-hub/dsa/tags/array-in-data-structure"},{"label":"array-in-algorithm","permalink":"/code-harbor-hub/dsa/tags/array-in-algorithm"},{"label":"array-in-dsa-example","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-example"},{"label":"array-in-dsa-explanation","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-explanation"},{"label":"array-in-dsa-conclusion","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-conclusion"},{"label":"array-in-dsa-importance","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-importance"},{"label":"array-in-dsa-syntax","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-syntax"},{"label":"array-in-dsa-declaration","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-declaration"},{"label":"array-in-dsa-access","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-access"},{"label":"array-in-dsa-update","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-update"},{"label":"array-in-dsa-length","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-length"},{"label":"array-in-dsa-iterate","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-iterate"},{"label":"array-in-dsa-max-min","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-max-min"},{"label":"array-in-dsa-program","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-program"},{"label":"array-in-dsa-code","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-code"},{"label":"array-in-dsa-js","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-js"},{"label":"array-in-dsa-java","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-java"},{"label":"array-in-dsa-python","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-python"},{"label":"array-in-dsa-c","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-c"},{"label":"array-in-dsa-cpp","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-cpp"},{"label":"array-in-dsa-ts","permalink":"/code-harbor-hub/dsa/tags/array-in-dsa-ts"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710159297,"formattedLastUpdatedAt":"Mar 11, 2024","sidebarPosition":1,"frontMatter":{"id":"arrays-in-dsa","title":"Arrays in Data Structures and Algorithms","sidebar_label":"Arrays","sidebar_position":1,"description":"An array is a collection of items stored at contiguous memory locations. It is a data structure that stores a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.","tags":["dsa","data-structures","arrays","array","array-data-structure","array-in-dsa","array-in-data-structure","array-in-algorithm","array-in-dsa-example","array-in-dsa-explanation","array-in-dsa-conclusion","array-in-dsa-importance","array-in-dsa-syntax","array-in-dsa-declaration","array-in-dsa-access","array-in-dsa-update","array-in-dsa-length","array-in-dsa-iterate","array-in-dsa-max-min","array-in-dsa-program","array-in-dsa-code","array-in-dsa-js","array-in-dsa-java","array-in-dsa-python","array-in-dsa-c","array-in-dsa-cpp","array-in-dsa-ts"]},"sidebar":"codeharborhub","previous":{"title":"Arrays","permalink":"/code-harbor-hub/dsa/category/arrays"}},{"id":"basic-concepts/space-complexity","title":"Space Complexity","description":"Space complexity is a measure of the amount of working storage an algorithm needs. It is a measure of the amount of memory space an algorithm needs to solve a problem as a function of the size of the input to the problem. It is the amount of memory space required by the algorithm to execute in its life cycle.","source":"@site/dsa/basic-concepts/space-complexity.md","sourceDirName":"basic-concepts","slug":"/basic-concepts/space-complexity","permalink":"/code-harbor-hub/dsa/basic-concepts/space-complexity","draft":false,"unlisted":false,"tags":[{"label":"Space Complexity","permalink":"/code-harbor-hub/dsa/tags/space-complexity"},{"label":"Big O Notation","permalink":"/code-harbor-hub/dsa/tags/big-o-notation"},{"label":"Memory","permalink":"/code-harbor-hub/dsa/tags/memory"},{"label":"Algorithm","permalink":"/code-harbor-hub/dsa/tags/algorithm"},{"label":"Complexity Analysis","permalink":"/code-harbor-hub/dsa/tags/complexity-analysis"},{"label":"Data Structure","permalink":"/code-harbor-hub/dsa/tags/data-structure"},{"label":"DSA","permalink":"/code-harbor-hub/dsa/tags/dsa"},{"label":"JavaScript","permalink":"/code-harbor-hub/dsa/tags/java-script"},{"label":"Java","permalink":"/code-harbor-hub/dsa/tags/java"},{"label":"Python","permalink":"/code-harbor-hub/dsa/tags/python"},{"label":"C","permalink":"/code-harbor-hub/dsa/tags/c"},{"label":"Space Complexity Example","permalink":"/code-harbor-hub/dsa/tags/space-complexity-example"},{"label":"Space Complexity Calculation","permalink":"/code-harbor-hub/dsa/tags/space-complexity-calculation"},{"label":"Space Complexity Analysis","permalink":"/code-harbor-hub/dsa/tags/space-complexity-analysis"},{"label":"Space Complexity Explanation","permalink":"/code-harbor-hub/dsa/tags/space-complexity-explanation"},{"label":"Space Complexity Conclusion","permalink":"/code-harbor-hub/dsa/tags/space-complexity-conclusion"},{"label":"Space Complexity Importance","permalink":"/code-harbor-hub/dsa/tags/space-complexity-importance"},{"label":"Space Complexity Formula","permalink":"/code-harbor-hub/dsa/tags/space-complexity-formula"},{"label":"Space Complexity Constant Space","permalink":"/code-harbor-hub/dsa/tags/space-complexity-constant-space"},{"label":"Space Complexity Auxiliary Space","permalink":"/code-harbor-hub/dsa/tags/space-complexity-auxiliary-space"},{"label":"Space Complexity Program","permalink":"/code-harbor-hub/dsa/tags/space-complexity-program"},{"label":"Space Complexity Code","permalink":"/code-harbor-hub/dsa/tags/space-complexity-code"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710086229,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":2,"frontMatter":{"id":"space-complexity","title":"Space Complexity","sidebar_label":"Space Complexity","sidebar_position":2,"description":"Space complexity is a measure of the amount of working storage an algorithm needs. It is a measure of the amount of memory space an algorithm needs to solve a problem as a function of the size of the input to the problem. It is the amount of memory space required by the algorithm to execute in its life cycle.","tags":["Space Complexity","Big O Notation","Memory","Algorithm","Complexity Analysis","Data Structure","DSA","JavaScript","Java","Python","C","C++","Space Complexity Example","Space Complexity Calculation","Space Complexity Analysis","Space Complexity Explanation","Space Complexity Conclusion","Space Complexity Importance","Space Complexity Formula","Space Complexity Constant Space","Space Complexity Auxiliary Space","Space Complexity Example","Space Complexity Program","Space Complexity Code"]},"sidebar":"codeharborhub","previous":{"title":"Time Complexity","permalink":"/code-harbor-hub/dsa/basic-concepts/time-complexity"},"next":{"title":"Arrays","permalink":"/code-harbor-hub/dsa/category/arrays"}},{"id":"basic-concepts/time-complexity","title":"Time Complexity","description":"Time Complexity is a measure of the amount of time an algorithm takes to solve a problem as a function of the size of the input to the problem. It is commonly estimated by counting the number of elementary operations performed by the algorithm, where an elementary operation takes a fixed amount of time to perform.","source":"@site/dsa/basic-concepts/time-complexity.md","sourceDirName":"basic-concepts","slug":"/basic-concepts/time-complexity","permalink":"/code-harbor-hub/dsa/basic-concepts/time-complexity","draft":false,"unlisted":false,"tags":[{"label":"time complexity","permalink":"/code-harbor-hub/dsa/tags/time-complexity"},{"label":"big o notation","permalink":"/code-harbor-hub/dsa/tags/big-o-notation"},{"label":"algorithm","permalink":"/code-harbor-hub/dsa/tags/algorithm"},{"label":"complexity analysis","permalink":"/code-harbor-hub/dsa/tags/complexity-analysis"},{"label":"data structure","permalink":"/code-harbor-hub/dsa/tags/data-structure"},{"label":"dsa","permalink":"/code-harbor-hub/dsa/tags/dsa"},{"label":"javascript","permalink":"/code-harbor-hub/dsa/tags/javascript"},{"label":"java","permalink":"/code-harbor-hub/dsa/tags/java"},{"label":"python","permalink":"/code-harbor-hub/dsa/tags/python"},{"label":"c","permalink":"/code-harbor-hub/dsa/tags/c"},{"label":"time complexity example","permalink":"/code-harbor-hub/dsa/tags/time-complexity-example"},{"label":"time complexity calculation","permalink":"/code-harbor-hub/dsa/tags/time-complexity-calculation"},{"label":"time complexity analysis","permalink":"/code-harbor-hub/dsa/tags/time-complexity-analysis"},{"label":"time complexity explanation","permalink":"/code-harbor-hub/dsa/tags/time-complexity-explanation"},{"label":"time complexity conclusion","permalink":"/code-harbor-hub/dsa/tags/time-complexity-conclusion"},{"label":"time complexity importance","permalink":"/code-harbor-hub/dsa/tags/time-complexity-importance"},{"label":"time complexity formula","permalink":"/code-harbor-hub/dsa/tags/time-complexity-formula"},{"label":"time complexity constant time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-constant-time"},{"label":"time complexity linear time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-linear-time"},{"label":"time complexity logarithmic time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-logarithmic-time"},{"label":"time complexity quadratic time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-quadratic-time"},{"label":"time complexity exponential time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-exponential-time"},{"label":"time complexity factorial time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-factorial-time"},{"label":"time complexity polynomial time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-polynomial-time"},{"label":"time complexity sublinear time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-sublinear-time"},{"label":"time complexity linearithmic time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-linearithmic-time"},{"label":"time complexity quasilinear time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-quasilinear-time"},{"label":"time complexity superpolynomial time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-superpolynomial-time"},{"label":"time complexity subexponential time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-subexponential-time"},{"label":"time complexity log factorial time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-log-factorial-time"},{"label":"time complexity exponential factorial time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-exponential-factorial-time"},{"label":"time complexity exponential exponential time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-exponential-exponential-time"},{"label":"time complexity exponential factorial exponential time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-exponential-factorial-exponential-time"},{"label":"time complexity exponential exponential factorial time","permalink":"/code-harbor-hub/dsa/tags/time-complexity-exponential-exponential-factorial-time"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710086229,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"time-complexity","title":"Time Complexity","sidebar_label":"Time Complexity","sidebar_position":1,"description":"Time Complexity is a measure of the amount of time an algorithm takes to solve a problem as a function of the size of the input to the problem. It is commonly estimated by counting the number of elementary operations performed by the algorithm, where an elementary operation takes a fixed amount of time to perform.","tags":["time complexity","big o notation","algorithm","complexity analysis","data structure","dsa","javascript","java","python","c","c++","time complexity example","time complexity calculation","time complexity analysis","time complexity explanation","time complexity conclusion","time complexity importance","time complexity formula","time complexity constant time","time complexity linear time","time complexity logarithmic time","time complexity quadratic time","time complexity exponential time","time complexity factorial time","time complexity polynomial time","time complexity sublinear time","time complexity linearithmic time","time complexity quasilinear time","time complexity superpolynomial time","time complexity subexponential time","time complexity log factorial time","time complexity exponential factorial time","time complexity exponential exponential time","time complexity exponential factorial exponential time","time complexity exponential exponential factorial time"]},"sidebar":"codeharborhub","previous":{"title":"Basic Concepts","permalink":"/code-harbor-hub/dsa/category/basic-concepts"},"next":{"title":"Space Complexity","permalink":"/code-harbor-hub/dsa/basic-concepts/space-complexity"}},{"id":"data-structures-and-algorithms","title":"Data Structures and Algorithms","description":"Data Structures and Algorithms are the building blocks of computer science. They are the tools you\'ll use to build software systems. This section is a collection of resources to help you understand and master Data Structures and Algorithms.","source":"@site/dsa/index.md","sourceDirName":".","slug":"/","permalink":"/code-harbor-hub/dsa/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710072529,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"data-structures-and-algorithms","title":"Data Structures and Algorithms","sidebar_label":"Data Structures and Algorithms","sidebar_position":1},"sidebar":"codeharborhub","next":{"title":"Basic Concepts","permalink":"/code-harbor-hub/dsa/category/basic-concepts"}}],"drafts":[],"sidebars":{"codeharborhub":[{"type":"doc","id":"data-structures-and-algorithms","label":"Data Structures and Algorithms"},{"type":"category","label":"Basic Concepts","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"basic-concepts/time-complexity","label":"Time Complexity"},{"type":"doc","id":"basic-concepts/space-complexity","label":"Space Complexity"}],"link":{"type":"generated-index","description":"Basic Concepts of Data Structures and Algorithms.","slug":"/category/basic-concepts","permalink":"/code-harbor-hub/dsa/category/basic-concepts"}},{"type":"category","label":"Arrays","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"arrays/arrays-in-dsa","label":"Arrays"}],"link":{"type":"generated-index","description":"In Data Structures, an array is a data structure consisting of a collection of elements, each identified by at least one array index or key. An array is stored such that the position of each element can be computed from its index tuple by a mathematical formula. The simplest type of data structure is a linear array, also called one-dimensional array.","slug":"/category/arrays","permalink":"/code-harbor-hub/dsa/category/arrays"}}]}}]},"product":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/code-harbor-hub/product","tagsPath":"/code-harbor-hub/product/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/code-harbor-hub/code-harbor-hub/sidebarsProduct.js","contentPath":"/home/runner/work/code-harbor-hub/code-harbor-hub/product","contentPathLocalized":"/home/runner/work/code-harbor-hub/code-harbor-hub/i18n/en/docusaurus-plugin-content-docs-product/current","docs":[{"id":"index","title":"Product","description":"Our product is a place for everyone to learn, share, and grow. We encourage you to join us and contribute to the product in any way you can. We are always looking for new members to join our product and help us grow. Whether you are a developer, designer, or just someone who is interested in learning more about our project, we would love to have you join us.","source":"@site/product/index.md","sourceDirName":".","slug":"/","permalink":"/code-harbor-hub/product/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708511977,"formattedLastUpdatedAt":"Feb 21, 2024","sidebarPosition":1,"frontMatter":{"title":"Product","sidebar_label":"Welcome to the Product Hub","sidebar_position":1},"sidebar":"codeharborhub"}],"drafts":[],"sidebars":{"codeharborhub":[{"type":"doc","id":"index","label":"Welcome to the Product Hub"}]}}]},"courses":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/code-harbor-hub/courses","tagsPath":"/code-harbor-hub/courses/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/code-harbor-hub/code-harbor-hub/sidebarsCourses.js","contentPath":"/home/runner/work/code-harbor-hub/code-harbor-hub/courses","contentPathLocalized":"/home/runner/work/code-harbor-hub/code-harbor-hub/i18n/en/docusaurus-plugin-content-docs-courses/current","docs":[{"id":"html/index","title":"Welcome to HTML","description":"","source":"@site/courses/html/index.md","sourceDirName":"html","slug":"/html/","permalink":"/code-harbor-hub/courses/html/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708577403,"formattedLastUpdatedAt":"Feb 22, 2024","sidebarPosition":1,"frontMatter":{"title":"Welcome to HTML","sidebar_label":"Welcome to HTML","sidebar_position":1},"sidebar":"codeharborhub","next":{"title":"Wlcome to Courses","permalink":"/code-harbor-hub/courses/"}},{"id":"index","title":"Welcome to our Courses","description":"Our courses are designed to help you learn new skills and advance your career. Whether you are a beginner or an experienced professional, our courses can help you gain the knowledge and skills you need to succeed.","source":"@site/courses/index.md","sourceDirName":".","slug":"/","permalink":"/code-harbor-hub/courses/","draft":false,"unlisted":false,"tags":[{"label":"courses","permalink":"/code-harbor-hub/courses/tags/courses"}],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708511977,"formattedLastUpdatedAt":"Feb 21, 2024","sidebarPosition":1,"frontMatter":{"title":"Welcome to our Courses","sidebar_label":"Wlcome to Courses","sidebar_position":1,"description":"Our courses are designed to help you learn new skills and advance your career. Whether you are a beginner or an experienced professional, our courses can help you gain the knowledge and skills you need to succeed.","tags":["courses"],"keywoards":["courses","learning","tutorials","resources","web development","data science","collaboration","project management","security"],"author":["CodeHarborHub","Ajay Dhangar"]},"sidebar":"codeharborhub","previous":{"title":"Welcome to HTML","permalink":"/code-harbor-hub/courses/html/"},"next":{"title":"Intro Web Dev","permalink":"/code-harbor-hub/courses/javascript/"}},{"id":"javascript/index","title":"Introduction to Web Development","description":"","source":"@site/courses/javascript/index.md","sourceDirName":"javascript","slug":"/javascript/","permalink":"/code-harbor-hub/courses/javascript/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708577403,"formattedLastUpdatedAt":"Feb 22, 2024","sidebarPosition":1,"frontMatter":{"title":"Introduction to Web Development","sidebar_label":"Intro Web Dev","sidebar_position":1},"sidebar":"codeharborhub","previous":{"title":"Wlcome to Courses","permalink":"/code-harbor-hub/courses/"}}],"drafts":[],"sidebars":{"codeharborhub":[{"type":"doc","label":"Welcome to HTML","id":"html/index"},{"type":"doc","id":"index","label":"Wlcome to Courses"},{"type":"doc","label":"Intro Web Dev","id":"javascript/index"}]}}]},"web-dev":{"loadedVersions":[{"versionName":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","path":"/code-harbor-hub/web-dev","tagsPath":"/code-harbor-hub/web-dev/tags","isLast":true,"routePriority":-1,"sidebarFilePath":"/home/runner/work/code-harbor-hub/code-harbor-hub/sidebarsWebDev.js","contentPath":"/home/runner/work/code-harbor-hub/code-harbor-hub/web-dev","contentPathLocalized":"/home/runner/work/code-harbor-hub/code-harbor-hub/i18n/en/docusaurus-plugin-content-docs-web-dev/current","docs":[{"id":"all-web-dev","title":"Introduction to Web Development","description":"Web development is the work involved in developing a Web site for the Internet (World Wide Web) or an intranet (a private network). Web development can range from developing a simple single static page of plain text to complex Web-based Internet applications (Web apps), electronic businesses, and social network services. A more comprehensive list of tasks to which Web development commonly refers may include Web engineering, Web design, Web content development, client liaison, client-side/server-side scripting, Web server and network security configuration, and e-commerce development. Among Web professionals, \\"Web development\\" usually refers to the main non-design aspects of building Web sites: writing markup and coding. Web development may use content management systems (CMS) to make content changes easier and available with basic technical skills.","source":"@site/web-dev/index.md","sourceDirName":".","slug":"/","permalink":"/code-harbor-hub/web-dev/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708847359,"formattedLastUpdatedAt":"Feb 25, 2024","sidebarPosition":1,"frontMatter":{"id":"all-web-dev","title":"Introduction to Web Development","sidebar_label":"Introduction Web Dev","sidebar_position":1},"sidebar":"sidebarsWebDev","next":{"title":"Welcome To HTML","permalink":"/code-harbor-hub/web-dev/html/welcome-html"}},{"id":"html/welcome-html","title":"Welcome to the HTML","description":"","source":"@site/web-dev/html/welcome-html.md","sourceDirName":"html","slug":"/html/welcome-html","permalink":"/code-harbor-hub/web-dev/html/welcome-html","draft":false,"unlisted":false,"tags":[{"label":"html","permalink":"/code-harbor-hub/web-dev/tags/html"}],"version":"current","lastUpdatedBy":"Ajay-Dhangar","lastUpdatedAt":1708577403,"formattedLastUpdatedAt":"Feb 22, 2024","sidebarPosition":1,"frontMatter":{"id":"welcome-html","title":"Welcome to the HTML","sidebar_label":"Welcome To HTML","sidebar_position":1,"tags":["html"]},"sidebar":"sidebarsWebDev","previous":{"title":"Introduction Web Dev","permalink":"/code-harbor-hub/web-dev/"},"next":{"title":"Welcome To HTML","permalink":"/code-harbor-hub/web-dev/html/welcome-html"}},{"id":"javascript/advanced-topics/functional-programming-concepts-in-javascript","title":"Functional Programming Concepts in JavaScript","description":"","source":"@site/web-dev/javascript/advanced-topics/functional-programming-concepts-in-javascript.md","sourceDirName":"javascript/advanced-topics","slug":"/javascript/advanced-topics/functional-programming-concepts-in-javascript","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/functional-programming-concepts-in-javascript","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":2,"frontMatter":{"id":"functional-programming-concepts-in-javascript","title":"Functional Programming Concepts in JavaScript","sidebar_label":"Functional Programming Concepts","sidebar_position":2},"sidebar":"sidebarsWebDev","previous":{"title":"Object-Oriented JavaScript","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/object-oriented-javascript"},"next":{"title":"Performance Optimization Techniques","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/performance-optimization-techniques"}},{"id":"javascript/advanced-topics/object-oriented-javascript","title":"Object-Oriented JavaScript","description":"","source":"@site/web-dev/javascript/advanced-topics/object-oriented-javascript.md","sourceDirName":"javascript/advanced-topics","slug":"/javascript/advanced-topics/object-oriented-javascript","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/object-oriented-javascript","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"object-oriented-javascript","title":"Object-Oriented JavaScript","sidebar_label":"Object-Oriented JavaScript","sidebar_position":1},"sidebar":"sidebarsWebDev","previous":{"title":"Advanced Topics","permalink":"/code-harbor-hub/web-dev/category/advanced-topics"},"next":{"title":"Functional Programming Concepts","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/functional-programming-concepts-in-javascript"}},{"id":"javascript/advanced-topics/performance-optimization-techniques","title":"Performance Optimization Techniques","description":"","source":"@site/web-dev/javascript/advanced-topics/performance-optimization-techniques.md","sourceDirName":"javascript/advanced-topics","slug":"/javascript/advanced-topics/performance-optimization-techniques","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/performance-optimization-techniques","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":3,"frontMatter":{"id":"performance-optimization-techniques","title":"Performance Optimization Techniques","sidebar_label":"Performance Optimization Techniques","sidebar_position":3},"sidebar":"sidebarsWebDev","previous":{"title":"Functional Programming Concepts","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/functional-programming-concepts-in-javascript"},"next":{"title":"Security Best Practices","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/security-best-practices-in-javascript-development"}},{"id":"javascript/advanced-topics/security-best-practices-in-javascript-development","title":"Security Best Practices in JavaScript Development","description":"","source":"@site/web-dev/javascript/advanced-topics/security-best-practices-in-javascript-development.md","sourceDirName":"javascript/advanced-topics","slug":"/javascript/advanced-topics/security-best-practices-in-javascript-development","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/security-best-practices-in-javascript-development","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":4,"frontMatter":{"id":"security-best-practices-in-javascript-development","title":"Security Best Practices in JavaScript Development","sidebar_label":"Security Best Practices","sidebar_position":4},"sidebar":"sidebarsWebDev","previous":{"title":"Performance Optimization Techniques","permalink":"/code-harbor-hub/web-dev/javascript/advanced-topics/performance-optimization-techniques"},"next":{"title":"Tools and Resources","permalink":"/code-harbor-hub/web-dev/category/tools-and-resources"}},{"id":"javascript/asynchronous-javascript/callback-functions","title":"Callback Functions","description":"","source":"@site/web-dev/javascript/asynchronous-javascript/callback-functions.md","sourceDirName":"javascript/asynchronous-javascript","slug":"/javascript/asynchronous-javascript/callback-functions","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/callback-functions","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":2,"frontMatter":{"id":"callback-functions","title":"Callback Functions","sidebar_label":"Callback Functions","sidebar_position":2},"sidebar":"sidebarsWebDev","previous":{"title":"Introduction to Asynchronous Programming","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/introduction-to-asynchronous-programming"},"next":{"title":"Promises and Async and Await Syntax","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/promises-and-async-and-await-syntax"}},{"id":"javascript/asynchronous-javascript/fetch-api-for-making-http-requests","title":"Fetch API for Making HTTP Requests","description":"","source":"@site/web-dev/javascript/asynchronous-javascript/fetch-api-for-making-http-requests.md","sourceDirName":"javascript/asynchronous-javascript","slug":"/javascript/asynchronous-javascript/fetch-api-for-making-http-requests","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/fetch-api-for-making-http-requests","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":4,"frontMatter":{"id":"fetch-api-for-making-http-requests","title":"Fetch API for Making HTTP Requests","sidebar_label":"Fetch API for Making HTTP Requests","sidebar_position":4},"sidebar":"sidebarsWebDev","previous":{"title":"Promises and Async and Await Syntax","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/promises-and-async-and-await-syntax"},"next":{"title":"Error Handling and Debugging","permalink":"/code-harbor-hub/web-dev/category/error-handling-and-debugging"}},{"id":"javascript/asynchronous-javascript/introduction-to-asynchronous-programming","title":"Introduction to Asynchronous Programming","description":"","source":"@site/web-dev/javascript/asynchronous-javascript/introduction-to-asynchronous-programming.md","sourceDirName":"javascript/asynchronous-javascript","slug":"/javascript/asynchronous-javascript/introduction-to-asynchronous-programming","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/introduction-to-asynchronous-programming","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"introduction-to-asynchronous-programming","title":"Introduction to Asynchronous Programming","sidebar_label":"Introduction to Asynchronous Programming","sidebar_position":1},"sidebar":"sidebarsWebDev","previous":{"title":"Asynchronous JavaScript","permalink":"/code-harbor-hub/web-dev/category/asynchronous-javascript"},"next":{"title":"Callback Functions","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/callback-functions"}},{"id":"javascript/asynchronous-javascript/promises-and-async-and-await-syntax","title":"Promises and Async and Await Syntax","description":"","source":"@site/web-dev/javascript/asynchronous-javascript/promises-and-async-and-await-syntax.md","sourceDirName":"javascript/asynchronous-javascript","slug":"/javascript/asynchronous-javascript/promises-and-async-and-await-syntax","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/promises-and-async-and-await-syntax","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":3,"frontMatter":{"id":"promises-and-async-and-await-syntax","title":"Promises and Async and Await Syntax","sidebar_label":"Promises and Async and Await Syntax","sidebar_position":3},"sidebar":"sidebarsWebDev","previous":{"title":"Callback Functions","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/callback-functions"},"next":{"title":"Fetch API for Making HTTP Requests","permalink":"/code-harbor-hub/web-dev/javascript/asynchronous-javascript/fetch-api-for-making-http-requests"}},{"id":"javascript/error-handling-and-debugging/best-practices-for-error-handling-in-javascript","title":"Best Practices for Error Handling in JavaScript","description":"","source":"@site/web-dev/javascript/error-handling-and-debugging/best-practices-for-error-handling-in-javascript.md","sourceDirName":"javascript/error-handling-and-debugging","slug":"/javascript/error-handling-and-debugging/best-practices-for-error-handling-in-javascript","permalink":"/code-harbor-hub/web-dev/javascript/error-handling-and-debugging/best-practices-for-error-handling-in-javascript","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":3,"frontMatter":{"id":"best-practices-for-error-handling-in-javascript","title":"Best Practices for Error Handling in JavaScript","sidebar_label":"Best Practices for Error Handling","sidebar_position":3},"sidebar":"sidebarsWebDev","previous":{"title":"Using Browser Developer Tools for Debugging","permalink":"/code-harbor-hub/web-dev/javascript/error-handling-and-debugging/using-browser-developer-tools-for-debugging"},"next":{"title":"Modern JavaScript Concepts","permalink":"/code-harbor-hub/web-dev/category/modern-javascript-concepts"}},{"id":"javascript/error-handling-and-debugging/common-javascript-errors-and-how-to-debug-them","title":"Common JavaScript Errors and How to Debug Them","description":"","source":"@site/web-dev/javascript/error-handling-and-debugging/common-javascript-errors-and-how-to-debug-them.md","sourceDirName":"javascript/error-handling-and-debugging","slug":"/javascript/error-handling-and-debugging/common-javascript-errors-and-how-to-debug-them","permalink":"/code-harbor-hub/web-dev/javascript/error-handling-and-debugging/common-javascript-errors-and-how-to-debug-them","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"common-javascript-errors-and-how-to-debug-them","title":"Common JavaScript Errors and How to Debug Them","sidebar_label":"Common JavaScript Errors and How to Debug Them","sidebar_position":1},"sidebar":"sidebarsWebDev","previous":{"title":"Error Handling and Debugging","permalink":"/code-harbor-hub/web-dev/category/error-handling-and-debugging"},"next":{"title":"Using Browser Developer Tools for Debugging","permalink":"/code-harbor-hub/web-dev/javascript/error-handling-and-debugging/using-browser-developer-tools-for-debugging"}},{"id":"javascript/error-handling-and-debugging/using-browser-developer-tools-for-debugging","title":"Using Browser Developer Tools for Debugging","description":"","source":"@site/web-dev/javascript/error-handling-and-debugging/using-browser-developer-tools-for-debugging.md","sourceDirName":"javascript/error-handling-and-debugging","slug":"/javascript/error-handling-and-debugging/using-browser-developer-tools-for-debugging","permalink":"/code-harbor-hub/web-dev/javascript/error-handling-and-debugging/using-browser-developer-tools-for-debugging","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":2,"frontMatter":{"id":"using-browser-developer-tools-for-debugging","title":"Using Browser Developer Tools for Debugging","sidebar_label":"Using Browser Developer Tools for Debugging","sidebar_position":2},"sidebar":"sidebarsWebDev","previous":{"title":"Common JavaScript Errors and How to Debug Them","permalink":"/code-harbor-hub/web-dev/javascript/error-handling-and-debugging/common-javascript-errors-and-how-to-debug-them"},"next":{"title":"Best Practices for Error Handling","permalink":"/code-harbor-hub/web-dev/javascript/error-handling-and-debugging/best-practices-for-error-handling-in-javascript"}},{"id":"javascript/introduction-to-javascript/history-and-evolution-of-javascript","title":"History and evolution of JavaScript","description":"","source":"@site/web-dev/javascript/introduction-to-javascript/history-and-evolution-of-javascript.md","sourceDirName":"javascript/introduction-to-javascript","slug":"/javascript/introduction-to-javascript/history-and-evolution-of-javascript","permalink":"/code-harbor-hub/web-dev/javascript/introduction-to-javascript/history-and-evolution-of-javascript","draft":false,"unlisted":false,"tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/web-dev/tags/java-script"},{"label":"Introduction of js","permalink":"/code-harbor-hub/web-dev/tags/introduction-of-js"},{"label":"Introduction of JavaScript","permalink":"/code-harbor-hub/web-dev/tags/introduction-of-java-script"},{"label":"History and evolution of JavaScript","permalink":"/code-harbor-hub/web-dev/tags/history-and-evolution-of-java-script"},{"label":"History and evolution","permalink":"/code-harbor-hub/web-dev/tags/history-and-evolution"},{"label":"History and evolution of Js","permalink":"/code-harbor-hub/web-dev/tags/history-and-evolution-of-js"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708690342,"formattedLastUpdatedAt":"Feb 23, 2024","sidebarPosition":2,"frontMatter":{"id":"history-and-evolution-of-javascript","title":"History and evolution of JavaScript","sidebar_label":"History and evolution","sidebar_position":2,"tags":["JavaScript","Introduction of js","Introduction of JavaScript","History and evolution of JavaScript","History and evolution","History and evolution of Js"]},"sidebar":"sidebarsWebDev","previous":{"title":"What is JavaScript","permalink":"/code-harbor-hub/web-dev/javascript/introduction-to-javascript/what-is-javasrcipt"},"next":{"title":"Asynchronous JavaScript","permalink":"/code-harbor-hub/web-dev/category/asynchronous-javascript"}},{"id":"javascript/introduction-to-javascript/what-is-javasrcipt","title":"What is JavaScript","description":"","source":"@site/web-dev/javascript/introduction-to-javascript/intro-js.md","sourceDirName":"javascript/introduction-to-javascript","slug":"/javascript/introduction-to-javascript/what-is-javasrcipt","permalink":"/code-harbor-hub/web-dev/javascript/introduction-to-javascript/what-is-javasrcipt","draft":false,"unlisted":false,"tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/web-dev/tags/java-script"},{"label":"Introduction of js","permalink":"/code-harbor-hub/web-dev/tags/introduction-of-js"},{"label":"Introduction of JavaScript","permalink":"/code-harbor-hub/web-dev/tags/introduction-of-java-script"},{"label":"what is js","permalink":"/code-harbor-hub/web-dev/tags/what-is-js"},{"label":"what is JavaScript","permalink":"/code-harbor-hub/web-dev/tags/what-is-java-script"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1708690342,"formattedLastUpdatedAt":"Feb 23, 2024","sidebarPosition":1,"frontMatter":{"id":"what-is-javasrcipt","title":"What is JavaScript","sidebar_label":"What is JavaScript","sidebar_position":1,"tags":["JavaScript","Introduction of js","Introduction of JavaScript","what is js","what is JavaScript"]},"sidebar":"sidebarsWebDev","previous":{"title":"Introduction To JavaScript","permalink":"/code-harbor-hub/web-dev/category/introduction-to-javascript"},"next":{"title":"History and evolution","permalink":"/code-harbor-hub/web-dev/javascript/introduction-to-javascript/history-and-evolution-of-javascript"}},{"id":"javascript/modern-javascript-concepts/es6-features","title":"ES6 Features","description":"","source":"@site/web-dev/javascript/modern-javascript-concepts/es6-features.md","sourceDirName":"javascript/modern-javascript-concepts","slug":"/javascript/modern-javascript-concepts/es6-features","permalink":"/code-harbor-hub/web-dev/javascript/modern-javascript-concepts/es6-features","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"es6-features","title":"ES6 Features","sidebar_label":"ES6 Features","sidebar_position":1},"sidebar":"sidebarsWebDev","previous":{"title":"Modern JavaScript Concepts","permalink":"/code-harbor-hub/web-dev/category/modern-javascript-concepts"},"next":{"title":"Modules and Module Loaders","permalink":"/code-harbor-hub/web-dev/javascript/modern-javascript-concepts/modules-and-module-loaders"}},{"id":"javascript/modern-javascript-concepts/introduction-to-javascript-frameworks-and-libraries","title":"Introduction to JavaScript Frameworks and Libraries","description":"","source":"@site/web-dev/javascript/modern-javascript-concepts/introduction-to-javascript-frameworks-and-libraries.md","sourceDirName":"javascript/modern-javascript-concepts","slug":"/javascript/modern-javascript-concepts/introduction-to-javascript-frameworks-and-libraries","permalink":"/code-harbor-hub/web-dev/javascript/modern-javascript-concepts/introduction-to-javascript-frameworks-and-libraries","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":3,"frontMatter":{"id":"introduction-to-javascript-frameworks-and-libraries","title":"Introduction to JavaScript Frameworks and Libraries","sidebar_label":"Introduction to JavaScript Frameworks and Libraries","sidebar_position":3},"sidebar":"sidebarsWebDev","previous":{"title":"Modules and Module Loaders","permalink":"/code-harbor-hub/web-dev/javascript/modern-javascript-concepts/modules-and-module-loaders"},"next":{"title":"Advanced Topics","permalink":"/code-harbor-hub/web-dev/category/advanced-topics"}},{"id":"javascript/modern-javascript-concepts/modules-and-module-loaders","title":"Modules and Module Loaders","description":"","source":"@site/web-dev/javascript/modern-javascript-concepts/modules-and-module-loaders.md","sourceDirName":"javascript/modern-javascript-concepts","slug":"/javascript/modern-javascript-concepts/modules-and-module-loaders","permalink":"/code-harbor-hub/web-dev/javascript/modern-javascript-concepts/modules-and-module-loaders","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":2,"frontMatter":{"id":"modules-and-module-loaders","title":"Modules and Module Loaders","sidebar_label":"Modules and Module Loaders","sidebar_position":2},"sidebar":"sidebarsWebDev","previous":{"title":"ES6 Features","permalink":"/code-harbor-hub/web-dev/javascript/modern-javascript-concepts/es6-features"},"next":{"title":"Introduction to JavaScript Frameworks and Libraries","permalink":"/code-harbor-hub/web-dev/javascript/modern-javascript-concepts/introduction-to-javascript-frameworks-and-libraries"}},{"id":"javascript/tools-and-resources/community-forums-and-online-communities-for-javascript-developers","title":"Community Forums and Online Communities for JavaScript Developers","description":"","source":"@site/web-dev/javascript/tools-and-resources/community-forums-and-online-communities-for-javascript-developers.md","sourceDirName":"javascript/tools-and-resources","slug":"/javascript/tools-and-resources/community-forums-and-online-communities-for-javascript-developers","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/community-forums-and-online-communities-for-javascript-developers","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":4,"frontMatter":{"id":"community-forums-and-online-communities-for-javascript-developers","title":"Community Forums and Online Communities for JavaScript Developers","sidebar_label":"Community Forums and Online Communities","sidebar_position":4},"sidebar":"sidebarsWebDev","previous":{"title":"Popular Development Tools and IDEs","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/popular-development-tools-and-ides-for-JavaScript-development"}},{"id":"javascript/tools-and-resources/popular-development-tools-and-ides-for-JavaScript-development","title":"Popular Development Tools and IDEs for JavaScript Development","description":"","source":"@site/web-dev/javascript/tools-and-resources/popular-development-tools-and-ides-for-JavaScript-development.md","sourceDirName":"javascript/tools-and-resources","slug":"/javascript/tools-and-resources/popular-development-tools-and-ides-for-JavaScript-development","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/popular-development-tools-and-ides-for-JavaScript-development","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":3,"frontMatter":{"id":"popular-development-tools-and-ides-for-JavaScript-development","title":"Popular Development Tools and IDEs for JavaScript Development","sidebar_label":"Popular Development Tools and IDEs","sidebar_position":3},"sidebar":"sidebarsWebDev","previous":{"title":"Recommended Books and Online Resources","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/recommended-books-and-online-resources"},"next":{"title":"Community Forums and Online Communities","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/community-forums-and-online-communities-for-javascript-developers"}},{"id":"javascript/tools-and-resources/recommended-books-and-online-resources","title":"Recommended Books and Online Resources","description":"","source":"@site/web-dev/javascript/tools-and-resources/recommended-books-and-online-resources.md","sourceDirName":"javascript/tools-and-resources","slug":"/javascript/tools-and-resources/recommended-books-and-online-resources","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/recommended-books-and-online-resources","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":2,"frontMatter":{"id":"recommended-books-and-online-resources","title":"Recommended Books and Online Resources","sidebar_label":"Recommended Books and Online Resources","sidebar_position":2},"sidebar":"sidebarsWebDev","previous":{"title":"Useful JavaScript Libraries and Frameworks","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/useful-javascript-libraries-and-frameworks"},"next":{"title":"Popular Development Tools and IDEs","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/popular-development-tools-and-ides-for-JavaScript-development"}},{"id":"javascript/tools-and-resources/useful-javascript-libraries-and-frameworks","title":"Useful JavaScript Libraries and Frameworks","description":"","source":"@site/web-dev/javascript/tools-and-resources/useful-javascript-libraries-and-frameworks.md","sourceDirName":"javascript/tools-and-resources","slug":"/javascript/tools-and-resources/useful-javascript-libraries-and-frameworks","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/useful-javascript-libraries-and-frameworks","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"useful-javascript-libraries-and-frameworks","title":"Useful JavaScript Libraries and Frameworks","sidebar_label":"Useful JavaScript Libraries and Frameworks","sidebar_position":1},"sidebar":"sidebarsWebDev","previous":{"title":"Tools and Resources","permalink":"/code-harbor-hub/web-dev/category/tools-and-resources"},"next":{"title":"Recommended Books and Online Resources","permalink":"/code-harbor-hub/web-dev/javascript/tools-and-resources/recommended-books-and-online-resources"}},{"id":"javascript/welcome-js","title":"Welcome to JavaScript","description":"Welcome to JavaScript! JavaScript is a high-level, interpreted programming language that conforms to the ECMAScript specification. JavaScript has curly-bracket syntax, dynamic typing, prototype-based object-orientation, and first-class functions.","source":"@site/web-dev/javascript/welcome-js.md","sourceDirName":"javascript","slug":"/javascript/welcome-js","permalink":"/code-harbor-hub/web-dev/javascript/welcome-js","draft":false,"unlisted":false,"tags":[{"label":"JavaScript","permalink":"/code-harbor-hub/web-dev/tags/java-script"}],"version":"current","lastUpdatedBy":"ajay-dhangar","lastUpdatedAt":1710038897,"formattedLastUpdatedAt":"Mar 10, 2024","sidebarPosition":1,"frontMatter":{"id":"welcome-js","title":"Welcome to JavaScript","sidebar_label":"Welcome To JavaScript","sidebar_position":1,"tags":["JavaScript"]},"sidebar":"sidebarsWebDev","previous":{"title":"Welcome To HTML","permalink":"/code-harbor-hub/web-dev/html/welcome-html"},"next":{"title":"Welcome To JavaScript","permalink":"/code-harbor-hub/web-dev/javascript/welcome-js"}}],"drafts":[],"sidebars":{"sidebarsWebDev":[{"type":"category","label":"Web Dev","link":{"type":"doc","id":"all-web-dev"},"collapsible":true,"collapsed":false,"items":[{"type":"category","label":"HTML","link":{"type":"doc","id":"html/welcome-html"},"collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"html/welcome-html","label":"Welcome To HTML"}]},{"type":"category","label":"JavaScript","link":{"type":"doc","id":"javascript/welcome-js"},"collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/welcome-js","label":"Welcome To JavaScript"},{"type":"category","label":"Introduction To JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/introduction-to-javascript/what-is-javasrcipt","label":"What is JavaScript"},{"type":"doc","id":"javascript/introduction-to-javascript/history-and-evolution-of-javascript","label":"History and evolution"}],"link":{"type":"generated-index","description":"5 minutes to learn the most important RoadMap for JavaScript Mastery.","slug":"/category/introduction-to-javascript","permalink":"/code-harbor-hub/web-dev/category/introduction-to-javascript"}},{"type":"category","label":"Asynchronous JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/asynchronous-javascript/introduction-to-asynchronous-programming","label":"Introduction to Asynchronous Programming"},{"type":"doc","id":"javascript/asynchronous-javascript/callback-functions","label":"Callback Functions"},{"type":"doc","id":"javascript/asynchronous-javascript/promises-and-async-and-await-syntax","label":"Promises and Async and Await Syntax"},{"type":"doc","id":"javascript/asynchronous-javascript/fetch-api-for-making-http-requests","label":"Fetch API for Making HTTP Requests"}],"link":{"type":"generated-index","description":"5 minutes to learn the most important RoadMap for JavaScript Mastery.","slug":"/category/asynchronous-javascript","permalink":"/code-harbor-hub/web-dev/category/asynchronous-javascript"}},{"type":"category","label":"Error Handling and Debugging","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/error-handling-and-debugging/common-javascript-errors-and-how-to-debug-them","label":"Common JavaScript Errors and How to Debug Them"},{"type":"doc","id":"javascript/error-handling-and-debugging/using-browser-developer-tools-for-debugging","label":"Using Browser Developer Tools for Debugging"},{"type":"doc","id":"javascript/error-handling-and-debugging/best-practices-for-error-handling-in-javascript","label":"Best Practices for Error Handling"}],"link":{"type":"generated-index","description":"5 minutes to learn the most important RoadMap for JavaScript Mastery.","slug":"/category/error-handling-and-debugging","permalink":"/code-harbor-hub/web-dev/category/error-handling-and-debugging"}},{"type":"category","label":"Modern JavaScript Concepts","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/modern-javascript-concepts/es6-features","label":"ES6 Features"},{"type":"doc","id":"javascript/modern-javascript-concepts/modules-and-module-loaders","label":"Modules and Module Loaders"},{"type":"doc","id":"javascript/modern-javascript-concepts/introduction-to-javascript-frameworks-and-libraries","label":"Introduction to JavaScript Frameworks and Libraries"}],"link":{"type":"generated-index","description":"5 minutes to learn the most important RoadMap for JavaScript Mastery.","slug":"/category/modern-javascript-concepts","permalink":"/code-harbor-hub/web-dev/category/modern-javascript-concepts"}},{"type":"category","label":"Advanced Topics","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/advanced-topics/object-oriented-javascript","label":"Object-Oriented JavaScript"},{"type":"doc","id":"javascript/advanced-topics/functional-programming-concepts-in-javascript","label":"Functional Programming Concepts"},{"type":"doc","id":"javascript/advanced-topics/performance-optimization-techniques","label":"Performance Optimization Techniques"},{"type":"doc","id":"javascript/advanced-topics/security-best-practices-in-javascript-development","label":"Security Best Practices"}],"link":{"type":"generated-index","description":"5 minutes to learn the most important RoadMap for JavaScript Mastery.","slug":"/category/advanced-topics","permalink":"/code-harbor-hub/web-dev/category/advanced-topics"}},{"type":"category","label":"Tools and Resources","collapsible":true,"collapsed":true,"items":[{"type":"doc","id":"javascript/tools-and-resources/useful-javascript-libraries-and-frameworks","label":"Useful JavaScript Libraries and Frameworks"},{"type":"doc","id":"javascript/tools-and-resources/recommended-books-and-online-resources","label":"Recommended Books and Online Resources"},{"type":"doc","id":"javascript/tools-and-resources/popular-development-tools-and-ides-for-JavaScript-development","label":"Popular Development Tools and IDEs"},{"type":"doc","id":"javascript/tools-and-resources/community-forums-and-online-communities-for-javascript-developers","label":"Community Forums and Online Communities"}],"link":{"type":"generated-index","description":"5 minutes to learn the most important RoadMap for JavaScript Mastery.","slug":"/category/tools-and-resources","permalink":"/code-harbor-hub/web-dev/category/tools-and-resources"}}]}]}]}}]}},"docusaurus-plugin-content-blog":{"default":{"blogSidebarTitle":"Recent posts","blogPosts":[{"id":"welcome","metadata":{"permalink":"/code-harbor-hub/blog/welcome","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"August 26, 2021","tags":[{"label":"facebook","permalink":"/code-harbor-hub/blog/tags/facebook"},{"label":"hello","permalink":"/code-harbor-hub/blog/tags/hello"},{"label":"docusaurus","permalink":"/code-harbor-hub/blog/tags/docusaurus"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"unlisted":false,"nextItem":{"title":"MDX Blog Post","permalink":"/code-harbor-hub/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/code-harbor-hub/blog/mdx-blog-post","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"docusaurus","permalink":"/code-harbor-hub/blog/tags/docusaurus"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"unlisted":false,"prevItem":{"title":"Welcome","permalink":"/code-harbor-hub/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/code-harbor-hub/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n\\n:::"},{"id":"long-blog-post","metadata":{"permalink":"/code-harbor-hub/blog/long-blog-post","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"May 29, 2019","tags":[{"label":"hello","permalink":"/code-harbor-hub/blog/tags/hello"},{"label":"docusaurus","permalink":"/code-harbor-hub/blog/tags/docusaurus"}],"readingTime":2.05,"hasTruncateMarker":true,"authors":[{"name":"Endilie Yacop Sucipto","title":"Maintainer of Docusaurus","url":"https://github.com/endiliey","imageURL":"https://github.com/endiliey.png","key":"endi"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"endi","tags":["hello","docusaurus"],"enableComments":true},"unlisted":false,"prevItem":{"title":"MDX Blog Post","permalink":"/code-harbor-hub/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/code-harbor-hub/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!--truncate--\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/code-harbor-hub/blog/first-blog-post","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","date":"2019-05-28T00:00:00.000Z","formattedDate":"May 28, 2019","tags":[{"label":"hola","permalink":"/code-harbor-hub/blog/tags/hola"},{"label":"docusaurus","permalink":"/code-harbor-hub/blog/tags/docusaurus"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"},"tags":["hola","docusaurus"]},"unlisted":false,"prevItem":{"title":"Long Blog Post","permalink":"/code-harbor-hub/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}],"blogListPaginated":[{"items":["welcome","mdx-blog-post","long-blog-post","first-blog-post"],"metadata":{"permalink":"/code-harbor-hub/blog","page":1,"postsPerPage":10,"totalPages":1,"totalCount":4,"blogDescription":"Blog","blogTitle":"Blog"}}],"blogTags":{"/code-harbor-hub/blog/tags/facebook":{"label":"facebook","items":["welcome"],"permalink":"/code-harbor-hub/blog/tags/facebook","pages":[{"items":["welcome"],"metadata":{"permalink":"/code-harbor-hub/blog/tags/facebook","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/code-harbor-hub/blog/tags/hello":{"label":"hello","items":["welcome","long-blog-post"],"permalink":"/code-harbor-hub/blog/tags/hello","pages":[{"items":["welcome","long-blog-post"],"metadata":{"permalink":"/code-harbor-hub/blog/tags/hello","page":1,"postsPerPage":10,"totalPages":1,"totalCount":2,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/code-harbor-hub/blog/tags/docusaurus":{"label":"docusaurus","items":["welcome","mdx-blog-post","long-blog-post","first-blog-post"],"permalink":"/code-harbor-hub/blog/tags/docusaurus","pages":[{"items":["welcome","mdx-blog-post","long-blog-post","first-blog-post"],"metadata":{"permalink":"/code-harbor-hub/blog/tags/docusaurus","page":1,"postsPerPage":10,"totalPages":1,"totalCount":4,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false},"/code-harbor-hub/blog/tags/hola":{"label":"hola","items":["first-blog-post"],"permalink":"/code-harbor-hub/blog/tags/hola","pages":[{"items":["first-blog-post"],"metadata":{"permalink":"/code-harbor-hub/blog/tags/hola","page":1,"postsPerPage":10,"totalPages":1,"totalCount":1,"blogDescription":"Blog","blogTitle":"Blog"}}],"unlisted":false}},"blogTagsListPath":"/code-harbor-hub/blog/tags"}},"docusaurus-plugin-content-pages":{"default":[{"type":"mdx","permalink":"/code-harbor-hub/helloMarkdown","source":"@site/src/pages/helloMarkdown.md","title":"my hello page title","description":"my hello page description","frontMatter":{"title":"my hello page title","description":"my hello page description","hide_table_of_contents":true},"unlisted":false},{"type":"jsx","permalink":"/code-harbor-hub/helloReact","source":"@site/src/pages/helloReact.js"},{"type":"jsx","permalink":"/code-harbor-hub/","source":"@site/src/pages/index.js"},{"type":"mdx","permalink":"/code-harbor-hub/markdown-page","source":"@site/src/pages/markdown-page.md","title":"Markdown page example","description":"You don\'t need React to write simple standalone pages.","frontMatter":{"title":"Markdown page example"},"unlisted":false},{"type":"jsx","permalink":"/code-harbor-hub/about/","source":"@site/src/pages/about/index.tsx"},{"type":"jsx","permalink":"/code-harbor-hub/showcase/","source":"@site/src/pages/showcase/index.tsx"}]},"docusaurus-plugin-debug":{},"docusaurus-plugin-sitemap":{},"docusaurus-theme-classic":{},"docusaurus-plugin-pwa":{},"docusaurus-plugin-ideal-image":{},"my-plugin":{},"docusaurus-theme-mermaid":{},"docusaurus-theme-live-codeblock":{},"docusaurus-bootstrap-plugin":{},"docusaurus-mdx-fallback-plugin":{}}')}}]);