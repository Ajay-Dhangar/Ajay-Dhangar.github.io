"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[55696],{35988:a=>{a.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome to CodeHarborHub","href":"/code-harbor-hub/docs/","docId":"docs","unlisted":false},{"type":"link","label":"Features","href":"/code-harbor-hub/docs/features","docId":"features","unlisted":false},{"type":"category","label":"JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to JavaScript","href":"/code-harbor-hub/docs/javascript/intro-js","docId":"javascript/intro-js","unlisted":false},{"type":"link","label":"Where to JavaScript","href":"/code-harbor-hub/docs/javascript/where-to-js","docId":"javascript/where-to-js","unlisted":false},{"type":"link","label":"Basic JavaScript","href":"/code-harbor-hub/docs/javascript/basic-javascript","docId":"javascript/basic-javascript","unlisted":false},{"type":"link","label":"Statement in JavaScript","href":"/code-harbor-hub/docs/javascript/satatement-in-js","docId":"javascript/satatement-in-js","unlisted":false},{"type":"link","label":"Syntax of JavaScript","href":"/code-harbor-hub/docs/javascript/syntax-of-js","docId":"javascript/syntax-of-js","unlisted":false},{"type":"link","label":"Comments in JavaScript","href":"/code-harbor-hub/docs/javascript/comments-in-javascript","docId":"javascript/comments-in-javascript","unlisted":false},{"type":"link","label":"Variables in JavaScript","href":"/code-harbor-hub/docs/javascript/variables-in-javascript","docId":"javascript/variables-in-javascript","unlisted":false},{"type":"link","label":"Let Keyword","href":"/code-harbor-hub/docs/javascript/let-in-javascript","docId":"javascript/let-in-javascript","unlisted":false},{"type":"link","label":"Const Keyword","href":"/code-harbor-hub/docs/javascript/const-in-javascript","docId":"javascript/const-in-javascript","unlisted":false},{"type":"category","label":"Operators in JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Operators","href":"/code-harbor-hub/docs/javascript/operators/operators-in-javascript","docId":"javascript/operators/operators-in-javascript","unlisted":false},{"type":"link","label":"Arithmetic Operator","href":"/code-harbor-hub/docs/javascript/operators/arithmetic-operator-in-javascript","docId":"javascript/operators/arithmetic-operator-in-javascript","unlisted":false},{"type":"link","label":"Assignment Operator","href":"/code-harbor-hub/docs/javascript/operators/assignment-operator-in-javascript","docId":"javascript/operators/assignment-operator-in-javascript","unlisted":false},{"type":"link","label":"Comparison Operator","href":"/code-harbor-hub/docs/javascript/operators/comparison-operator-in-javascript","docId":"javascript/operators/comparison-operator-in-javascript","unlisted":false},{"type":"link","label":"String Operator","href":"/code-harbor-hub/docs/javascript/operators/string-operator-in-javascript","docId":"javascript/operators/string-operator-in-javascript","unlisted":false},{"type":"link","label":"Logical Operator","href":"/code-harbor-hub/docs/javascript/operators/logical-operator-in-javascript","docId":"javascript/operators/logical-operator-in-javascript","unlisted":false},{"type":"link","label":"Bitwise Operator","href":"/code-harbor-hub/docs/javascript/operators/bitwise-operator-in-javascript","docId":"javascript/operators/bitwise-operator-in-javascript","unlisted":false},{"type":"link","label":"Ternary Operator","href":"/code-harbor-hub/docs/javascript/operators/ternary-operator-in-javascript","docId":"javascript/operators/ternary-operator-in-javascript","unlisted":false},{"type":"link","label":"Type Operator","href":"/code-harbor-hub/docs/javascript/operators/type-operator-in-javascript","docId":"javascript/operators/type-operator-in-javascript","unlisted":false}],"href":"/code-harbor-hub/docs/category/operators-in-javascript"},{"type":"category","label":"Data Types in JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Types","href":"/code-harbor-hub/docs/javascript/datatypes/datatypes-in-javascript","docId":"javascript/datatypes/datatypes-in-javascript","unlisted":false},{"type":"category","label":"Primitive Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Number","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","docId":"javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","unlisted":false},{"type":"link","label":"String","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","docId":"javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Boolean","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/boolean-in-javascript","docId":"javascript/datatypes/primitive-data-types/boolean-in-javascript","unlisted":false},{"type":"link","label":"Undefined","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/undefined-in-javascript","docId":"javascript/datatypes/primitive-data-types/undefined-in-javascript","unlisted":false},{"type":"link","label":"Null","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/null-in-javascript","docId":"javascript/datatypes/primitive-data-types/null-in-javascript","unlisted":false},{"type":"link","label":"BigInt","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/bigint-in-javascript","docId":"javascript/datatypes/primitive-data-types/bigint-in-javascript","unlisted":false},{"type":"link","label":"Symbol","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/symbol-in-javascript","docId":"javascript/datatypes/primitive-data-types/symbol-in-javascript","unlisted":false}],"href":"/code-harbor-hub/docs/category/primitive-data-types"},{"type":"category","label":"Non Primitive Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Object","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Array","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Function","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Date","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","unlisted":false}],"href":"/code-harbor-hub/docs/category/non-primitive-data-types"}],"href":"/code-harbor-hub/docs/category/data-types-in-javascript"},{"type":"link","label":"Events","href":"/code-harbor-hub/docs/javascript/events-in-javascript","docId":"javascript/events-in-javascript","unlisted":false},{"type":"link","label":"Strings in JavaScript","href":"/code-harbor-hub/docs/javascript/all-about-strings","docId":"javascript/all-about-strings","unlisted":false},{"type":"link","label":"Numbers","href":"/code-harbor-hub/docs/javascript/all-about-numbers","docId":"javascript/all-about-numbers","unlisted":false},{"type":"link","label":"Arrays","href":"/code-harbor-hub/docs/javascript/arrays-in-javascript","docId":"javascript/arrays-in-javascript","unlisted":false},{"type":"link","label":"Objects","href":"/code-harbor-hub/docs/javascript/objects-in-javascript","docId":"javascript/objects-in-javascript","unlisted":false},{"type":"link","label":"Math","href":"/code-harbor-hub/docs/javascript/math-in-javascript","docId":"javascript/math-in-javascript","unlisted":false},{"type":"link","label":"Random","href":"/code-harbor-hub/docs/javascript/random-in-javascript","docId":"javascript/random-in-javascript","unlisted":false},{"type":"link","label":"If...Else","href":"/code-harbor-hub/docs/javascript/if-else-in-javascript","docId":"javascript/if-else-in-javascript","unlisted":false},{"type":"link","label":"Switch Statement","href":"/code-harbor-hub/docs/javascript/switch-in-javascript","docId":"javascript/switch-in-javascript","unlisted":false},{"type":"link","label":"For Loop","href":"/code-harbor-hub/docs/javascript/for-loop-in-javascript","docId":"javascript/for-loop-in-javascript","unlisted":false}],"href":"/code-harbor-hub/docs/category/javascript"},{"type":"category","label":"React","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create React App","href":"/code-harbor-hub/docs/react/create-react-app","docId":"react/create-react-app","unlisted":false},{"type":"link","label":"Welcome","href":"/code-harbor-hub/docs/react/react-intro","docId":"react/react-intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting Started","href":"/code-harbor-hub/docs/react/getting-started/","docId":"react/getting-started/getting-started","unlisted":false},{"type":"link","label":"Folder Structure","href":"/code-harbor-hub/docs/react/getting-started/folder-structure","docId":"react/getting-started/folder-structure","unlisted":false},{"type":"link","label":"Available Scripts","href":"/code-harbor-hub/docs/react/getting-started/available-scripts","docId":"react/getting-started/available-scripts","unlisted":false},{"type":"link","label":"Supported Browsers and Features","href":"/code-harbor-hub/docs/react/getting-started/supported-browsers-features","docId":"react/getting-started/supported-browsers-features","unlisted":false},{"type":"link","label":"Updating to New Releases","href":"/code-harbor-hub/docs/react/getting-started/updating-to-new-releases","docId":"react/getting-started/updating-to-new-releases","unlisted":false}],"href":"/code-harbor-hub/docs/category/getting-started"},{"type":"category","label":"Back End Integration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Proxying API Requests","href":"/code-harbor-hub/docs/react/back-end-integration/proxying-api-requests-in-development","docId":"react/back-end-integration/proxying-api-requests-in-development","unlisted":false},{"type":"link","label":"Fetching Data","href":"/code-harbor-hub/docs/react/back-end-integration/fetching-data-with-ajax-requests","docId":"react/back-end-integration/fetching-data-with-ajax-requests","unlisted":false},{"type":"link","label":"Integrating with an API","href":"/code-harbor-hub/docs/react/back-end-integration/integrating-with-an-api-backend","docId":"react/back-end-integration/integrating-with-an-api-backend","unlisted":false},{"type":"link","label":"Title & Meta Tags","href":"/code-harbor-hub/docs/react/back-end-integration/title-and-meta-tags","docId":"react/back-end-integration/title-and-meta-tags","unlisted":false}],"href":"/code-harbor-hub/docs/category/back-end-integration"},{"type":"category","label":"Advanced Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Importing a Component","href":"/code-harbor-hub/docs/react/advanced-usage/custom-templates","docId":"react/advanced-usage/custom-templates","unlisted":false},{"type":"link","label":"Use Decorators","href":"/code-harbor-hub/docs/react/advanced-usage/can-i-use-decorators","docId":"react/advanced-usage/can-i-use-decorators","unlisted":false},{"type":"link","label":"Pre-Rendering Static HTML","href":"/code-harbor-hub/docs/react/advanced-usage/pre-rendering-into-static-html-files","docId":"react/advanced-usage/pre-rendering-into-static-html-files","unlisted":false},{"type":"link","label":"Advanced Configuration","href":"/code-harbor-hub/docs/react/advanced-usage/advanced-configuration","docId":"react/advanced-usage/advanced-configuration","unlisted":false},{"type":"link","label":"Alternatives to Ejecting","href":"/code-harbor-hub/docs/react/advanced-usage/alternatives-to-ejecting","docId":"react/advanced-usage/alternatives-to-ejecting","unlisted":false}],"href":"/code-harbor-hub/docs/category/advanced-usage"}],"href":"/code-harbor-hub/docs/category/react"},{"type":"category","label":"DSA","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Structures and Algorithms","href":"/code-harbor-hub/docs/dsa/","docId":"dsa/dsa","unlisted":false},{"type":"category","label":"Basic Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Time Complexity","href":"/code-harbor-hub/docs/dsa/basic-concepts/time-complexity","docId":"dsa/basic-concepts/time-complexity","unlisted":false},{"type":"link","label":"Space Complexity","href":"/code-harbor-hub/docs/dsa/basic-concepts/space-complexity","docId":"dsa/basic-concepts/space-complexity","unlisted":false}],"href":"/code-harbor-hub/docs/category/basic-concepts"},{"type":"category","label":"Arrays","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays","href":"/code-harbor-hub/docs/dsa/arrays/arrays-in-dsa","docId":"dsa/arrays/arrays-in-dsa","unlisted":false},{"type":"link","label":"Bubble Sort","href":"/code-harbor-hub/docs/dsa/arrays/arrays-bubblesort-in-dsa","docId":"dsa/arrays/arrays-bubblesort-in-dsa","unlisted":false},{"type":"link","label":"Selection Sort","href":"/code-harbor-hub/docs/dsa/arrays/arrays-selectionsort-in-dsa","docId":"dsa/arrays/arrays-selectionsort-in-dsa","unlisted":false}],"href":"/code-harbor-hub/docs/category/arrays"}],"href":"/code-harbor-hub/docs/category/dsa"}],"dsa":[{"type":"link","label":"Data Structures and Algorithms","href":"/code-harbor-hub/docs/dsa/","docId":"dsa/dsa","unlisted":false},{"type":"category","label":"Basic Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Time Complexity","href":"/code-harbor-hub/docs/dsa/basic-concepts/time-complexity","docId":"dsa/basic-concepts/time-complexity","unlisted":false},{"type":"link","label":"Space Complexity","href":"/code-harbor-hub/docs/dsa/basic-concepts/space-complexity","docId":"dsa/basic-concepts/space-complexity","unlisted":false}],"href":"/code-harbor-hub/docs/category/basic-concepts-1"},{"type":"category","label":"Arrays","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays","href":"/code-harbor-hub/docs/dsa/arrays/arrays-in-dsa","docId":"dsa/arrays/arrays-in-dsa","unlisted":false},{"type":"link","label":"Bubble Sort","href":"/code-harbor-hub/docs/dsa/arrays/arrays-bubblesort-in-dsa","docId":"dsa/arrays/arrays-bubblesort-in-dsa","unlisted":false},{"type":"link","label":"Selection Sort","href":"/code-harbor-hub/docs/dsa/arrays/arrays-selectionsort-in-dsa","docId":"dsa/arrays/arrays-selectionsort-in-dsa","unlisted":false}],"href":"/code-harbor-hub/docs/category/arrays-1"}],"javascript":[{"type":"link","label":"Introduction to JavaScript","href":"/code-harbor-hub/docs/javascript/intro-js","docId":"javascript/intro-js","unlisted":false},{"type":"link","label":"Where to JavaScript","href":"/code-harbor-hub/docs/javascript/where-to-js","docId":"javascript/where-to-js","unlisted":false},{"type":"link","label":"Basic JavaScript","href":"/code-harbor-hub/docs/javascript/basic-javascript","docId":"javascript/basic-javascript","unlisted":false},{"type":"link","label":"Statement in JavaScript","href":"/code-harbor-hub/docs/javascript/satatement-in-js","docId":"javascript/satatement-in-js","unlisted":false},{"type":"link","label":"Syntax of JavaScript","href":"/code-harbor-hub/docs/javascript/syntax-of-js","docId":"javascript/syntax-of-js","unlisted":false},{"type":"link","label":"Comments in JavaScript","href":"/code-harbor-hub/docs/javascript/comments-in-javascript","docId":"javascript/comments-in-javascript","unlisted":false},{"type":"link","label":"Variables in JavaScript","href":"/code-harbor-hub/docs/javascript/variables-in-javascript","docId":"javascript/variables-in-javascript","unlisted":false},{"type":"link","label":"Let Keyword","href":"/code-harbor-hub/docs/javascript/let-in-javascript","docId":"javascript/let-in-javascript","unlisted":false},{"type":"link","label":"Const Keyword","href":"/code-harbor-hub/docs/javascript/const-in-javascript","docId":"javascript/const-in-javascript","unlisted":false},{"type":"category","label":"Operators in JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Operators","href":"/code-harbor-hub/docs/javascript/operators/operators-in-javascript","docId":"javascript/operators/operators-in-javascript","unlisted":false},{"type":"link","label":"Arithmetic Operator","href":"/code-harbor-hub/docs/javascript/operators/arithmetic-operator-in-javascript","docId":"javascript/operators/arithmetic-operator-in-javascript","unlisted":false},{"type":"link","label":"Assignment Operator","href":"/code-harbor-hub/docs/javascript/operators/assignment-operator-in-javascript","docId":"javascript/operators/assignment-operator-in-javascript","unlisted":false},{"type":"link","label":"Comparison Operator","href":"/code-harbor-hub/docs/javascript/operators/comparison-operator-in-javascript","docId":"javascript/operators/comparison-operator-in-javascript","unlisted":false},{"type":"link","label":"String Operator","href":"/code-harbor-hub/docs/javascript/operators/string-operator-in-javascript","docId":"javascript/operators/string-operator-in-javascript","unlisted":false},{"type":"link","label":"Logical Operator","href":"/code-harbor-hub/docs/javascript/operators/logical-operator-in-javascript","docId":"javascript/operators/logical-operator-in-javascript","unlisted":false},{"type":"link","label":"Bitwise Operator","href":"/code-harbor-hub/docs/javascript/operators/bitwise-operator-in-javascript","docId":"javascript/operators/bitwise-operator-in-javascript","unlisted":false},{"type":"link","label":"Ternary Operator","href":"/code-harbor-hub/docs/javascript/operators/ternary-operator-in-javascript","docId":"javascript/operators/ternary-operator-in-javascript","unlisted":false},{"type":"link","label":"Type Operator","href":"/code-harbor-hub/docs/javascript/operators/type-operator-in-javascript","docId":"javascript/operators/type-operator-in-javascript","unlisted":false}],"href":"/code-harbor-hub/docs/category/operators-in-javascript-1"},{"type":"category","label":"Data Types in JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Data Types","href":"/code-harbor-hub/docs/javascript/datatypes/datatypes-in-javascript","docId":"javascript/datatypes/datatypes-in-javascript","unlisted":false},{"type":"category","label":"Primitive Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Number","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","docId":"javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","unlisted":false},{"type":"link","label":"String","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","docId":"javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Boolean","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/boolean-in-javascript","docId":"javascript/datatypes/primitive-data-types/boolean-in-javascript","unlisted":false},{"type":"link","label":"Undefined","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/undefined-in-javascript","docId":"javascript/datatypes/primitive-data-types/undefined-in-javascript","unlisted":false},{"type":"link","label":"Null","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/null-in-javascript","docId":"javascript/datatypes/primitive-data-types/null-in-javascript","unlisted":false},{"type":"link","label":"BigInt","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/bigint-in-javascript","docId":"javascript/datatypes/primitive-data-types/bigint-in-javascript","unlisted":false},{"type":"link","label":"Symbol","href":"/code-harbor-hub/docs/javascript/datatypes/primitive-data-types/symbol-in-javascript","docId":"javascript/datatypes/primitive-data-types/symbol-in-javascript","unlisted":false}],"href":"/code-harbor-hub/docs/category/primitive-data-types-1"},{"type":"category","label":"Non Primitive Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Object","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Array","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Function","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","unlisted":false},{"type":"link","label":"Date","href":"/code-harbor-hub/docs/javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","docId":"javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","unlisted":false}],"href":"/code-harbor-hub/docs/category/non-primitive-data-types-1"}],"href":"/code-harbor-hub/docs/category/data-types-in-javascript-1"},{"type":"link","label":"Events","href":"/code-harbor-hub/docs/javascript/events-in-javascript","docId":"javascript/events-in-javascript","unlisted":false},{"type":"link","label":"Strings in JavaScript","href":"/code-harbor-hub/docs/javascript/all-about-strings","docId":"javascript/all-about-strings","unlisted":false},{"type":"link","label":"Numbers","href":"/code-harbor-hub/docs/javascript/all-about-numbers","docId":"javascript/all-about-numbers","unlisted":false},{"type":"link","label":"Arrays","href":"/code-harbor-hub/docs/javascript/arrays-in-javascript","docId":"javascript/arrays-in-javascript","unlisted":false},{"type":"link","label":"Objects","href":"/code-harbor-hub/docs/javascript/objects-in-javascript","docId":"javascript/objects-in-javascript","unlisted":false},{"type":"link","label":"Math","href":"/code-harbor-hub/docs/javascript/math-in-javascript","docId":"javascript/math-in-javascript","unlisted":false},{"type":"link","label":"Random","href":"/code-harbor-hub/docs/javascript/random-in-javascript","docId":"javascript/random-in-javascript","unlisted":false},{"type":"link","label":"If...Else","href":"/code-harbor-hub/docs/javascript/if-else-in-javascript","docId":"javascript/if-else-in-javascript","unlisted":false},{"type":"link","label":"Switch Statement","href":"/code-harbor-hub/docs/javascript/switch-in-javascript","docId":"javascript/switch-in-javascript","unlisted":false},{"type":"link","label":"For Loop","href":"/code-harbor-hub/docs/javascript/for-loop-in-javascript","docId":"javascript/for-loop-in-javascript","unlisted":false}],"react":[{"type":"link","label":"Create React App","href":"/code-harbor-hub/docs/react/create-react-app","docId":"react/create-react-app","unlisted":false},{"type":"link","label":"Welcome","href":"/code-harbor-hub/docs/react/react-intro","docId":"react/react-intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting Started","href":"/code-harbor-hub/docs/react/getting-started/","docId":"react/getting-started/getting-started","unlisted":false},{"type":"link","label":"Folder Structure","href":"/code-harbor-hub/docs/react/getting-started/folder-structure","docId":"react/getting-started/folder-structure","unlisted":false},{"type":"link","label":"Available Scripts","href":"/code-harbor-hub/docs/react/getting-started/available-scripts","docId":"react/getting-started/available-scripts","unlisted":false},{"type":"link","label":"Supported Browsers and Features","href":"/code-harbor-hub/docs/react/getting-started/supported-browsers-features","docId":"react/getting-started/supported-browsers-features","unlisted":false},{"type":"link","label":"Updating to New Releases","href":"/code-harbor-hub/docs/react/getting-started/updating-to-new-releases","docId":"react/getting-started/updating-to-new-releases","unlisted":false}],"href":"/code-harbor-hub/docs/category/getting-started-1"},{"type":"category","label":"Back End Integration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Proxying API Requests","href":"/code-harbor-hub/docs/react/back-end-integration/proxying-api-requests-in-development","docId":"react/back-end-integration/proxying-api-requests-in-development","unlisted":false},{"type":"link","label":"Fetching Data","href":"/code-harbor-hub/docs/react/back-end-integration/fetching-data-with-ajax-requests","docId":"react/back-end-integration/fetching-data-with-ajax-requests","unlisted":false},{"type":"link","label":"Integrating with an API","href":"/code-harbor-hub/docs/react/back-end-integration/integrating-with-an-api-backend","docId":"react/back-end-integration/integrating-with-an-api-backend","unlisted":false},{"type":"link","label":"Title & Meta Tags","href":"/code-harbor-hub/docs/react/back-end-integration/title-and-meta-tags","docId":"react/back-end-integration/title-and-meta-tags","unlisted":false}],"href":"/code-harbor-hub/docs/category/back-end-integration-1"},{"type":"category","label":"Advanced Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Importing a Component","href":"/code-harbor-hub/docs/react/advanced-usage/custom-templates","docId":"react/advanced-usage/custom-templates","unlisted":false},{"type":"link","label":"Use Decorators","href":"/code-harbor-hub/docs/react/advanced-usage/can-i-use-decorators","docId":"react/advanced-usage/can-i-use-decorators","unlisted":false},{"type":"link","label":"Pre-Rendering Static HTML","href":"/code-harbor-hub/docs/react/advanced-usage/pre-rendering-into-static-html-files","docId":"react/advanced-usage/pre-rendering-into-static-html-files","unlisted":false},{"type":"link","label":"Advanced Configuration","href":"/code-harbor-hub/docs/react/advanced-usage/advanced-configuration","docId":"react/advanced-usage/advanced-configuration","unlisted":false},{"type":"link","label":"Alternatives to Ejecting","href":"/code-harbor-hub/docs/react/advanced-usage/alternatives-to-ejecting","docId":"react/advanced-usage/alternatives-to-ejecting","unlisted":false}],"href":"/code-harbor-hub/docs/category/advanced-usage-1"}]},"docs":{"docs":{"id":"docs","title":"Welcome to CodeHarborHub Tutorials","description":"Welcome to the CodeHarborHub documentation! This documentation is intended to help you get started with CodeHarborHub and to provide you with a comprehensive guide to the features and functionality of the platform. This is a place to learn about technology, programming, web development, data science, and more.","sidebar":"tutorialSidebar"},"dsa/arrays/arrays-bubblesort-in-dsa":{"id":"dsa/arrays/arrays-bubblesort-in-dsa","title":"Arrays - Bubble Sort in DSA","description":"Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order. The pass through the list is repeated until the list is sorted. The algorithm, which is a comparison sort, is named for the way smaller elements \'bubble\' to the top of the list. Although the algorithm is simple, it is too slow and impractical for most problems even when compared to insertion sort. It can be practical if the input is usually in sort order but may occasionally have some out-of-order elements nearly in position.","sidebar":"dsa"},"dsa/arrays/arrays-in-dsa":{"id":"dsa/arrays/arrays-in-dsa","title":"Arrays in Data Structures and Algorithms","description":"An array is a collection of items stored at contiguous memory locations. It is a data structure that stores a fixed-size sequential collection of elements of the same type. An array is used to store a collection of data, but it is often more useful to think of an array as a collection of variables of the same type.","sidebar":"dsa"},"dsa/arrays/arrays-selectionsort-in-dsa":{"id":"dsa/arrays/arrays-selectionsort-in-dsa","title":"Arrays - Selection Sort in DSA","description":"Selection Sort is an in-place comparison sorting algorithm that divides the input list into two parts: the sublist of items already sorted and the sublist of items remaining to be sorted. It repeatedly finds the minimum element from the unsorted part and puts it at the beginning of the unsorted part. The algorithm maintains two subarrays in a given array. The subarray which is already sorted and the remaining subarray which is unsorted. In every iteration of selection sort, the minimum element from the unsorted subarray is picked and moved to the sorted subarray.","sidebar":"dsa"},"dsa/basic-concepts/space-complexity":{"id":"dsa/basic-concepts/space-complexity","title":"Space Complexity","description":"Space complexity is a measure of the amount of working storage an algorithm needs. It is a measure of the amount of memory space an algorithm needs to solve a problem as a function of the size of the input to the problem. It is the amount of memory space required by the algorithm to execute in its life cycle.","sidebar":"dsa"},"dsa/basic-concepts/time-complexity":{"id":"dsa/basic-concepts/time-complexity","title":"Time Complexity","description":"Time Complexity is a measure of the amount of time an algorithm takes to solve a problem as a function of the size of the input to the problem. It is commonly estimated by counting the number of elementary operations performed by the algorithm, where an elementary operation takes a fixed amount of time to perform.","sidebar":"dsa"},"dsa/dsa":{"id":"dsa/dsa","title":"Data Structures and Algorithms","description":"Data Structures and Algorithms are the building blocks of computer science. They are the tools you\'ll use to build software systems. This section is a collection of resources to help you understand and master Data Structures and Algorithms.","sidebar":"dsa"},"features":{"id":"features","title":"Features of  CodeHarborHub Documentation","description":"Diagrams","sidebar":"tutorialSidebar"},"javascript/all-about-numbers":{"id":"javascript/all-about-numbers","title":"All About Numbers in JavaScript","description":"In the JavaScript programming language, numbers are used to represent numerical values. In this section, you will learn how to create and manipulate numbers in JavaScript. You will also learn about the different methods that can be used to manipulate numbers. We are going to cover the following topics in this section:","sidebar":"javascript"},"javascript/all-about-strings":{"id":"javascript/all-about-strings","title":"All Basic About Strings in JavaScript","description":"In the JavaScript programming language, strings are text that is displayed on the screen. They are used to store and manipulate text. In this section, you will learn how to create and manipulate strings in JavaScript. You will also learn about the different methods that can be used to manipulate strings. We are going to cover the following topics in this section:","sidebar":"javascript"},"javascript/arrays-in-javascript":{"id":"javascript/arrays-in-javascript","title":"Arrays in JavaScript for Beginners","description":"In the JavaScript programming language, arrays are used to store multiple values in a single variable. In this section, you will learn how to create and manipulate arrays in JavaScript. You will also learn about the different methods that can be used to manipulate arrays. We are going to cover the following topics in this section:","sidebar":"javascript"},"javascript/basic-javascript":{"id":"javascript/basic-javascript","title":"Basic JavaScript Concepts","description":"Basic concepts of JavaScript. Learn about displaying output in JavaScript, JavaScript display possibilities, and more.","sidebar":"javascript"},"javascript/comments-in-javascript":{"id":"javascript/comments-in-javascript","title":"Comments in JavaScript","description":"Write comments in JavaScript to explain the code and make it more readable. Learn about single-line comments and multi-line comments in JavaScript.","sidebar":"javascript"},"javascript/const-in-javascript":{"id":"javascript/const-in-javascript","title":"Const Keyword in JavaScript","description":"What is the const keyword in JavaScript and how to use it.","sidebar":"javascript"},"javascript/datatypes/datatypes-in-javascript":{"id":"javascript/datatypes/datatypes-in-javascript","title":"Data Types in JavaScript","description":"What is the data type in JavaScript? Learn about the primitive and non-primitive data types in JavaScript, including string, number, bigint, boolean, undefined, symbol, null, object, array, and function.","sidebar":"javascript"},"javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript":{"id":"javascript/datatypes/non-primitive-data-types/array-datatypes-in-javascript","title":"Array Data Types in JavaScript","description":"What is the array data type in JavaScript? Learn about the array data type and how to create, access, modify, add, and delete array elements in JavaScript.","sidebar":"javascript"},"javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript":{"id":"javascript/datatypes/non-primitive-data-types/date-datatypes-in-javascript","title":"Date Datatypes in JavaScript","description":"What is a Date in JavaScript and how to use it to work with dates and times.","sidebar":"javascript"},"javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript":{"id":"javascript/datatypes/non-primitive-data-types/function-datatypes-in-javascript","title":"Function Datatypes in JavaScript","description":"What is a function in JavaScript? How to define a function in JavaScript? What are the different ways to define a function in JavaScript? What are the different types of function in JavaScript? Learn all about functions in JavaScript in this guide.","sidebar":"javascript"},"javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript":{"id":"javascript/datatypes/non-primitive-data-types/object-datatypes-in-javascript","title":"Object Data Types in JavaScript","description":"What is the object data type in JavaScript? Learn about the object data type and how to create, access, modify, add, and delete object properties in JavaScript.","sidebar":"javascript"},"javascript/datatypes/primitive-data-types/bigint-in-javascript":{"id":"javascript/datatypes/primitive-data-types/bigint-in-javascript","title":"BigInt Data Types in JavaScript","description":"What is the BigInt data type in JavaScript? Learn about the BigInt data type and how to create BigInt in JavaScript.","sidebar":"javascript"},"javascript/datatypes/primitive-data-types/boolean-in-javascript":{"id":"javascript/datatypes/primitive-data-types/boolean-in-javascript","title":"Boolean Data Types in JavaScript","description":"What is the boolean data type in JavaScript? Learn about the boolean data type in JavaScript, including how to create a boolean, boolean values, and boolean methods.","sidebar":"javascript"},"javascript/datatypes/primitive-data-types/null-in-javascript":{"id":"javascript/datatypes/primitive-data-types/null-in-javascript","title":"Null Data Types in JavaScript","description":"What is the null data type in JavaScript? Learn about the null data type and how to create null in JavaScript.","sidebar":"javascript"},"javascript/datatypes/primitive-data-types/number-datatypes-in-javascript":{"id":"javascript/datatypes/primitive-data-types/number-datatypes-in-javascript","title":"Number Data Types in JavaScript","description":"What is the number data type in JavaScript? Learn about the number data type in JavaScript, including integers, floating-point numbers, NaN, Infinity, and BigInt.","sidebar":"javascript"},"javascript/datatypes/primitive-data-types/string-datatypes-in-javascript":{"id":"javascript/datatypes/primitive-data-types/string-datatypes-in-javascript","title":"String Data Types in JavaScript","description":"What is the string data type in JavaScript? Learn about the string data type in JavaScript, including how to create a string, escape characters, string length, string methods, and template literals.","sidebar":"javascript"},"javascript/datatypes/primitive-data-types/symbol-in-javascript":{"id":"javascript/datatypes/primitive-data-types/symbol-in-javascript","title":"Symbol Data Types in JavaScript","description":"What is the symbol data type in JavaScript? Learn about the symbol data type and how to create symbols in JavaScript.","sidebar":"javascript"},"javascript/datatypes/primitive-data-types/undefined-in-javascript":{"id":"javascript/datatypes/primitive-data-types/undefined-in-javascript","title":"Undefined Data Types in JavaScript","description":"What is the undefined data type in JavaScript? Learn about the undefined data type and how to create undefined in JavaScript.","sidebar":"javascript"},"javascript/events-in-javascript":{"id":"javascript/events-in-javascript","title":"Events in JavaScript","description":"What is the event in JavaScript? How to handle events in JavaScript? Learn about different types of events, event listeners, event objects, event propagation, and how to prevent default behavior and stop event propagation.","sidebar":"javascript"},"javascript/for-loop-in-javascript":{"id":"javascript/for-loop-in-javascript","title":"For Loop in JavaScript","description":"In this tutorial, we will learn about the for loop in JavaScript. We will learn how to use the for loop to execute a block of code multiple times in JavaScript.","sidebar":"javascript"},"javascript/if-else-in-javascript":{"id":"javascript/if-else-in-javascript","title":"If...Else in JavaScript","description":"In this tutorial, we will learn about the if...else statement in JavaScript. We will learn how to use the if...else statement to make decisions in JavaScript.","sidebar":"javascript"},"javascript/intro-js":{"id":"javascript/intro-js","title":"Introduction to JavaScript","description":"What is JavaScript? Why JavaScript? How to use JavaScript? Learn about JavaScript in this tutorial.","sidebar":"javascript"},"javascript/let-in-javascript":{"id":"javascript/let-in-javascript","title":"Let Keyword in JavaScript","description":"What is the let keyword in JavaScript and how to use it.","sidebar":"javascript"},"javascript/math-in-javascript":{"id":"javascript/math-in-javascript","title":"Math in JavaScript","description":"In this tutorial, we will learn about the Math object in JavaScript. We will learn about the properties and methods of the Math object.","sidebar":"javascript"},"javascript/objects-in-javascript":{"id":"javascript/objects-in-javascript","title":"Objects in JavaScript","description":"In this tutorial, we will learn about objects in JavaScript. We will learn how to create objects, access object properties, and methods. We will also learn about object destructuring, object methods, and object prototypes.","sidebar":"javascript"},"javascript/operators/arithmetic-operator-in-javascript":{"id":"javascript/operators/arithmetic-operator-in-javascript","title":"Arithmetic Operator in JavaScript","description":"What is the arithmetic operator in JavaScript? Learn about the types of arithmetic operators in JavaScript, including the addition, subtraction, multiplication, division, and modulus operators.","sidebar":"javascript"},"javascript/operators/assignment-operator-in-javascript":{"id":"javascript/operators/assignment-operator-in-javascript","title":"Assignment Operator in JavaScript","description":"What is the assignment operator in JavaScript? Learn about the assignment operator in JavaScript and its various types, including the simple assignment operator, compound assignment operators, destructuring assignment, and assignment operator with chaining.","sidebar":"javascript"},"javascript/operators/bitwise-operator-in-javascript":{"id":"javascript/operators/bitwise-operator-in-javascript","title":"Bitwise Operator in JavaScript","description":"What is the bitwise operator in JavaScript? Learn about the types of bitwise operators in JavaScript, including the bitwise AND, OR, XOR, NOT, left shift, and right shift operators.","sidebar":"javascript"},"javascript/operators/comparison-operator-in-javascript":{"id":"javascript/operators/comparison-operator-in-javascript","title":"Comparison Operator in JavaScript","description":"What is the comparison operator in JavaScript? Learn about the types of comparison operators in JavaScript, including the equal to, not equal to, strict equal to, strict not equal to, greater than, less than, greater than or equal to, and less than or equal to operators.","sidebar":"javascript"},"javascript/operators/logical-operator-in-javascript":{"id":"javascript/operators/logical-operator-in-javascript","title":"Logical Operator in JavaScript","description":"What is the logical operator in JavaScript? Learn about the types of logical operators in JavaScript, including logical AND, logical OR, and logical NOT, and the precedence of logical operators.","sidebar":"javascript"},"javascript/operators/operators-in-javascript":{"id":"javascript/operators/operators-in-javascript","title":"Operators in JavaScript","description":"What is the operators in JavaScript and how to use it.","sidebar":"javascript"},"javascript/operators/string-operator-in-javascript":{"id":"javascript/operators/string-operator-in-javascript","title":"String Operator in JavaScript","description":"What is the string operator in JavaScript? Learn about the types of string operators in JavaScript, including string concatenation operator, implicit type conversion, string concatenation with assignment, and string concatenation with template literals.","sidebar":"javascript"},"javascript/operators/ternary-operator-in-javascript":{"id":"javascript/operators/ternary-operator-in-javascript","title":"Ternary Operator in JavaScript","description":"What is the ternary operator in JavaScript? Learn about the ternary operator, its syntax, and how to use it to write concise conditional expressions in JavaScript.","sidebar":"javascript"},"javascript/operators/type-operator-in-javascript":{"id":"javascript/operators/type-operator-in-javascript","title":"Type Operator in JavaScript","description":"What is the type operator in JavaScript? Learn about the type operator, its syntax, and how to use it to check the data type of a value or variable in JavaScript.","sidebar":"javascript"},"javascript/random-in-javascript":{"id":"javascript/random-in-javascript","title":"Random in JavaScript","description":"In this tutorial, we will learn about the Math.random() method in JavaScript. We will learn how to generate random numbers in JavaScript.","sidebar":"javascript"},"javascript/satatement-in-js":{"id":"javascript/satatement-in-js","title":"Statement in JavaScript","description":"Write statements in JavaScript to perform different actions. Learn about different types of statements in JavaScript such as declaration statement, assignment statement, conditional statement, loop statement, function statement, return statement, break statement, continue statement, try...catch statement, and throw statement.","sidebar":"javascript"},"javascript/switch-in-javascript":{"id":"javascript/switch-in-javascript","title":"Switch Statement in JavaScript","description":"In this tutorial, we will learn about the switch statement in JavaScript. We will learn how to use the switch statement to make decisions in JavaScript.","sidebar":"javascript"},"javascript/syntax-of-js":{"id":"javascript/syntax-of-js","title":"Syntax of JavaScript","description":"Write a JavaScript program using the syntax of JavaScript. Learn about the syntax of JavaScript, how to create a JavaScript file, how to create variables, how to use variables, how to create and use functions, JavaScript values, operators, literals, keywords, comments, statements, expressions, identifiers, naming conventions, case sensitivity, and the JavaScript character set.","sidebar":"javascript"},"javascript/variables-in-javascript":{"id":"javascript/variables-in-javascript","title":"Variables in JavaScript","description":"What are variables in JavaScript? How to declare and initialize variables in JavaScript? Learn about variable naming rules and best practices.","sidebar":"javascript"},"javascript/where-to-js":{"id":"javascript/where-to-js","title":"Where to Write JavaScript","description":"Where to write JavaScript code? Learn about the different places where JavaScript code can be written such as inline JavaScript, internal JavaScript, and external JavaScript.","sidebar":"javascript"},"react/advanced-usage/advanced-configuration":{"id":"react/advanced-usage/advanced-configuration","title":"Advanced Configuration","description":"In Create React App, you have the power to customize various development and production settings using environment variables. These options allow you to control the behavior of your React application without diving into complex configurations. Let\'s take a closer look at each setting in a handy table format:","sidebar":"react"},"react/advanced-usage/alternatives-to-ejecting":{"id":"react/advanced-usage/alternatives-to-ejecting","title":"Alternatives to Ejecting","description":"Introduction","sidebar":"react"},"react/advanced-usage/can-i-use-decorators":{"id":"react/advanced-usage/can-i-use-decorators","title":"The Power of Decorators in CRA","description":"Introduction to Decorators","sidebar":"react"},"react/advanced-usage/custom-templates":{"id":"react/advanced-usage/custom-templates","title":"Custom Templates","description":"Introduction to Custom Templates","sidebar":"react"},"react/advanced-usage/pre-rendering-into-static-html-files":{"id":"react/advanced-usage/pre-rendering-into-static-html-files","title":"Pre-Rendering into Static HTML Files","description":"If you\'re hosting your React application using a static hosting provider, you have a fantastic opportunity to enhance its performance and SEO by pre-rendering it into static HTML files. Pre-rendering involves generating HTML pages for each route or link in your application, making them readily available to users even before the JavaScript bundle loads. This seamless process not only improves loading times but also boosts your website\'s visibility on search engines.","sidebar":"react"},"react/back-end-integration/fetching-data-with-ajax-requests":{"id":"react/back-end-integration/fetching-data-with-ajax-requests","title":"Fetching Data with AJAX Requests in React","description":"In modern web development, retrieving data from a server and displaying it on a web page is a common task. To achieve this in React, we use AJAX (Asynchronous JavaScript and XML) requests. AJAX allows us to fetch data from a server without needing to reload the entire page.","sidebar":"react"},"react/back-end-integration/integrating-with-an-api-backend":{"id":"react/back-end-integration/integrating-with-an-api-backend","title":"Integrating with an API Backend","description":"Welcome to CodeMastermindHQ! In this tutorial, we will guide you through the process of integrating your React app with an API backend. By the end of this guide, you\'ll have a solid understanding of how to connect your frontend and backend, enabling your app to fetch and send data seamlessly.","sidebar":"react"},"react/back-end-integration/proxying-api-requests-in-development":{"id":"react/back-end-integration/proxying-api-requests-in-development","title":"Proxying API Requests in Development","description":"When building a React app, you might encounter a common scenario where your frontend and backend are served from different hosts or ports. This separation could lead to CORS issues during development, causing your API requests to fail and producing error messages in your browser console.","sidebar":"react"},"react/back-end-integration/title-and-meta-tags":{"id":"react/back-end-integration/title-and-meta-tags","title":"Title And Meta Tags","description":"In web development, title and meta tags play a crucial role in optimizing your website for search engines and providing a better user experience. They are like a website\'s introduction, giving a sneak peek into what visitors can expect. In this guide, we will explore how to handle title and meta tags in your Create React App for back-end integration, making your website more appealing and discoverable.","sidebar":"react"},"react/create-react-app":{"id":"react/create-react-app","title":"Getting Started with React","description":"Development and implementation the API of interaction of two sites","sidebar":"react"},"react/getting-started/available-scripts":{"id":"react/getting-started/available-scripts","title":"Available Scripts","description":"Learn about the available scripts in a Create React App project. Use these scripts to start, test, build, and eject your app, as well as to run custom scripts.","sidebar":"react"},"react/getting-started/folder-structure":{"id":"react/getting-started/folder-structure","title":"Folder Structure","description":"Learn how to organize your files and folders in a new React project. This structure will help you keep things tidy and make it easier to build and maintain your site.","sidebar":"react"},"react/getting-started/getting-started":{"id":"react/getting-started/getting-started","title":"Getting Started with React","description":"Learn how to get started with React by creating a new app using Create React App. Follow the steps to set up your development environment and build your first React application.","sidebar":"react"},"react/getting-started/supported-browsers-features":{"id":"react/getting-started/supported-browsers-features","title":"Supported Browsers and Features","description":"Learn about the supported browsers and advanced language features in the website project. Understand how to ensure broad browser compatibility and leverage modern JavaScript capabilities.","sidebar":"react"},"react/getting-started/updating-to-new-releases":{"id":"react/getting-started/updating-to-new-releases","title":"Updating to New Releases","description":"Learn how to update an existing Create React App project to a newer version of react-scripts. Keep your project up to date with the latest features and improvements.","sidebar":"react"},"react/react-intro":{"id":"react/react-intro","title":"Welcome to React","description":"Development and implementation the API of interaction of two sites","sidebar":"react"}}}')}}]);