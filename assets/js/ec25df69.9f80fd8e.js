"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[71564],{24724:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=s(17624),n=s(4552);const o={id:"data-structures-and-algorithms",title:"Data Structures and Algorithms",sidebar_label:"Data Structures and Algorithms",sidebar_position:1},i=void 0,a={id:"data-structures-and-algorithms",title:"Data Structures and Algorithms",description:"Data Structures and Algorithms are the building blocks of computer science. They are the tools you'll use to build software systems. This section is a collection of resources to help you understand and master Data Structures and Algorithms.",source:"@site/dsa/index.md",sourceDirName:".",slug:"/",permalink:"/code-harbor-hub/dsa/",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"ajay-dhangar",lastUpdatedAt:1709479342,formattedLastUpdatedAt:"Mar 3, 2024",sidebarPosition:1,frontMatter:{id:"data-structures-and-algorithms",title:"Data Structures and Algorithms",sidebar_label:"Data Structures and Algorithms",sidebar_position:1},sidebar:"codeharborhub"},l={},c=[{value:"Data Structures",id:"data-structures",level:2},{value:"Algorithms",id:"algorithms",level:2}];function d(e){const t={h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",...(0,n.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Data Structures and Algorithms are the building blocks of computer science. They are the tools you'll use to build software systems. This section is a collection of resources to help you understand and master Data Structures and Algorithms."}),"\n",(0,r.jsx)(t.h2,{id:"data-structures",children:"Data Structures"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Arrays:"})," A collection of elements identified by an index or key."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Linked Lists:"})," A collection of nodes where each node contains a data field and a reference(link) to the next node in the list."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Stacks:"})," A collection of elements with two main principle operations: push and pop."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Queues:"})," A collection of elements with three main principle operations: enqueue, dequeue, and peek."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Trees:"})," A collection of nodes where each node has a value and a list of references to other nodes."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Graphs:"})," A collection of nodes with edges between (some of) them."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Heaps:"})," A special tree-based data structure in which the tree is a complete binary tree."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Hash Tables:"})," A data structure that implements an associative array abstract data type, a structure that can map keys to values."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"algorithms",children:"Algorithms"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Searching:"})," Linear Search, Binary Search, Depth First Search, Breadth First Search."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Sorting:"})," Bubble Sort, Selection Sort, Insertion Sort, Merge Sort, Quick Sort."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Dynamic Programming:"})," A method for solving a complex problem by breaking it down into simpler subproblems."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Greedy Algorithms:"})," A simple, intuitive algorithm that is used in optimization problems."]}),"\n",(0,r.jsx)(t.li,{children:"Divide and Conquer: A technique to solve problems with the following steps: Divide, Conquer, and Combine."}),"\n",(0,r.jsx)(t.li,{children:"Backtracking: A general algorithm for finding all (or some) solutions to some computational problems."}),"\n",(0,r.jsx)(t.li,{children:"Bit Manipulation: A technique to perform operations at the bit-level."}),"\n",(0,r.jsx)(t.li,{children:"Recursion: A technique to solve problems where the solution depends on solutions to smaller instances of the same problem."}),"\n",(0,r.jsx)(t.li,{children:"Randomized Algorithms: An algorithm that employs a degree of randomness as part of its logic."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,n.M)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4552:(e,t,s)=>{s.d(t,{I:()=>a,M:()=>i});var r=s(11504);const n={},o=r.createContext(n);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);