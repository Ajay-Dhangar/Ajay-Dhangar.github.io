"use strict";(self.webpackChunkcode_harbor_hub=self.webpackChunkcode_harbor_hub||[]).push([[17992],{46176:e=>{e.exports=JSON.parse('{"label":"courses","permalink":"/code-harbor-hub/courses/tags/courses","allTagsPath":"/code-harbor-hub/courses/tags","count":30,"items":[{"id":"react-js/intermidiate-level/advanced-styling/lesson-2","title":"Advanced styling libraries (styled-components, tailwindcss, Material-UI) (Optional)","description":"Learn how to use advanced styling libraries like styled-components, tailwindcss, and Material-UI to style your React components. These libraries provide powerful tools and utilities for creating modern and responsive designs in your applications.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/advanced-styling/lesson-2"},{"id":"react-js/begginer-level/building-user-interfaces/lesson-3","title":"Basic styling techniques: Inline styles, internal stylesheets, external stylesheets, and CSS modules","description":"Learn how to apply basic styling techniques to your React components using inline styles and external stylesheets. Understand how to style elements, apply CSS properties, and create visually appealing user interfaces.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/building-user-interfaces/lesson-3"},{"id":"react-js/intermidiate-level/advanced-styling/lesson-3","title":"BEM naming convention for organized CSS classes","description":"Learn how to use the BEM (Block Element Modifier) naming convention to create organized and maintainable CSS classes in your React applications. BEM helps you structure your stylesheets by defining a clear naming convention for CSS classes, making it easier to understand and maintain your styles.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/advanced-styling/lesson-3"},{"id":"react-js/begginer-level/building-user-interfaces/lesson-1","title":"Conditional rendering: Displaying content based on state (if/else statements, ternary operator)","description":"Learn how to conditionally render content in React based on component state. Understand how to use if/else statements, the ternary operator, and logical operators to control the visibility of elements.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/building-user-interfaces/lesson-1"},{"id":"react-js/intermidiate-level/handling-data-flow/lesson-1","title":"Context API for managing global state without prop drilling (Optional)","description":"Learn how to use the Context API in React to manage global state without prop drilling. The Context API provides a way to pass data through the component tree without having to pass props down manually at every level. This lesson will introduce you to the Context API and show you how to use it to manage global state in your React applications.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/handling-data-flow/lesson-1"},{"id":"react-js/begginer-level/intro-to-react/react-intro-lesson-2","title":"Core concepts: Components, JSX, Virtual DOM","description":"In this lesson, we will learn about the core concepts of React, such as components, JSX, and Virtual DOM. We will also learn how to create a simple React component.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/intro-to-react/react-intro-lesson-2"},{"id":"react-js/begginer-level/building-your-first-react-app/lesson-1","title":"Creating a simple \'Hello World\' app","description":"Learn how to create a simple \'Hello World\' app using React and understand the basic structure of a React component.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/building-your-first-react-app/lesson-1"},{"id":"react-js/begginer-level/introduction-to-forms/lesson-1","title":"Creating controlled components to manage form data with state","description":"learn how to create controlled components in React to manage form data using state. Controlled components allow you to handle form inputs and manage their state, enabling you to control and validate user input in React applications.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/introduction-to-forms/lesson-1"},{"id":"react-js/intermidiate-level/advanced-styling/lesson-1","title":"CSS Modules for component-scoped styling","description":"Learn how to use CSS Modules to create component-scoped styles in React applications. CSS Modules allow you to write modular and reusable styles for your components without worrying about global CSS conflicts.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/advanced-styling/lesson-1"},{"id":"react-js/intermidiate-level/working-with-apis/lesson-2","title":"Handling asynchronous operations (promises, async/await)","description":"Learn how to handle asynchronous operations in React using promises, async/await, and the useEffect hook. Asynchronous operations are common in web development, and React provides several ways to manage asynchronous code and update your application\'s state with the results.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/working-with-apis/lesson-2"},{"id":"react-js/begginer-level/introduction-to-forms/lesson-2","title":"Handling form submissions (sending data or local processing)","description":"learn how to handle form submissions in React applications. Handling form submissions involves sending form data to a server or processing it locally within the application. In this lesson, we will explore how to handle form submissions in React using event handlers and state management.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/introduction-to-forms/lesson-2"},{"id":"react-js/begginer-level/working-with-components-and-data/lesson-3","title":"Handling user interactions with events (onClick, onChange, etc.)","description":"Learn how to handle user interactions in React using event handlers like onClick, onChange, and more. Understand how to respond to user actions and update the UI based on events.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/working-with-components-and-data/lesson-3"},{"id":"css/getting-started-css/introduction/introduction-to-getting-started-with-css","title":"Introduction to Getting Started with CSS","description":"Welcome to the Getting Started with CSS course! In this course, you will learn the basics of CSS, including selectors, properties, values, and more. You will also learn how to style HTML elements, create layouts, and design responsive websites using CSS. Let\'s get started!","permalink":"/code-harbor-hub/courses/css/getting-started-css/introduction/introduction-to-getting-started-with-css"},{"id":"react-js/intermidiate-level/handling-data-flow/lesson-2","title":"Introduction to Redux: Advanced state management for complex applications","description":"Learn how to use Redux for advanced state management in React applications. Redux is a predictable state container for JavaScript apps that helps you manage complex application state in a more organized and efficient way. This lesson will introduce you to the core concepts of Redux and show you how to integrate Redux into your React applications.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/handling-data-flow/lesson-2"},{"id":"react-js/intermidiate-level/managing-complex-uis/lesson-1","title":"Lifting state up for shared state management across components","description":"Learn how to lift state up in React to manage shared state across multiple components. Lifting state up is a common pattern in React applications that allows you to share state between components and keep your application\'s data in sync.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/managing-complex-uis/lesson-1"},{"id":"react-js/intermidiate-level/working-with-apis/lesson-1","title":"Making API calls using fetch() or axios","description":"Learn how to make API calls in React using the fetch() method or the axios library. Making API calls is a common task in web development, and React provides several ways to fetch data from external APIs and update your application\'s state with the response.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/working-with-apis/lesson-1"},{"id":"react-js/begginer-level/working-with-components-and-data/lesson-2","title":"Managing dynamic data within components using the useState hook","description":"learn how to manage dynamic data within components using the useState hook in React. The useState hook allows you to add stateful logic to functional components and handle dynamic data updates.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/working-with-components-and-data/lesson-2"},{"id":"react-js/begginer-level/working-with-components-and-data/lesson-1","title":"Passing data between components with props (required and optional)","description":"learn how to pass data between components in React using props. Props are used to pass data from a parent component to a child component, enabling the sharing of information and functionality between different parts of the application.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/working-with-components-and-data/lesson-1"},{"id":"recommended-courses","title":"Recommended Courses","description":"Recommended courses for learning web development, data science, project management, security, and more.","permalink":"/code-harbor-hub/courses/recommended-courses"},{"id":"react-js/begginer-level/building-user-interfaces/lesson-2","title":"Rendering dynamic lists with arrays and the map() function","description":"Learn how to render dynamic lists in React using arrays and the map() function. Understand how to iterate over data, generate list items, and display dynamic content in your components.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/building-user-interfaces/lesson-2"},{"id":"react-js/intermidiate-level/working-with-apis/lesson-3","title":"Rendering fetched data from APIs","description":"Learn how to render data fetched from external APIs in React components. Rendering fetched data is a common task in web development, and React provides a way to update your application\'s UI with the data retrieved from API calls.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/working-with-apis/lesson-3"},{"id":"react-js/begginer-level/intro-to-react/react-intro-lesson-3","title":"Setting up your development environment (Node.js, npm, code editor)","description":"Learn how to set up your development environment for React development by installing Node.js, npm, and a code editor.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/intro-to-react/react-intro-lesson-3"},{"id":"react-js/begginer-level/building-your-first-react-app/lesson-2","title":"Understanding components and their structure (functional and class-based)","description":"Learn about the different types of components in React and understand their structure and usage in building React applications.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/building-your-first-react-app/lesson-2"},{"id":"react-js/intermidiate-level/managing-complex-uis/lesson-2","title":"Understanding the challenges of prop drilling","description":"Learn about the challenges of prop drilling in React applications and how to avoid them using context, Redux, or other state management libraries. Prop drilling can lead to complex and hard-to-maintain code, especially in large applications with deeply nested components.","permalink":"/code-harbor-hub/courses/react-js/intermidiate-level/managing-complex-uis/lesson-2"},{"id":"react-js/begginer-level/building-your-first-react-app/lesson-3","title":"Using JSX for building UI elements","description":"Learn how to use JSX (JavaScript XML) to build UI elements in React and understand its syntax and features.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/building-your-first-react-app/lesson-3"},{"id":"css/css-learning-path","title":"Welcome to CSS Learning Path","description":"Welcome to the CSS Learning Path! In this path, you will learn the fundamentals of CSS, including selectors, properties, values, and more. You will also learn how to style HTML elements, create layouts, and design responsive websites using CSS. Let\'s get started!","permalink":"/code-harbor-hub/courses/css/css-learning-path"},{"id":"javascript/javascript-learning-path","title":"Welcome to JavaScript Learning Path","description":"Welcome to the JavaScript Learning Path! In this path, you will learn the fundamentals of JavaScript, including variables, data types, functions, and more. You will also learn how to write JavaScript code, create interactive web applications, and build dynamic websites using JavaScript. Let\'s get started!","permalink":"/code-harbor-hub/courses/javascript/javascript-learning-path"},{"id":"index","title":"Welcome to our Courses","description":"Our courses are designed to help you learn new skills and advance your career. Whether you are a beginner or an experienced professional, our courses can help you gain the knowledge and skills you need to succeed.","permalink":"/code-harbor-hub/courses/"},{"id":"react-js/react-js-learning-path","title":"Welcome to React.js Learning Path","description":"Welcome to the React.js Learning Path! In this path, you will learn the fundamentals of React.js, including components, props, state, and more. You will also learn how to build interactive web applications, create dynamic user interfaces, and develop modern web applications using React.js. Let\'s get started!","permalink":"/code-harbor-hub/courses/react-js/react-js-learning-path"},{"id":"react-js/begginer-level/intro-to-react/react-intro-lesson-1","title":"What is React and why use it?","description":"In this lesson, we will learn what React is and why we should use it. We will also learn about the history of React and its features.","permalink":"/code-harbor-hub/courses/react-js/begginer-level/intro-to-react/react-intro-lesson-1"}],"unlisted":false}')}}]);